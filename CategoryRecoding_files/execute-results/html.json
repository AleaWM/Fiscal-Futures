{
  "hash": "62bf34ec00f445aa4cd6ed294d41cf91",
  "result": {
    "markdown": "# Category Recoding\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(formatR)\nlibrary(lubridate)\nlibrary(smooth)\nlibrary(forecast)\nlibrary(scales)\nlibrary(kableExtra)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(quantmod)\nlibrary(geofacet)\nlibrary(janitor)\n\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, eval=FALSE)\n\nexp_temp <- read_csv(\"exp_temp.csv\")\nrev_temp <- read_csv(\"rev_temp.csv\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nexp_temp <- exp_temp %>%\n  #mutate(agency = as.numeric(agency) ) %>%\n  # arrange(agency)%>%\n  mutate(\n    group = case_when(\n      agency>\"100\"& agency<\"200\" ~ \"910\", # legislative\n      \n      agency == \"528\"  | (agency>\"200\" & agency<\"300\") ~ \"920\", # judicial\n      pension>0  ~ \"901\", # pensions\n      (agency>\"309\" & agency<\"400\") ~ \"930\",    # elected officers\n      \n      agency == \"586\" ~ \"959\", # create new K-12 group\n\n      agency==\"402\" | agency==\"418\" | agency==\"478\" | agency==\"444\" | agency==\"482\" ~ as.character(agency), # aging, CFS, HFS, human services, public health\n      T ~ as.character(group))\n    ) %>%      \n\n  \n  mutate(group = case_when(\n    agency==\"478\" & (appr_org==\"01\" | appr_org == \"65\" | appr_org==\"88\") & (object==\"4900\" | object==\"4400\") ~ \"945\", # separates CHIP from health and human services and saves it as Medicaid\n    \n    agency == \"586\" & fund == \"0355\" ~ \"945\",  # 586 (Board of Edu) has special education which is part of medicaid\n    \n    # OLD CODE: agency == \"586\" & appr_org == \"18\" ~ \"945\", # Spec. Edu Medicaid Matching\n    \n    agency==\"425\" | agency==\"466\" | agency==\"546\" | agency==\"569\" | agency==\"578\" | agency==\"583\" | agency==\"591\" | agency==\"592\" | agency==\"493\" | agency==\"588\" ~ \"941\", # public safety & Corrections\n    \n    agency==\"420\" | agency==\"494\" |  agency==\"406\" | agency==\"557\" ~ as.character(agency), # econ devt & infra, tollway\n    \n    agency==\"511\" | agency==\"554\" | agency==\"574\" | agency==\"598\" ~ \"946\",  # Capital improvement\n    \n    agency==\"422\" | agency==\"532\" ~ as.character(agency), # environment & nat. resources\n    \n    agency==\"440\" | agency==\"446\" | agency==\"524\" | agency==\"563\"  ~ \"944\", # business regulation\n    \n    agency==\"492\" ~ \"492\", # revenue\n    \n    agency == \"416\" ~ \"416\", # central management services\n    agency==\"448\" & fy > 2016 ~ \"416\", #add DoIT to central management \n    \n    T ~ as.character(group))) %>%\n  \n  \n  mutate(group = case_when(\n    # agency==\"684\" | agency==\"691\"  ~ as.character(agency), # moved under higher education in next line. 11/28/2022 AWM\n    \n    agency==\"692\" | agency==\"695\" | agency == \"684\" |agency == \"691\" | (agency>\"599\" & agency<\"677\") ~ \"960\", # higher education\n    \n    agency==\"427\"  ~ as.character(agency), # employment security\n    \n    agency==\"507\"|  agency==\"442\" | agency==\"445\" | agency==\"452\" |agency==\"458\" | agency==\"497\" ~ \"948\", # other departments\n    \n    # other boards & Commissions\n    agency==\"503\" | agency==\"509\" | agency==\"510\" | agency==\"565\" |agency==\"517\" | agency==\"525\" | agency==\"526\" | agency==\"529\" | agency==\"537\" | agency==\"541\" | agency==\"542\" | agency==\"548\" |  agency==\"555\" | agency==\"558\" | agency==\"559\" | agency==\"562\" | agency==\"564\" | agency==\"568\" | agency==\"579\" | agency==\"580\" | agency==\"587\" | agency==\"590\" | agency==\"527\" | agency==\"585\" | agency==\"567\" | agency==\"571\" | agency==\"575\" | agency==\"540\" | agency==\"576\" | agency==\"564\" | agency==\"534\" | agency==\"520\" | agency==\"506\" | agency == \"533\" ~ \"949\", \n    \n    # non-pension expenditures of retirement funds moved to \"Other Departments\"\n    # should have removed pension expenditures already from exp_temp in Pensions step above\n    agency==\"131\" | agency==\"275\" | agency==\"589\" |agency==\"593\"|agency==\"594\"|agency==\"693\" ~ \"948\",\n    \n    T ~ as.character(group))) %>%\n\n  mutate(group_name = \n           case_when(\n             group == \"416\" ~ \"Central Management\",\n             group == \"478\" ~ \"Healthcare and Family Services\",\n             group == \"482\" ~ \"Public Health\",\n             group == \"900\" ~ \"NOT IN FRAME\",\n             group == \"901\" ~ \"STATE PENSION CONTRIBUTION\",\n             group == \"903\" ~ \"DEBT SERVICE\",\n             group == \"910\" ~ \"LEGISLATIVE\"  ,\n             group == \"920\" ~ \"JUDICIAL\" ,\n             group == \"930\" ~ \"ELECTED OFFICERS\" , \n             group == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             group == \"941\" ~ \"PUBLIC SAFETY\" ,\n             group == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n             group == \"943\" ~ \"CENTRAL SERVICES\",\n             group == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             group == \"945\" ~ \"MEDICAID\" ,\n             group == \"946\" ~ \"CAPITAL IMPROVEMENT\" , \n             group == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n             group == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             group == \"959\" ~ \"K-12 EDUCATION\" ,\n             group == \"960\" ~ \"UNIVERSITY EDUCATION\" ,\n             group == agency ~ as.character(group),\n             TRUE ~ \"Check name\"),\n         year = fy)\n\nexp_temp %>% filter(group_name == \"Check name\")\n\n#write_csv(exp_temp, \"all_expenditures_recoded.csv\")\n```\n:::\n\n\nAll expenditures recoded but not aggregated: Allows for inspection of individual expenditures within larger categories. This stage of the data is extremely useful for investigating almost all questions we have about the data.\n\nNote that these are the raw figures BEFORE we take the additional steps:\n\n-   Subtract tax refunds from tax revenues by revenue type.\n\n### Federal to State Transfers\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#rev_temp <- rev_temp %>% filter(in_ff==1)\n\nrev_temp <- rev_temp %>% \n  mutate(\n    rev_type = ifelse(rev_type==\"57\" & agency==\"478\" & (source==\"0618\"|source==\"2364\"|source==\"0660\"|source==\"1552\"| source==\"2306\"| source==\"2076\"|source==\"0676\"|source==\"0692\"), \"58\", rev_type),\n    rev_type_name = ifelse(rev_type==\"58\", \"Federal Medicaid Reimbursements\", rev_type_name),\n    rev_type = ifelse(rev_type==\"57\" & agency==\"494\", \"59\", rev_type),\n    rev_type_name = ifelse(rev_type==\"59\", \"Federal Transportation\", rev_type_name),\n    rev_type_name = ifelse(rev_type==\"57\", \"Federal - Other\", rev_type_name),\n    rev_type = ifelse(rev_type==\"6\", \"06\", rev_type),\n    rev_type = ifelse(rev_type==\"9\", \"09\", rev_type)) \n\nrev_temp %>% \n  filter(rev_type == \"58\" | rev_type == \"59\" | rev_type == \"57\") %>% \n  group_by(fy, rev_type, rev_type_name) %>% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000) %>% \n  ggplot() +\n  geom_line(aes(x=fy, y=receipts,color=rev_type_name)) +\n      theme_bw() +\n  scale_y_continuous(labels = comma)+\n  labs(title = \"Federal to State Transfers\", \n       y = \"Millions of Dollars\", x = \"\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  )\n```\n:::\n\n\nLooking at Federal Revenue:\n\nAll revenue sources within \"Federal - Other\" source.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrev_temp %>% filter(rev_type == \"57\" & fy >2018) %>% group_by(fund_name, source_name_AWM,  fy) %>% summarize(receipts =sum(receipts)) %>% arrange(-receipts) %>% pivot_wider(names_from = fy, values_from = receipts)\n\nfed_rev_compare <- rev_temp %>% filter((rev_type == \"57\" | rev_type == \"58\" | rev_type == \"59\") & (fy == 2022 | fy==2021 | fy==2020 | fy == 2019)) %>%  arrange(-receipts)\nwrite_csv(fed_rev_compare, \"comparefedrev.csv\")\n\n\nrev_temp %>% filter(source_name_AWM == \"FEDERAL STIMULUS PACKAGE\") %>% group_by(fy, fund_name) %>% summarize(receipts =sum(receipts)) %>% arrange(-fy)\n\nrev_temp %>% filter(fy > 2018 & source_name_AWM == \"FEDERAL STIMULUS PACKAGE\") %>% group_by(fund_name, fy) %>% summarize(receipts =sum(receipts)) %>% arrange(-receipts)\n\nrev_temp %>% filter(rev_type == \"57\" & fy > 2018 & fund_name == \"SBE FEDERAL DEPT OF EDUCATION\") %>% group_by(source_name_AWM , fund_name, fy) %>% summarize(receipts =sum(receipts)) %>% arrange(-receipts)\n\nexp_temp %>% filter(fy >2019 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\" | fund_name == \"SBE FEDERAL DEPT OF EDUCATION\" | fund_name == \"DISASTER RESPONSE AND RECOVERY\" | fund_name == \"ESSENTIAL GOVT SERV SUPPORT\" )) %>% group_by(fy, agency_name, wh_approp_name, fund_name) %>% \n  summarize(sum=sum(expenditure),\n            appropriated = sum(appn_net_xfer)) %>% \n  arrange(-appropriated)\n\nexp_temp %>% filter(fy >2019 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\" | fund_name == \"SBE FEDERAL DEPT OF EDUCATION\" | fund_name == \"DISASTER RESPONSE AND RECOVERY\" | fund_name == \"ESSENTIAL GOVT SERV SUPPORT\" )) %>% group_by(fy, wh_approp_name, fund_name) %>% \n  summarize(sum=sum(expenditure),\n            appropriated = sum(appn_net_xfer)) %>% \n  arrange(-appropriated)\n\n\nexp_temp %>% filter(fy >2019 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\" | fund_name == \"SBE FEDERAL DEPT OF EDUCATION\" | fund_name == \"DISASTER RESPONSE AND RECOVERY\" | fund_name == \"ESSENTIAL GOVT SERV SUPPORT\" )) %>% group_by(fund_name, fy, agency_name) %>% \n  summarize(sum=sum(expenditure),\n            appropriated = sum(appn_net_xfer)) %>% \n  arrange(-appropriated)\n\nexp_temp %>% filter(fy == 2022 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(org_name, agency_name, object, wh_approp_name, fund_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n\nexp_temp %>% filter(fy == 2022 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(agency_name, object, wh_approp_name, fund_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n\nexp_temp %>% filter(fy == 2022 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(fund_name, object, org_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n\n\nexp_temp %>% filter(fy == 2022 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(fund_name, agency_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n\nexp_temp %>% filter(fy == 2022 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(agency_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n\nexp_temp %>% filter(fy == 2021 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(wh_approp_name, fund_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n```\n:::\n\n\n**Dropping State CURE Revenue**\n\nThe Fiscal Futures model focuses on sustainable revenue sources. To understand our fiscal gap and outlook, we need to exclude these one time revenues. GOMB has emphasized that they have allocated COVID dollars to one time expenditures (unemployment trust fund, budget stabilization fund, etc.). The fiscal gap, graphs,and CAGRs have been recalculated in the \\[Drop COVID Dollars\\] section below. In addition, an attempt at forecasting revenue and expenditures is also made after dropping the federal COVID dollars.\n\n> NOTE: I have only dropped State and Local CURE revenue so far. Federal money went into other funds during the beginning of pandemic.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrev_temp <- rev_temp %>% mutate(covid_dollars = ifelse(source_name_AWM == \"FEDERAL STIMULUS PACKAGE\",1,0))\n```\n:::\n\n\n### Health Insurance Premiums from Employees\n\nInsurance premiums for employees is coded below but it is NOT used in the fiscal futures model. Employee and employer premiums are considered rev_51 and dropped from analysis in later step.\n\n0120 = ins prem-option life\\\n0120 = ins prem-optional life/univ\n\n0347 = optional health - HMO\\\n0348 = optional health - dental\\\n0349 = optional health - univ/local SI\\\n0350 = optional health - univ/local\\\n0351 = optional health - retirement\\\n0352 = optional health - retirement SI\\\n0353 = optional health - retire/dental\\\n0354 = optional health - retirement hmo\n\n2199-2209 = various HMOs, dental, health plans from Health Insurance Reserve (fund)\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#collect optional insurance premiums to fund 0907 for use in eehc expenditure  \nrev_temp <- rev_temp %>% \n  mutate(\n    #variable not used in aggregates, but could be interesting for other purposes\n    employee_premiums = ifelse(fund==\"0907\" & (source==\"0120\"| source==\"0121\"| (source>\"0345\" & source<\"0357\")|(source>\"2199\" & source<\"2209\")), 1, 0),\n    \n    # adds more rev_type codes\n    rev_type = case_when(\n      fund ==\"0427\" ~ \"12\", # pub utility tax\n      fund == \"0742\" | fund == \"0473\" ~ \"24\", # insurance and fees\n      fund == \"0976\" ~ \"36\",# receipts from rev producing\n      fund == \"0392\" |fund == \"0723\" ~ \"39\", # licenses and fees\n      fund == \"0656\" ~ \"78\", #all other rev sources\n      TRUE ~ as.character(rev_type)))\n# if not mentioned, then rev_type as it was\n\n\n\n# # optional insurance premiums = employee insurance premiums\n\n# emp_premium <- rev_temp %>%\n#   group_by(fy, employee_premiums) %>%\n#   summarize(employee_premiums_sum = sum(receipts)/1000000) %>%\n#   filter(employee_premiums == 1) %>%\n#   rename(year = fy) %>% \n#   select(-employee_premiums)\n\nemp_premium_long <- rev_temp %>%  filter(employee_premiums == 1)\n# 381 observations have employee premiums == 1\n\n\n# drops employee premiums from revenue\n# rev_temp <- rev_temp %>% filter(employee_premiums != 1)\n# should be dropped in next step since rev_type = 51\n```\n:::\n\n\nEmployee premiums are dropped in the following steps. In FY21, employee premiums were subtracted from state healthcare costs on the expenditure side to calculate a \"Net Healthcare Cost\" but that methodology has been discontinued. Totals were practically unchanged: revenue from employee premiums is also very small.\n\n### Transfers in and Out:\n\nFunds that hold and disperse local taxes or fees are dropped from the analysis. Then other excluded revenue types are also dropped.\n\nDrops Blank, Student Fees, Retirement contributions, proceeds/investments, bond issue proceeds, interagency receipts, cook IGT, Prior year refunds:\n\n**I don't have much faith in the transfers in and out steps- AWM**\n\nI am currently choosing to exclude the totals from this step. Overall, this decreases the total revenues in \"All Other Revenues\" by a few million dollars.\n\n-   in_from_out \\<- c(\"0847\", \"0867\", \"1175\", \"1176\", \"1177\", \"1178\", \"1181\", \"1182\", \"1582\", \"1592\", \"1745\", \"1982\", \"2174\", \"2264\")\\\n-   See the methodology document for the list of what these sources/funds are.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrev_temp <- rev_temp %>% \n  filter(in_ff == 1) %>% \n  mutate(local = ifelse(is.na(local), 0, local)) %>% # drops all revenue observations that were coded as \"local == 1\"\n  filter(local != 1)\n\n# 1175 doesnt exist?\nin_from_out <- c(\"0847\", \"0867\", \"1175\", \"1176\", \"1177\", \"1178\", \"1181\", \"1182\", \"1582\", \"1592\", \"1745\", \"1982\", \"2174\", \"2264\")\n\n# what does this actually include:\n# all are items with rev_type = 75 originally. \nin_out_df <- rev_temp %>%\n  mutate(infromout = ifelse(source %in% in_from_out, 1, 0)) %>%\n  filter(infromout == 1)\n\nrev_temp <- rev_temp %>% \n  mutate(rev_type_new = ifelse(source %in% in_from_out, \"76\", rev_type))\n# if source contains any of the codes in in_from_out, code them as 76 (all other rev).\n# I end up excluding rev_76 in later steps\n```\n:::\n\n\nCorporate income tax Individual Income Tax Pass-Through (source =2582) was over 2 billion. The PTE tax allows a workaround to the federal \\$10,000 limitation for state and local tax (SALT) deductions and expires Jan 1. 2026 (to correspond with remaining years that the Tax Cuts and Jobs Act SALT limitation is in effect) [Tax Adviser](https://www.thetaxadviser.com/issues/2021/sep/illinois-passthrough-entity-tax-salt-cap-workaround.html). With the enactment of the Tax Cuts and Jobs Act of 2017 (\"TCJA\"), individual taxpayers were limited to a \\$10,000 state and local tax deduction per year. In response to this limitation, many states created a workaround mechanism, introducing a pass-through entity tax (\"PTET\"). This shifted the state and local tax deduction from an individual taxpayer to the entity level that is not subject to the \\$10,000 limitation. Implications: Illinois residents in multistate passthrough entities will need to pay estimated taxes on income that is not subject to the SALT cap tax. TCJA of 2017 decreased\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# revenue types to drop\ndrop_type <- c(\"32\", \"45\", \"51\", \n               \"66\", \"72\", \"75\", \"79\", \"98\")\n\n# drops Blank, Student Fees, Retirement contributions, proceeds/investments,\n# bond issue proceeds, interagency receipts, cook IGT, Prior year refunds.\n\n\nrev_temp <- rev_temp %>% filter(!rev_type_new %in% drop_type)\n# keep observations that do not have a revenue type mentioned in drop_type\n\ntable(rev_temp$rev_type_new)\n\nrev_temp %>% \n  group_by(fy, rev_type_new) %>% \n  summarize(total_reciepts = sum(receipts)/1000000) %>%\n  pivot_wider(names_from = rev_type_new, values_from = total_reciepts, names_prefix = \"rev_\") \n\n# combines smallest 4  categories to to \"Other\"\n# they were the 4 smallest in past years, are they still the 4 smallest? \n\nrev_temp <- rev_temp %>%  \n mutate(rev_type_new = ifelse(rev_type==\"30\" | rev_type==\"60\" | rev_type==\"63\" | rev_type==\"76\", \"78\", rev_type_new))\n\n\n#table(rev_temp$rev_type_new)  # check work\n\n\n\nrm(rev_1998_2022)\nrm(exp_1998_2022)\n\n\n#write.csv(exp_temp, \"exp_fy22_recoded_12192022.csv\")\n#write.csv(rev_temp, \"rev_fy22_recoded_12192022.csv\")\n```\n:::\n\n\n## Pivoting and Merging\n\n-   Local Government Transfers (exp_970) should be on the expenditure side\n\n-   ~~State employer group insurance contributions should be dropped to avoid double counting both the state.~~ Do not do this. This was done for FY21 only and will not be done again.\\\n\n-   ~~Subtract employee insurance premiums from State Employee Healthcare Expenditures (group == 904) - Employee Premiums = Actual state healthcare costs.~~\\\n\n-   ~~ff_exp~~$exp904 − emp_premium$employee_premiums_sum = statehealthcarecosts\n\n    -   Did in FY21, but not doing again. Minor difference in fiscal gap overall from change in methodology.\n\n### Revenues\n\nI chose to drop rev_76 for Transfers in and Out because I do not understand why that step occurs in the previously used Stata code. Rev_76 was created and included in rev_78 for All Other Revenues in old Stata code for years before FY21 but that method has been discontinued for FY22.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nff_rev <- rev_temp %>% \n  group_by(rev_type_new, fy) %>% \n  summarize(sum_receipts = sum(receipts, na.rm=TRUE)/1000000 ) %>%\n  pivot_wider(names_from = \"rev_type_new\", values_from = \"sum_receipts\", names_prefix = \"rev_\")\n\nff_rev<- left_join(ff_rev, tax_refund)\n\n#ff_rev <- left_join(ff_rev, pension2_fy22, by=c(\"fy\" = \"year\"))\n\n#ff_rev <- left_join(ff_rev, eehc2_amt) \nff_rev <- mutate_all(ff_rev, ~replace_na(.,0))\n\n\nff_rev <- ff_rev %>%\n  mutate(rev_02 = rev_02 - ref_02,\n         rev_03 = rev_03 - ref_03,\n         rev_06 = rev_06 - ref_06,\n         rev_09 = rev_09 - ref_09,\n         rev_21 = rev_21 - ref_21,\n         rev_24 = rev_24 - ref_24,\n         rev_35 = rev_35 - ref_35\n\n      #   rev_78new = rev_78 #+ pension_amt #+ eehc\n         ) %>% \n  select(-c(ref_02:ref_35, rev_99, rev_NA, rev_76#, pension_amt , rev_76,\n          #  , eehc\n            ))\n\nff_rev\n```\n:::\n\n\nSince I already pivot_wider()ed the table in the previous code chunk, I now change each column's name by using rename() to set new variable names. Ideally the final dataframe would have both the variable name and the variable label but I have not done that yet.\n\n\n::: {.cell}\n\n```{.r .cell-code}\naggregate_rev_labels <- ff_rev %>%\n  rename(\"INDIVIDUAL INCOME TAXES, gross of local, net of refunds\" = rev_02,\n         \"CORPORATE INCOME TAXES, gross of PPRT, net of refunds\" = rev_03,\n         \"SALES TAXES, gross of local share\" = rev_06 ,\n         \"MOTOR FUEL TAX, gross of local share, net of refunds\" = rev_09 ,\n         \"PUBLIC UTILITY TAXES, gross of PPRT\" = rev_12,\n         \"CIGARETTE TAXES\" = rev_15 ,\n         \"LIQUOR GALLONAGE TAXES\" = rev_18,\n         \"INHERITANCE TAX\" = rev_21,\n         \"INSURANCE TAXES&FEES&LICENSES, net of refunds\" = rev_24 ,\n         \"CORP FRANCHISE TAXES & FEES\" = rev_27,\n       # \"HORSE RACING TAXES & FEES\" = rev_30,  # in Other\n         \"MEDICAL PROVIDER ASSESSMENTS\" = rev_31 ,\n         # \"GARNISHMENT-LEVIES \" = rev_32 , # dropped\n         \"LOTTERY RECEIPTS\" = rev_33 ,\n         \"OTHER TAXES\" = rev_35,\n         \"RECEIPTS FROM REVENUE PRODUCNG\" = rev_36, \n         \"LICENSES, FEES & REGISTRATIONS\" = rev_39 ,\n         \"MOTOR VEHICLE AND OPERATORS\" = rev_42 ,\n         #  \"STUDENT FEES-UNIVERSITIES\" = rev_45,   # dropped\n         \"RIVERBOAT WAGERING TAXES\" = rev_48 ,\n         # \"RETIREMENT CONTRIBUTIONS \" = rev_51, # dropped\n         \"GIFTS AND BEQUESTS\" = rev_54, \n         \"FEDERAL OTHER\" = rev_57 ,\n         \"FEDERAL MEDICAID\" = rev_58, \n         \"FEDERAL TRANSPORTATION\" = rev_59 ,\n         #\"OTHER GRANTS AND CONTRACTS\" = rev_60, #other\n       # \"INVESTMENT INCOME\" = rev_63, # other\n         # \"PROCEEDS,INVESTMENT MATURITIES\" = rev_66 , #dropped\n         # \"BOND ISSUE PROCEEDS\" = rev_72,  #dropped\n         # \"INTER-AGENCY RECEIPTS\" = rev_75,  #dropped\n      #  \"TRANSFER IN FROM OUT FUNDS\" = rev_76,  #other\n         \"ALL OTHER SOURCES\" = rev_78,\n         # \"COOK COUNTY IGT\" = rev_79, #dropped\n         # \"PRIOR YEAR REFUNDS\" = rev_98 #dropped\n  ) \n\naggregate_rev_labels\n```\n:::\n\n\n### Expenditures\n\nCreate exp_970 for all local government transfers (exp_971 + exp_972 + exp_975 + exp_976).\n\n~~Create state employee healthcare costs that reflects the health costs minus the optional insurance premiums that came in (904_new=904−med_option_amt_recent).~~ Do not do this. This was done for FY21 only and will not be done again. Small differences in overall Fiscal Gap from methodology change.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nff_exp <- exp_temp %>% \n  group_by(fy, group) %>% \n  summarize(sum_expenditures = sum(expenditure, na.rm=TRUE)/1000000 ) %>%\n  pivot_wider(names_from = \"group\", values_from = \"sum_expenditures\", names_prefix = \"exp_\")%>%\n  \n    left_join(debt_keep_yearly) %>%\n  mutate(exp_903 = debt_cost) %>%\n\n  #  left_join(healthcare_costs_yearly) %>%\n\n  # join state employee healthcare and subtract employee premiums\n  # left_join(emp_premium, by = c(\"fy\" = \"year\")) %>%\n#  mutate(exp_904_new = (`healthcare_cost` - `employee_premiums_sum`)) %>% # state employee healthcare premiums\n  \n # left_join(retirement_contributions) %>%\n  #    mutate(exp_901_new = exp_901 - contributions/1000000) %>% #employee pension contributions\n\n\n  # join local transfers and create exp_970\n  left_join(transfers) %>%\n  mutate(exp_970 = exp_971 + exp_972  + exp_975 + exp_976)\n\nff_exp<- ff_exp %>% select(-c(debt_cost, exp_971:exp_976)) # drop unwanted columns\nff_exp\n```\n:::\n\n\n\n\n# Clean Table Outputs\n\nCreate total revenues and total expenditures only:\n\n-   after aggregating expenditures and revenues, pivoting wider, then I want to drop the columns that I no longer want and then pivot_longer(). After pivoting_longer() and creating `rev_long` and `exp_long`, expenditures and revenues are in the same format and can be combined together for the totals and gap each year.\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrev_long <- pivot_longer(ff_rev, rev_02:rev_78, names_to = c(\"type\",\"Category\"), values_to = \"Dollars\", names_sep = \"_\") %>% \n  rename(Year = fy) %>%\n  mutate(Category_name = case_when(\n    Category == \"02\" ~ \"INDIVIDUAL INCOME TAXES\" ,\n    Category == \"03\" ~ \"CORPORATE INCOME TAXES\" ,\n    Category == \"06\" ~ \"SALES TAXES\" ,\n    Category == \"09\" ~ \"MOTOR FUEL TAX\" ,\n    Category == \"12\" ~ \"PUBLIC UTILITY TAXES\" ,\n    Category == \"15\" ~ \"CIGARETTE TAXES\" ,\n    Category == \"18\" ~ \"LIQUOR GALLONAGE TAXES\" ,\n    Category == \"21\" ~ \"INHERITANCE TAX\" ,\n    Category == \"24\" ~ \"INSURANCE TAXES&FEES&LICENSES\" ,\n    Category == \"27\" ~ \"CORP FRANCHISE TAXES & FEES\" ,\n    Category == \"30\" ~ \"HORSE RACING TAXES & FEES\",  # in Other\n    Category == \"31\" ~ \"MEDICAL PROVIDER ASSESSMENTS\" ,\n    Category == \"32\" ~ \"GARNISHMENT-LEVIES\" , # dropped\n    Category == \"33\" ~  \"LOTTERY RECEIPTS\" ,\n    Category == \"35\" ~  \"OTHER TAXES\" ,\n    Category == \"36\" ~  \"RECEIPTS FROM REVENUE PRODUCING\", \n    Category == \"39\" ~  \"LICENSES, FEES & REGISTRATIONS\" ,\n    Category == \"42\" ~  \"MOTOR VEHICLE AND OPERATORS\" ,\n    Category == \"45\" ~  \"STUDENT FEES-UNIVERSITIES\",   # dropped\n    Category == \"48\" ~  \"RIVERBOAT WAGERING TAXES\" ,\n    Category == \"51\" ~  \"RETIREMENT CONTRIBUTIONS\" , # dropped\n    Category == \"54\" ~ \"GIFTS AND BEQUESTS\", \n    Category == \"57\" ~  \"FEDERAL OTHER\" ,\n    Category == \"58\" ~  \"FEDERAL MEDICAID\", \n    Category == \"59\" ~  \"FEDERAL TRANSPORTATION\" ,\n    Category == \"60\" ~  \"OTHER GRANTS AND CONTRACTS\", #other\n    Category == \"63\" ~  \"INVESTMENT INCOME\", # other\n    Category == \"66\" ~ \"PROCEEDS,INVESTMENT MATURITIES\" , #dropped\n    Category == \"72\" ~ \"BOND ISSUE PROCEEDS\",  #dropped\n    Category == \"75\" ~  \"INTER-AGENCY RECEIPTS \",  #dropped\n    Category == \"76\" ~  \"TRANSFER IN FROM OUT FUNDS\",  #other\n    Category == \"78\" ~  \"ALL OTHER SOURCES\" ,\n    Category == \"79\" ~   \"COOK COUNTY IGT\", #dropped\n    Category == \"98\" ~  \"PRIOR YEAR REFUNDS\", #dropped\n                 T ~ \"Check Me!\"\n\n  ) )%>% \n  mutate(Category_name = str_to_title(Category_name))\n\n\nexp_long <- pivot_longer(ff_exp, exp_402:exp_970 , names_to = c(\"type\", \"Category\"), values_to = \"Dollars\", names_sep = \"_\") %>% \n  rename(Year = fy ) %>% \n  mutate(Category_name = \n           case_when(\n             Category == \"402\" ~ \"AGING\" ,\n             Category == \"406\" ~ \"AGRICULTURE\", \n             Category == \"416\" ~ \"CENTRAL MANAGEMENT\",\n             Category == \"418\" ~ \"CHILDREN AND FAMILY SERVICES\", \n             Category == \"420\" ~ \"COMMERCE AND ECONOMIC OPPORTUNITY\",\n             Category == \"422\" ~ \"NATURAL RESOURCES\" ,\n             Category == \"426\" ~ \"CORRECTIONS\",\n             Category == \"427\" ~ \"EMPLOYMENT SECURITY\" ,\n             Category == \"444\" ~ \"HUMAN SERVICES\" ,\n             Category == \"448\" ~ \"Innovation and Technology\", # AWM added fy2022\n             Category == \"478\" ~ \"FAMILY SERVICES net Medicaid\", \n             Category == \"482\" ~ \"PUBLIC HEALTH\", \n             Category == \"492\" ~ \"REVENUE\", \n             Category == \"494\" ~ \"TRANSPORTATION\" ,\n             Category == \"532\" ~ \"ENVIRONMENTAL PROTECT AGENCY\" ,\n             Category == \"557\" ~ \"IL STATE TOLL HIGHWAY AUTH\" ,\n             Category == \"684\" ~ \"IL COMMUNITY COLLEGE BOARD\", \n             Category == \"691\" ~ \"IL STUDENT ASSISTANCE COMM\" ,\n             Category == \"900\" ~ \"NOT IN FRAME\",\n             Category == \"901\" ~ \"STATE PENSION CONTRIBUTION\",\n             Category == \"903\" ~ \"DEBT SERVICE\",\n             Category == \"904\" ~ \"State Employee Healthcare\",\n             Category == \"910\" ~ \"LEGISLATIVE\"  ,\n             Category == \"920\" ~ \"JUDICIAL\" ,\n             Category == \"930\" ~ \"ELECTED OFFICERS\" , \n             Category == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             Category == \"941\" ~ \"PUBLIC SAFETY\" ,\n             Category == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n             Category == \"943\" ~ \"CENTRAL SERVICES\",\n             Category == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             Category == \"945\" ~ \"MEDICAID\" ,\n             Category == \"946\" ~ \"CAPITAL IMPROVEMENT\" , \n             Category == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n             Category == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             Category == \"959\" ~ \"K-12 EDUCATION\" ,\n             Category == \"960\" ~ \"UNIVERSITY EDUCATION\",\n             Category == \"970\" ~ \"Local Govt Transfers\",\n             T ~ \"CHECK ME!\")\n           ) %>% \n  mutate(Category_name = str_to_title(Category_name))\n\n#write_csv(exp_long, \"expenditures_recoded_long_FY22.csv\")\n#write_csv(rev_long, \"revenue_recoded_long_FY22.csv\")\n\naggregated_totals_long <- rbind(rev_long, exp_long)\naggregated_totals_long\n\n\n\nyear_totals <- aggregated_totals_long %>% \n  group_by(type, Year) %>% \n  summarize(Dollars = sum(Dollars, na.rm = TRUE)) %>% \n  pivot_wider(names_from = \"type\", values_from = Dollars) %>% \n\n  rename(\n         Expenditures = exp,\n         Revenue = rev) %>%  \n  mutate(`Fiscal Gap` = round(Revenue - Expenditures))\n# %>%  arrange(desc(Year))\n# creates variable for the Gap each year\n\nyear_totals  %>%  \n  kbl(caption = \"Fiscal Gap for each Fiscal Year\") %>% \n  kable_styling(bootstrap_options = c(\"striped\"))  %>%\nkable_classic() %>%   add_footnote(c(\"Methodology has changed since past publications\",\"Values include State and Local CURE dollars\"))\n```\n:::\n\n\n\n\n# Graphs\n\nGraphs made from `aggregated_totals_long` dataframe.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nannotation <- data.frame(\n  x = c(2004, 2017, 2019),\n  y = c(60000, 50000, 5000),  \n  label = c(\"Expenditures\",\"Revenue\", \"Fiscal Gap\")\n)\n\n# with trend lines:\nyear_totals %>%  \n  ggplot() +\n  # geom_smooth adds regression line, graphed first so it appears behind line graph\n  geom_smooth(aes(x = Year, y = Revenue), color = \"rosybrown2\", alpha = 0.7, method = \"lm\", se = FALSE) + \n  geom_smooth(aes(x = Year, y = Expenditures), color = \"gray\", method = \"lm\", se = FALSE) +\n  \n  # line graph of revenue and expenditures\n  geom_line(aes(x = Year, y = Revenue), color = \"Black\", size=1) +\n  geom_line(aes(x = Year, y = Expenditures), color = \"red\", size=1) +\n  \n  # labels\n    theme_bw() +\n  scale_y_continuous(labels = comma)+\n  xlab(\"Year\") + \n  ylab(\"Millions of Dollars\")  +\n  ggtitle(\"Illinois Expenditures and Revenue Totals, 1998-2022\")\n\n\n# without trend lines:\nyear_totals %>%  \n  ggplot() +\n  # line graph of revenue and expenditures\n  geom_line(aes(x = Year, y = Revenue), color = \"Black\", size=1) +\n  geom_line(aes(x = Year, y = Expenditures), color = \"red\", size=1) +\n      theme_bw() +\n  scale_y_continuous(labels = comma)+\n  xlab(\"Year\") + \n  ylab(\"Millions of Dollars\")  +\n  ggtitle(\"Illinois Expenditures and Revenue Totals, 1998-2022\")\n\n\n\nfiscal_gap <- year_totals %>%  \n  ggplot() +\n  geom_hline(yintercept = 0) +\n  # geom_smooth adds regression line, graphed first so it appears behind line graph\n  geom_smooth(aes(x = Year, y = Revenue), color = \"gray\", alpha = 0.7, method = \"lm\", se = FALSE) + \n  #  scale_linetype_manual(values=\"dashed\")+\n  geom_smooth(aes(x = Year, y = Expenditures), color =\"rosybrown2\", linetype = \"dashed\", method = \"lm\", se = FALSE, alpha = 0.7) +\n\n  # line graph of revenue and expenditures\n  geom_line(aes(x = Year, y = Revenue), color = \"Black\", size=1) +\n  geom_line(aes(x = Year, y = Expenditures, linetype = \"dashed\"), color = \"red\", lwd=1) +\n  geom_line(aes(x = Year, y = `Fiscal Gap`), color = \"gray\") +\n  \n  geom_text(data = annotation, aes(x=x, y=y, label=label))+\n  # labels\n    theme_bw() +\n    theme(legend.position = \"none\")+\n\n    scale_linetype_manual(values = c(\"dashed\", \"dashed\")) +\n\n  scale_y_continuous(labels = comma)+\n  xlab(\"Year\") + \n  ylab(\"Millions of Dollars\")  +\n  ggtitle(\"Illinois Expenditures and Revenue Totals, 1998-2022\")\n\nfiscal_gap\n\n\n\nannotation_billions <- data.frame(\n  x = c(2004, 2017, 2019),\n  y = c(60, 50, 5),  \n  label = c(\"Expenditures\",\"Revenue\", \"Fiscal Gap\")\n)\nfiscal_gap2 <- year_totals %>%  \n  ggplot() +\n  geom_hline(yintercept = 0) +\n  geom_line(aes(x = Year, y = Revenue/1000), color = \"Black\", lwd=1) +\n  geom_line(aes(x = Year, y = Expenditures/1000, linetype = \"dashed\"), color = \"red\", lwd=1) +\n  geom_line(aes(x = Year, y = `Fiscal Gap`/1000), color = \"gray\") +\n  \n  geom_text(data = annotation, aes(x=x, y=y/1000, label=label))+\n    theme_bw() +\n  theme(legend.position = \"none\")+\n    scale_linetype_manual(values = c(\"dashed\", \"dashed\")) +\n\n  scale_y_continuous(labels = comma)+\n  xlab(\"Year\") + \n  ylab(\"Billions of Dollars\")  +\n  ggtitle(\"Illinois Expenditures and Revenue Totals, 1998-2022\")\n\nfiscal_gap2\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\naggregated_totals_long %>%  \n  filter(type == \"exp\") %>% # uses only expenditures\n  ggplot(aes(x = Year, y = Dollars, group = Category, color = Category)) +\n  geom_line()+\n    xlab(\"Year\") + \n    ylab(\"Millions of Dollars\")  +\n    ggtitle(\"Illinois Expenditures by Category\")\n\naggregated_totals_long %>%  \n  filter(type == \"rev\") %>% #uses only revenues\n  ggplot(aes(x = Year, y = Dollars, group = Category, color = Category)) +\n  geom_line()+\n    xlab(\"Year\") + \n    ylab(\"Millions of Dollars\")  +\n    ggtitle(\"Illinois Revenues by Category\")\n```\n:::\n\n\n**Expenditure and revenue amounts in millions of dollars:**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp_long %>%\n  filter(Year == 2022) %>%\n  #mutate(`Total Expenditures`= sum(Dollars, na.rm = TRUE)) %>%\n # select(-c(Year, `Total Expenditures`)) %>%\n  arrange(desc(`Dollars`)) %>%\n  ggplot() + \n  geom_col(aes(x = fct_reorder(Category_name, `Dollars`), y = `Dollars`, fill = \"red\"))+ \n  coord_flip() +\n      theme_bw()+\n  theme(legend.position = \"none\") +\n  labs(title = \"Expenditures for FY2022\") +\n    xlab(\"Expenditure Categories\") +\n  ylab(\"Millions of Dollars\") \n\nrev_long %>%\n  filter(Year == 2022) %>%\n  #mutate(`Total Expenditures`= sum(Dollars, na.rm = TRUE)) %>%\n # select(-c(Year, `Total Expenditures`)) %>%\n  arrange(desc(`Dollars`)) %>%\n  ggplot() + \n  geom_col(aes(x = fct_reorder(Category_name, `Dollars`), y = `Dollars`))+ \n  coord_flip() +\n    theme_bw() +\n    theme(legend.position = \"none\") +\n      labs(title = \"Revenues for FY2022\")+\n    xlab(\"Revenue Categories\") +\n  ylab(\"Millions of Dollars\") \n```\n:::\n\n\n\n\n**Expenditure and revenues when focusing on largest categories and combining others into \"All Other Expenditures(Revenues)\":**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nexp_long %>%\n  filter( Year == 2022) %>%\n  mutate(rank = rank(Dollars),\n        Category_name = ifelse(rank > 13, Category_name, 'All Other Expenditures')) %>%\n # select(-c(Year, Dollars, rank)) %>%\n  arrange(desc(Dollars)) %>%\n  ggplot() + \n  geom_col(aes(x = fct_reorder(Category_name, `Dollars`), y = `Dollars`), fill = \"rosybrown2\")+ \n  coord_flip() +\n      theme_bw() +\n    labs(title = \"Expenditures for FY2022\") +\n    xlab(\"\") +\n  ylab(\"Millions of Dollars\")\n\nrev_long %>%\n  filter( Year == 2022) %>%\n  mutate(rank = rank(Dollars),\n        Category_name = ifelse(rank > 10, Category_name, 'All Other Sources')) %>%\n  arrange(desc(Dollars)) %>%\n  ggplot() + \n  geom_col(aes(x = fct_reorder(Category_name, `Dollars`), y = `Dollars`), fill = \"dark gray\")+ \n  coord_flip() +\n      theme_bw() +\n    labs(title = \"Revenues for FY2022\") +\n    xlab(\"\") +\n  ylab(\"Millions of Dollars\")\n```\n:::\n\n\n**Changes in Categories - 2021 to 2022** Dot Plot Attempt:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrev_long %>%\n    filter(Year == \"2022\" | Year == \"2021\") %>%\n  mutate(Year = as.character(Year)) %>%\n  ggplot(aes(x = Dollars, y = reorder(Category, Dollars))) +\n  geom_line(aes(group = Category) )+\n    geom_text(aes(x = ifelse(Year == \"2022\", as.numeric(Dollars), NA),  label = ifelse(Year == \"2022\", Category_name, \"\")),  \n            hjust = -0.2,\n            size = 2.8) +\n         geom_point(aes(color = Year), size=2)  +\n  labs(title = \"2021 to 2022 Change in Revenue\", x = \"Millions of Dollars\" , y = \"\",  caption = \"\")  +\n   scale_fill_manual(values = c(\"#d62828\", \"#003049\"), labels = c(\"FY 2021\", \"FY 2022\"))+\n    scale_color_manual(values = c(\"#d62828\", \"#003049\")) +   \n  theme_classic()+ \n    theme(\n   legend.position = \"bottom\" ,\n  axis.text.y = element_blank(),\n  axis.ticks.y = element_blank(),\n  axis.line.y.left  = element_blank(),\n # axis.line.x = element_blank(),\n  #  axis.title.y = element_blank(),\n # axis.ticks.x = element_blank()\n )+\n  scale_x_continuous(limits = c(0, 31000), labels = comma)\n\n\n\n\nexp_long %>%\n    filter(Year == \"2022\" | Year == \"2021\") %>%\n  mutate(Year = as.character(Year)) %>%\n  ggplot(aes(x = Dollars, y = reorder(Category, Dollars))) +\n  geom_line(aes(group = Category) )+\n  geom_text(aes(x = ifelse(Year == \"2022\", (as.numeric(Dollars)+1100), NA),  \n                label = ifelse(Year == \"2022\", Category_name, \"\")),  \n            hjust = 0,\n            size = 2.8) +\n  geom_point(aes(color = Year), size=2 #, alpha = 0.5\n             )  +\n  labs(title = \"2021 to 2022 Change in Expenditures\", x = \"Millions of Dollars\" , y = \"\",  caption = \"\")  +\n   scale_fill_manual(values = c(\"#d62828\", \"#003049\"), labels = c(\"FY 2021\", \"FY 2022\"))+\n    scale_color_manual(values = c(\"#d62828\", \"#003049\")) +\n\n   theme_classic()+ \n    theme(\n    legend.position = \"bottom\" ,\n  axis.text.y = element_blank(),\n  axis.ticks.y = element_blank(),\n  axis.line.y.left  = element_blank(),\n  #axis.line.x = element_blank(),\n   # axis.title.y = element_blank(),\n  #axis.ticks.x = element_blank()\n  )+\n  scale_x_continuous(limits = c(0, 31000), labels = comma)\n```\n:::\n\n\n\n\n### Top 3 Revenues\n\n\n::: {.cell}\n\n```{.r .cell-code}\nannotation <- data.frame(\n  x = c(2012, 2019, 2012),\n  y = c(16000, 10000, 5000),  \n  label = c(\"Individual Income Tax\", \"Sales Tax\", \"Corporate Income Tax\")\n)\n\ntop3 <- rev_long  %>% \n  filter(Category == \"02\" | Category == \"03\" | Category == \"06\") %>%\n  ggplot()+\n  geom_line(aes(x=Year, y=Dollars, color = Category_name)) + \n  geom_text(data = annotation, aes(x=x, y=y, label=label))+\n    theme_bw() +\n  \n  scale_y_continuous(labels = comma)+\n  scale_linetype_manual(values = c(\"dotted\", \"dashed\", \"solid\")) +\n\n  theme(legend.position = \"none\")+\n  labs(title = \"Top 3 Own Source Revenues\", \n       subtitle = \"Individual Income Taxes, Sales Tax, and Corporate income taxes\",\n       y = \"Nominal Dollars (in Millions)\") \n  \n\ntop3\n```\n:::\n\n\n### Own Source and Fed Transfers\n\n\n::: {.cell}\n\n```{.r .cell-code}\nownsource_rev <- rev_long %>%\n  filter(!Category %in% c(\"57\", \"58\", \"59\")) %>%\n  group_by(Year) %>% \n  summarize(Dollars = sum(Dollars))\n\n# ownsource_rev %>% \n#   ggplot()+geom_line(aes(x=Year, y=Dollars)) + \n#   labs(title = \"Own Source Revenues\", subtitle = \"Total own source revenue\", y = \"Millions of Dollars\")\n\nfed_rev <- ff_rev %>% select(fy, rev_57, rev_58, rev_59) %>%\n  mutate(fed_total = rev_57+rev_58+rev_59)\n\n\nannotation <- data.frame(\n  x = c(2010, 2010),\n  y = c(50000, 25000),  \n  label = c(\"Own Source Revenue\", \"Federal Transfers\")\n)\n\n\nggplot() + \n  geom_line(data = ownsource_rev, aes(x=Year, y=Dollars), color = \"Red\") + \n  geom_line(data = fed_rev, aes(x=fy, y=fed_total), color = \"Black\") + \n    geom_text(data = annotation, aes(x=x, y=y, label=label))+\n    scale_y_continuous(labels = comma)+\n  theme(legend.position = \"none\")+\n\n  theme_bw()+\n  labs(title = \"Own Source Revenue and Federal Transfers\", \n  y = \"Nominal Dollars (in Millions)\")\n```\n:::\n",
    "supporting": [
      "CategoryRecoding_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}