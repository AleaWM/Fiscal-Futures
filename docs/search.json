[
  {
    "objectID": "FedMoneyReceived.html#revenue-graphs",
    "href": "FedMoneyReceived.html#revenue-graphs",
    "title": "8  Federal COVID Money Received",
    "section": "8.1 Revenue Graphs",
    "text": "8.1 Revenue Graphs\nAll graphs have two versions: one without labels and one with labels. This is done so that labels can be added manually in Publisher after the final style is chosen. These labels can then have fund totals added too.\nSankeyattempt2022.csv file totals $32 billion flowing into the state. $16.15 billion came in FY21 and $16.1 billion in FY22.\n\n\nCode\nsankeydata <- read_csv(\"sankeyattempt2022.csv\")\n\nsankeydata2 <- sankeydata %>% select(Federal, StateFunds, StFund, Expenditures, value, Notes) %>%\n  filter(StFund == \"Total\") %>%\n  mutate(StateFunds = factor(StateFunds, levels = c(\"Total_received_fy21\", \"Total_received_fy22\")),\n                  Federal = as.factor(Federal),\n                  Expenditures = factor(Expenditures, levels = c(\"Community Development\", \"Transit\", \"Public Health\", \"Medicaid\", \"K-12\", \"Federal Other\")),\n         Notes = factor(Notes, levels = c(\"CARES\", \"CRRSA\", \"ARPA\", \"Other *\")))\n\n\nsankey4 <- sankeydata2\nggplot(sankey4, \n       aes(y = value, axis3 = Federal, axis2 = StateFunds, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = Notes), color = \"black\", reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\n # geom_text(stat = \"stratum\", label.strata = TRUE) + \ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n     scale_x_discrete( limits = c(\"Federal Funds\", \"State Funds\", \"Expenditure Categories\") )+ \n  #    geom_text_repel(stat = \"stratum\", aes(label = after_stat(stratum)), size = 4)\n  ggtitle(\"\")\n\n\n\n\n\nCode\n# sankey4 <- sankeydata %>% select(Federal, StateFunds, StFund, Expenditures, value, Notes) %>%\n#   filter(StFund == \"Total\") %>%\n#   mutate(StateFunds = factor(StateFunds, levels = c(\"Total_received_fy21\", \"Total_received_fy22\")),\n#                   Federal = as.factor(Federal),\n#                   Expenditures = as.factor(Expenditures) )\n\nggplot(sankey4, \n       aes(y = value, \n           axis3 = Federal, axis2 = StateFunds, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = Notes), color = \"black\", reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\n # geom_text(stat = \"stratum\", label.strata = TRUE) + \ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n     scale_x_discrete( limits = c(\"Federal Funds\", \"State Funds\", \"Expenditure Categories\") )+ \n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)\n\n\n\n\n\n\n\nCode\nsankey4 %>% #group_by(StateFunds) %>% \n  summarize(sum=sum(value))\n\nsankey4 %>% group_by(StateFunds) %>% \n  summarize(sum=sum(value))\n\nsankey4 %>% group_by(Expenditures) %>% \n  summarize(sum=sum(value))\n\nsankey4 %>% group_by(Notes) %>% \n  summarize(sum=sum(value))\n\nsankey4 %>% group_by(StateFunds, Expenditures) %>% \n  summarize(sum=sum(value))\n\n\n\n\n  \n\n  \n\n  \n\n  \n\n  \n\n\n\nGraph below shows same amount in federal COVID dollars but here color indicates the fund that the money was received in.\n\n\nCode\nsankey <- sankeydata %>% select(Federal, StateFunds, StFund, Expenditures, stfundname, value, Notes) %>%\n    filter(StFund == \"Total\") %>%\n\n  mutate(StateFunds = factor(StateFunds, levels = c(\"Total_received_fy21\", \"Total_received_fy22\")),\n         stfundname = as.factor(stfundname),\n         Federal = as.factor(Federal),\n         \n                   Expenditures = factor(Expenditures, levels = c(\"Transit\", \"Medicaid\", \"Public Health\",  \"K-12\", \"Federal Other\", \"Community Development\")),\n         Notes = factor(Notes, levels = c( \"Other *\", \"CARES\",\"CRRSA\", \"ARPA\")))\n\n\nggplot(sankey, \n       aes(y = value, axis3 = StateFunds, axis2 = stfundname, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = stfundname), color = \"black\", reverse=FALSE) +\n  # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\n  # geom_text(stat = \"stratum\", label.strata = TRUE) + \n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n     scale_x_discrete( limits = c(\"Federal Funds\", \"State Funds\", \"Expenditure Categories\") )+ \n  #    geom_text_repel(stat = \"stratum\", aes(label = after_stat(stratum)), size = 4)\n  ggtitle(\"\")\n\n\n\n\n\nCode\nggplot(sankey, \n       aes(y = value, axis3 = StateFunds, axis2 = stfundname, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = stfundname), color = \"black\",reverse=FALSE) +\n  guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\n # geom_text(stat = \"stratum\", label.strata = TRUE) + \ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n     scale_x_discrete( limits = c(\"Federal Funds\", \"State Funds\", \"Expenditure Categories\") )+ \n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)\n\n\n\n\n\nHighlights legislation, fund money went into, and its purpose.\n\n\nCode\nggplot(sankey, \n       aes(y = value, axis3 = Notes, axis2 = stfundname, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = stfundname), color = \"black\",reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\n # geom_text(stat = \"stratum\", label.strata = TRUE) + \ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n    #  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2)+\n     scale_x_discrete( limits = c(\"Federal Funds\", \"State Funds\", \"Expenditure Categories\") )\n\n\n\n\n\nCode\nggplot(sankey, \n       aes(y = value, axis3 = Notes, axis2 = stfundname, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = stfundname), color = \"black\", reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\n # geom_text(stat = \"stratum\", label.strata = TRUE) + \ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n     scale_x_discrete( limits = c(\"Federal Funds\", \"State Funds\", \"Expenditure Categories\") )+ \n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2,reverse=FALSE)\n\n\n\n\n\n\n\nCode\nsankey <- sankeydata %>% select(Federal, StateFunds, StFund, Expenditures, stfundname, value, Notes) %>%\n    filter(StFund == \"Total\") %>%\n\n  mutate(StateFunds = factor(StateFunds, levels = c( \"Total_received_fy21\", \"Total_received_fy22\")),\n         stfundname = as.factor(stfundname),\n         Federal = as.factor(Federal),\n         \n                   Expenditures = factor(Expenditures, levels = c(\"Community Development\", \"Public Health\", \"Medicaid\", \"K-12\", \"Federal Other\", \"Transit\")),\n         Notes = factor(Notes, levels = c(  \"CARES\", \"Other *\",\"CRRSA\", \"ARPA\")))\n\n\nggplot(sankey, \n       aes(y = value, \n           axis3 = Notes, axis2 = StateFunds, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = stfundname), color = \"black\", reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\n # geom_text(stat = \"stratum\", label.strata = TRUE) + \ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n     #scale_x_discrete( limits = c(\"Federal Funds\", \"State Funds\", \"Expenditure Categories\") )+  # doesn't work\n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse = FALSE)\n\n\n\n\n\n\nNote: CARES funds were originally received and spent in Disaster Response & Recovery Fund. In FY22, unspent aid was transferred to the State CURE and then transferred again to state agencies for COVID-related expenditures. Remaining CARES funds were transferred to State CURE fund for FY22. $337 million was also transfered from the Illinois Department of Revenue into the Illinois Housing Development Authority (IHDA). (LBOC June 2021 Report)\n\n\nRevenue from Local Cure is the Local Government Transfers.\n\n\n\nCode\nsankey %>%\n  summarize(sum=sum(value))\n\nsankey %>% group_by(StateFunds) %>% \n  summarize(sum=sum(value))\n\nsankey %>% group_by(Expenditures) %>% \n  summarize(sum=sum(value))\n\nsankey %>% group_by(Notes) %>% \n  summarize(sum=sum(value))\n\nsankey %>% group_by(StateFunds, Expenditures) %>% \n  summarize(sum=sum(value))"
  },
  {
    "objectID": "FedMoneyReceived.html#expenditures-graphs",
    "href": "FedMoneyReceived.html#expenditures-graphs",
    "title": "8  Federal COVID Money Received",
    "section": "8.2 Expenditures Graphs",
    "text": "8.2 Expenditures Graphs\nFederal expenditures from CURE and other major funds . Uses the fedCUREexpenditures.xlsx file.\nThis data comes from Illinois Comptroller expenditure data, Legislative Budget Oversight Commission (LBOC) Reports, and the ARPA Annual Recovery Plan detailing the State’s use of State and Local Fiscal Recovery Funds (SLFRF) which is prepared by the Governor’s Office of Management and Budget (GOMB).\nThe graphs below do not include FY23 allocations for federal funds. Dates on top are Fiscal Year received. Dates in the middle of the graph are Fiscal Year expenditures. Federal funds for COVID recovery have been received and spent in different years. This makes calculating and comparing the fiscal gap difficult.\n\n\nCode\ncure_exp <- read_xlsx(\"fedCUREexpenditures.xlsx\")\n\ncure_exp <- cure_exp %>%\n   filter(FY_Spent <2023) %>%\n\n  mutate(\n         FY_Spent = factor(FY_Spent, levels = c(\"2020\", \"2021\", \"2022\", \"2023+\")),\n         FY_Received = factor(FY_Received, levels = c(\"2020\", \"2021\", \"2022\")),\n         FF_Cat = factor(FF_Cat, levels = c(\"Econ Dev\", \"Human Services\", \"K-12\", \"Local Transfers\", \"Public Health\", \"Medicaid\", \"Public Safety\", \"Lost Revenue\", \"UI Fund\", \"FY23+\"))\n         )\n\n# Year Spent, Agency received, FF Spending Category \nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis3 = FY_Spent, axis2 = Agency, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n geom_text(stat = \"stratum\", label.strata = TRUE, reverse=FALSE) + \n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  theme_void() + \n  theme(legend.position=\"bottom\")+\n  ggtitle(\"$12.2 Billion Spent So far: Year Spent, Agency received, FF Spending Category\")\n\n\n\n\n\nCode\n# Switch Year Spent & Agency received, FF Spending Category \nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis3 = Agency, axis2 = FY_Spent , axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n geom_text(stat = \"stratum\", label.strata = TRUE, reverse=FALSE) + \n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  theme_void() + \n    theme(legend.position=\"bottom\")+\n\n  ggtitle(\"Expenditures: Agency received, Year Spent, FF Spending Category \")\n\n\n\n\n\nCode\nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis3 = `Federal Funds`, axis2 = FY_Spent, axis1=Fund, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  theme(legend.position=\"bottom\")+\n\n  ggtitle(\"Expenditures: Department that Received Revenue, Year Spent, and Purpose of Expenditure\")\n\n\n\n\n\nCode\nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis3 = `State_local2`, axis2 = Agency, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n  theme(legend.position=\"bottom\")+\n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  theme(legend.position=\"bottom\")+\n\n  ggtitle(\"Expenditures: Department that Received Revenue, Year Spent, and Purpose of Expenditure\")\n\n\n\n\n\nCode\nggplot(cure_exp, \n       aes(y = `Agency_grouped`, axis3 = `State_local2`, axis2 = Agency, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n  theme(legend.position=\"bottom\")+\n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  theme(legend.position=\"bottom\")+\n\n  ggtitle(\"Expenditures: Department that Received Revenue, Year Spent, and Purpose of Expenditure\")\n\n\n\n\n\nCode\nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis3 = `State_local2`, axis2 = FY_Spent, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  theme(legend.position = \"bottom\")+\n  ggtitle(\"Expenditures: Funds from the State of Illinois or State Departments, Year Spent, and FF Expenditure Purpose\")\n\n\n\n\n\nCode\nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis3 = `State_local2`, axis2 = Fund, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  theme(legend.position = \"bottom\")+\n  ggtitle(\"Expenditures: Funds from the State of Illinois or State Departments, Year Spent, and FF Expenditure Purpose\")\n\n\n\n\n\nCode\nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis3 = `State_local2`, axis2 = FY_Spent, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  theme(legend.position = \"bottom\")+\n  ggtitle(\"Expenditures: Funds from the State of Illinois or State Departments, Year Spent, and FF Expenditure Purpose\")\n\n\n\n\n\nCode\n#4 levels with labels\nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis4 = `FY_Received`,  axis3 = `Federal Funds`, axis2 = FY_Spent, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n    theme(legend.position=\"bottom\")+\n\n  ggtitle(\"Year Received, Federal Fund, Year Spent, and Purpose\")\n\n\n\n\n\nCode\ncure_exp %>% filter(State_local == \"State CURE\") %>%\nggplot(aes(y = `FY Expenditures`, axis4 = FY_Received, axis3 = `Agency`,  axis2 = FY_Spent, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n    theme(legend.position=\"bottom\")+\n\n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  ggtitle(\"Year Received, Federal Fund, Year Spent, and Purpose\")\n\n\n\n\n\nCode\ncure_exp %>% group_by(FY_Received)%>% summarize(Expenditures=sum(`FY Expenditures`))\n\ncure_exp %>% group_by(`Federal Funds`)%>% summarize(Expenditures=sum(`FY Expenditures`))\n\ncure_exp %>% group_by(State_local2)%>% summarize(Expenditures=sum(`FY Expenditures`))\n\n\ncure_exp%>% summarize(Expenditures=sum(`FY Expenditures`))\ncure_exp %>% group_by(`FY_Spent`)%>% summarize(Expenditures=sum(`FY Expenditures`))\n\ncure_exp %>% group_by(`FF_Cat`)%>% summarize(Expenditures=sum(`FY Expenditures`))\n\ncure_exp %>% group_by(Law)%>% summarize(Expenditures=sum(`FY Expenditures`))\n\n\ncure_exp %>% group_by(Law, FY_Spent, FF_Cat)%>% summarize(Expenditures=sum(`FY Expenditures`)) %>%\n  pivot_wider(names_from = FY_Spent, values_from = Expenditures) \n\n\ncure_exp %>% group_by(Law, FY_Received)%>% summarize(Expenditures=sum(`FY Expenditures`)) %>%\n  pivot_wider(names_from = Law, values_from = Expenditures) %>% arrange(FY_Received)\n\ncure_exp %>% group_by(Law, FY_Spent)%>% summarize(Expenditures=sum(`FY Expenditures`)) %>%\n  pivot_wider(names_from = Law, values_from = Expenditures) %>% arrange(FY_Spent)\n\n\n\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n\n\nGraphs below include how money has been spent in FY21 and FY22 with unspent funds labeled as FY2023+.\nThis image focuses on only the funds that came through the State and Local Fiscal Recovery Fund and a couple additional funds that came through different agencies but were received by the State of Illinois. Other Federal Revenue largely indicates the ESSER funds that were received by ISBE and were spent on K-12 education.\n\n\nCode\ncure_exp <- read_xlsx(\"fedCUREexpenditures.xlsx\")\n\ncure_exp <- cure_exp %>%\n #   filter(FY_Spent <2023) %>%\n\n  mutate(\n         FY_Spent = factor(FY_Spent, levels = c(\"2020\", \"2021\", \"2022\", \"2023+\")),\n         FY_Received = factor(FY_Received, levels = c(\"2020\", \"2021\", \"2022\")),\n         FF_Cat = factor(FF_Cat, levels = c(\"Econ Dev\", \"Human Services\", \"K-12\", \"Local Transfers\", \"Public Health\", \"Medicaid\", \"Public Safety\", \"UI Fund\", \"Lost Revenue\", \"FY23+\"))\n        \n         )\n\n\n\n#4 levels with labels\nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis4 = `FY_Received`,  axis3 = `Federal Funds`, axis2 = FY_Spent, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n# geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), reverse=FALSE) + \n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) \n\n\n\n\n\nCode\nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis4 = `FY_Received`,  axis3 = `State_local2`, axis2 = FY_Spent, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n# geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), reverse=FALSE) + \n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) \n\n\n\n\n\nCode\nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis3 = `State_local2`, axis2 = FY_Spent, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n# geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), reverse=FALSE) + \n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)\n\n\n\n\n\nCode\nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis3 = `State_local2`, axis2 = FY_Spent, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n# geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), reverse=FALSE) + \n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)\n\n\n\n\n\nCode\ncure_exp %>% group_by(FY_Received)%>% summarize(Expenditures=sum(`FY Expenditures`))\n\ncure_exp %>% group_by(`Federal Funds`)%>% summarize(Expenditures=sum(`FY Expenditures`))\n\ncure_exp %>% group_by(`FY_Spent`)%>% summarize(Expenditures=sum(`FY Expenditures`))\n\ncure_exp %>% group_by(`FF_Cat`)%>% summarize(Expenditures=sum(`FY Expenditures`))\n\ncure_exp %>% group_by(Law)%>% summarize(Expenditures=sum(`FY Expenditures`))\n\n\n\ncure_exp %>% group_by(Law, FY_Received)%>% summarize(Expenditures=sum(`FY Expenditures`)) %>%\n  pivot_wider(names_from = Law, values_from = Expenditures) %>% arrange(FY_Received)\n\ncure_exp %>% group_by(Law, FY_Spent)%>% summarize(Expenditures=sum(`FY Expenditures`)) %>%\n  pivot_wider(names_from = Law, values_from = Expenditures) %>% arrange(FY_Spent)\n\n\n\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n\n\n$3.5 Billion received in FY20 for SFRF, $9.7 billion received in FY22. Over $10 billion has gone into the State CURE fund and another $2.4 billion was received by State Departments. Of that over $13 billion spent, $2.7 billion was spent in FY21 and $8.5 Billion was spent in FY22. The remaining $2 Billion State CURE funds have been fully allocated and some have been spent already in FY23 ($500 million on lost revenue, remaining on programs and services).\n\nNote: Increased Matching Grant and Medicare Continuous Coverage Requirement dollars all count as Federal Medicaid Revenue. TANF and SNAP are considered Other Federal Revenue."
  },
  {
    "objectID": "LocalTransfers.html",
    "href": "LocalTransfers.html",
    "title": "1  Local Transfers",
    "section": "",
    "text": "Separate transfers to local from parent agencies that come from DOR(492) or Transportation (494). Treats muni revenue transfers as expenditures, not negative revenue.\nThe share of certain taxes levied state-wide at a common rate and then transferred to local governments. (Purely local-option taxes levied by specific local governments with the state acting as collection agent are NOT included.)\nThe six corresponding revenue items are:\n\nLocal share of Personal Income Tax\n\nIndividual Income Tax Pass-Through New 2021 (source 2582).\n\nLocal share of General Sales Tax\nPersonal Property Replacement Tax on Business Income\nPersonal Property Replacement Tax on Public Utilities\nLocal share of Motor Fuel Tax\nTransportation Renewal Fund 0952\n\nUntil Dec 18. 2022, Local CURE was being aggregated into Revenue totals since the agency was the Department of Revenue. However the \\$371 million expenditure is for “LOC GOVT ARPA” and the revenue source that is Local CURE is also $371 million. Since it cancels out and is just passed through the state government, I am changing changing the fund_ab_in file so that in_ff=0 for the Local CURE fund. It also inflates the department of revenue expenditures in a misleading way when the expense is actually a transfer to local governments.\n\nDropping Local CURE fund from analysis results in a \\$371 million decrease in the department of Revenue (where the Local Government ARPA transfer money). The appropriation for it was over $740 million so some will probably be rolled over to FY23 too.\nIn the FY21 New and Reused Funds word document, 0325 Local CURE is described as _“Created as a federal trust fund. The fund is established to receive transfers from either the disaster response and recovery fund or the state cure fund of federal funds received by the state. These transfers, subject to appropriation, will provide for the administration and payment of grants and expense reimbursements to units of local government. Revenues should be under Federal Other and expenditures under Commerce and Economic Opportunity.”_ - I propose changing it to exclude for both.\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(formatR)\nlibrary(lubridate)\nlibrary(smooth)\nlibrary(forecast)\nlibrary(scales)\nlibrary(kableExtra)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(quantmod)\nlibrary(geofacet)\nlibrary(janitor)\n\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, eval=FALSE)\n\nexp_temp <- read_csv(\"exp_temp.csv\")\nrev_temp <- read_csv(\"rev_temp.csv\")\n\n\n\n\nCode\nexp_temp <- exp_temp %>% mutate(\n\n  agency = case_when(fund==\"0515\" & object==\"4470\" & type==\"08\" ~ \"971\", # income tax to local governments\n\n                     fund==\"0515\" & object==\"4491\" & type==\"08\" & sequence==\"00\" ~ \"971\", # object is shared revenue payments\n\n                     fund==\"0802\" & object==\"4491\" ~ \"972\", #pprt transfer\n\n                     fund==\"0515\" & object==\"4491\" & type==\"08\" & sequence==\"01\" ~ \"976\", #gst to local\n\n                     fund==\"0627\" & object==\"4472\"~ \"976\" , # public transportation fund but no observations exist\n\n                     fund==\"0648\" & object==\"4472\" ~ \"976\", # downstate public transportation, but doesn't exist\n\n                     fund==\"0515\" & object==\"4470\" & type==\"00\" ~ \"976\", # object 4470 is grants to local governments\n\n                    object==\"4491\" & (fund==\"0188\"|fund==\"0189\") ~ \"976\",\n\n                     fund==\"0187\" & object==\"4470\" ~ \"976\",\n\n                     fund==\"0186\" & object==\"4470\" ~ \"976\",\n\n                    object==\"4491\" & (fund==\"0413\"|fund==\"0414\"|fund==\"0415\")  ~ \"975\", #mft to local\n\n                  fund == \"0952\"~ \"975\", # Added Sept 29 2022 AWM. Transportation Renewal MFT\n\n                    TRUE ~ as.character(agency)),\n\n  \n\n  agency_name = case_when(agency == \"971\"~ \"INCOME TAX 1/10 TO LOCAL\",\n\n                          agency == \"972\" ~ \"PPRT TRANSFER TO LOCAL\",\n\n                          agency == \"975\" ~ \"MFT TO LOCAL\",\n\n                          agency == \"976\" ~ \"GST TO LOCAL\",\n\n                          TRUE~as.character(agency_name)),\n\n  group = ifelse(agency>\"970\" & agency < \"977\", as.character(agency), as.character(group)))\n\n\n\n\nCode\ntransfers_long <- exp_temp %>% \n\n  filter(group == \"971\" |group == \"972\" | group == \"975\" | group == \"976\")\n\ntransfers_long %>% \n\n  group_by(agency_name, group, fy) %>% \n\n  summarize(expenditure = sum(expenditure, na.rm=TRUE) )%>% \n\n  ggplot() + geom_line(aes(x=fy, y = expenditure, color=agency_name)) + labs(title = \"Transfers to Local Governments\", caption = \"Data Source: Illinois Office of the Comptroller\")\n\ntransfers <- transfers_long %>%\n\n  group_by(fy, group ) %>%\n\n  summarize(sum_expenditure = sum(expenditure)/1000000) %>%\n\n  pivot_wider(names_from = \"group\", values_from = \"sum_expenditure\", names_prefix = \"exp_\" )\n\nexp_temp <- anti_join(exp_temp, transfers_long)\n\ndropped_inff_0 <- exp_temp %>% filter(in_ff == 0)\n\nexp_temp <- exp_temp %>% filter(in_ff == 1) # drops in_ff = 0 funds AFTER dealing with net-revenue above\n\n\nThe Local Transfers from the Personal Property Replacement Tax (fund 802) increased over $2 billion from corporate income taxes alone. Personal property replacement taxes (PPRT) are revenues collected by the state of Illinois and paid to local governments to replace money that was lost by local governments when their powers to impose personal property taxes on corporations, partnerships, and other business entities were taken away."
  },
  {
    "objectID": "Debt.html",
    "href": "Debt.html",
    "title": "2  Debt Service Discussion",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(formatR)\nlibrary(lubridate)\nlibrary(smooth)\nlibrary(forecast)\nlibrary(scales)\nlibrary(kableExtra)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(quantmod)\nlibrary(geofacet)\nlibrary(janitor)\n\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\n\n\nDebt Service expenditures include interest payment on both short-term and long-term debt. We do not include escrow or principal payments.\nDecision from Sept 30 2022: We are no longer including short term principal payments as a cost; only interest on borrowing is a cost. Pre FY22 and the FY21 correction, we did include an escrow payment and principle payments as costs but not bond proceeds as revenues. This caused expenditures to be inflated because we were essentially counting debt twice - the principle payment and whatever the money was spent on in other expenditure categories, which was incorrect.\nObjects:\n\n8813 interest **INCLUDE AS COST**\n8811 is for principle **EXCLUDE from aggregate debt expenditure**\n8841 is for escrow payments **EXCLUDE from aggregate debt expenditure**\n8800 is for capital projects debt service (e.g. Build Illinois Bonds, Civic Center, Tollway **EXCLUDE tollway in debt cost**\n\nNote: debt principle and interest are both included in capital projects because they are combined in the data observations; bond proceeds are not considered a revenue source. Can’t include capital projects interest as easily as the GO bonds.\nObj_seq_type:\n\nExclude: Bond principle payments: obj_seq_type == 88110008\nExclude: Short term borrowing principle: obj_seq_type == 88110108\nInclude: General Obligation Bond Interest: obj_seq_type == 88130000 & 88130008\nInclude: Interest on short-term borrowing: 88130108\nExclude: Escrow payment == 88410008\nInclude: Build IL Bonds, capital projects principal AND interest - Tollway is obj_seq_type == 88000055, filter out fund == 0455 to remove tollway\n\n-   fund == 0455 is the IL State Toll Highway fund, items mostly for operations and maintenance\n\n2.0.0.1 Tollway Debt, Revenue, and Expenditures\n\n\nCode\nexp_temp <- read_csv(\"exp_temp.csv\")\nrev_temp <- read_csv(\"rev_temp.csv\")\n\n\ntollway <- exp_temp %>% filter(fund == \"0455\") #all tollway expenditures\n\ncapitalproject_debtservice <- exp_temp %>%filter(object == \"8800\") # ALL Capital projects debt service\n\n# look at Illinois tollway bond proceeds and debt service: \n\n# rev_temp %>% filter(fund == \"0455\") # examine items in fund 0455\n\n#exp_temp %>% filter(fund == \"0455\") %>% group_by(fy) %>% summarize(sum = sum(expenditure)) %>% arrange(-fy)\n\ntollway\n\n\n\n\n  \n\n\n\nCode\n#rev_temp %>% filter(fund == \"0455\") %>% group_by(fy) %>% summarize(sum = sum(receipts)) %>% arrange(-fy)\n\ntollway_exp <- exp_temp %>% filter(fund == \"0455\") %>% group_by(fy) %>% summarize(expenditure = sum(expenditure))\n\n                                                                                                    #tollway_exp %>% ggplot() + geom_line(aes(x=fy, y=expenditure)) + labs(title = \"Fund 0455 from Expenditure: All Tollway Expenditures\", caption = \"Data from IOC Expenditure Files. Fund 0455 is the IL State Tollway\")\n\n# all tollway revenues, not just bond proceeds\n\nalltollway<-rev_temp %>% filter(fund == \"0455\" & source != \"0571\") %>% group_by(fy) %>% summarize(sum = sum(receipts, na.rm = TRUE))\n\n# tollway bond proceeds\n\ntollway_bondproc <- rev_temp %>% filter(fund == \"0455\" & source == \"0571\" ) %>% group_by(fy) %>% summarize(sum = sum(receipts, na.rm = TRUE))\n\n#alltollway %>%  ggplot() + geom_line(aes(x=fy, y=sum)) + labs(title = \"Fund 0455 - All Tollway Revenue\", caption = \"Data from IOC Revenue Files. Fund 0455 is the IL State Tollway Revenue\") \n\n#tollway_bondproc %>% ggplot() + geom_line(aes(x=fy, y=sum)) + labs(title = \"Fund 0455 - Tollway Revenue: Tollway Bond Proceeds\", caption = \"Data from IOC Revenue Files. Fund 0455 is the IL State Tollway Revenue\")\n\n  \n\n#ggplot() + geom_line(data=tollway_bondproc, aes(x=fy, y=sum)) + labs(title = \"Fund 0455 - Tollway Revenue: Tollway Bond Proceeds\", caption = \"Data from IOC Revenue Files. Fund 0455 is the IL State Tollway Revenue\")\n\n#tollwaydebt %>% ggplot() + geom_line(aes(x=fy, y=sum)) + labs(title = \"Tollway Debt Service\", caption = \"Debt service includes principal and interest for the Illinois Tollway. Object = 8800 and fund = 0455\")\n\n#tollway debt principal and interest\n\ntollwaydebt <- exp_temp %>%filter(object == \"8800\" & fund == \"0455\") %>% group_by(fy) %>% summarize(sum=sum(expenditure)) \n\n# Tollway agency expenditures = SAME as filtering by fund == 0455\n\n#tollway<-exp_temp %>% filter(agency == \"557\")\n\n#exp_temp %>% filter(agency == \"557\") %>% group_by(fy) %>% summarize(sum = sum(expenditure)) %>% arrange(-fy)\n\n# contributions and benefits paid comparison\n\nggplot()+\n\n  geom_line(data=tollway_bondproc, aes(x=fy, y=sum, color='Bond Proceeds')) +\n\n  geom_line(data= tollwaydebt, aes(x=fy, y = sum, color = 'Debt Service'))+ \n\n  geom_line(data= tollway_exp, aes(x=fy, y = expenditure, color = 'Tollway Expenditures'))+ \n\n  geom_line(data= alltollway, aes(x=fy, y = sum, color = \"Tollway Revenue\"))+ \n\n  scale_color_manual(values = c(\n\n    'Bond Proceeds' = 'darkblue',\n\n    'Debt Service' = 'red',\n\n    'Tollway Expenditures' = 'orange',\n\n    'Tollway Revenue' = 'light green')) +\n\n  labs(title=\"Tollway bond procreeds, debt service, revenue, and expenditures.\", \n\n       caption = \"Tollway revenue + bond proceeds should be roughly equal to tollway expenditures + debt service.\", \n\n       y = \"Dollars\")\n\n\n\n\n\n\n\n2.0.0.2 State Principal and Interest\nFiltering for interest on short term borrowing and GO bonds (88130008, 88130000, and 88130108) and GO bond principal amounts (88110008).\n\nobject == 8813 is for all debt service interest but obj_seq_type is used to specify short term borrowing versus regular debt service.\nan Interest to Principal ratio is also calculated in the table below.\n\nLooking only at general obligation principal payments and interest payments:\n\n\nCode\n# GO bond principal and GO bond interest\n\nGObond_debt <- exp_temp %>% \n  \n  filter(obj_seq_type == \"88110008\" |obj_seq_type == \"88130000\" | obj_seq_type == \"88130008\") %>% \n  \n  group_by(fy, obj_seq_type) %>% \n  \n  summarize(sum = sum(expenditure, na.rm=TRUE)) %>% \n  \n  pivot_wider(names_from = obj_seq_type, values_from = sum) %>% \n  \n  mutate(principal = `88110008`,\n         \n         interest = sum(`88130008`+`88130000`, na.rm = TRUE),\n         \n         ratio = (as.numeric(interest)/as.numeric(principal)))\n\nGObond_debt %>% select(principal, interest, ratio) %>%\n  \n  mutate(across(principal:interest, ~format(., big.mark= \",\", scientific = F)))\n\n\n\n\n  \n\n\n\nCode\n# GObond_debt %>% ggplot() + \n\n#   geom_line(aes(x=fy, y=principal, color = \"Principal\"))+ \n\n#   geom_line(aes(x=fy, y=interest, color = \"Interest\")) + \n\n#   labs(title = \"General Obligation principal and interest payments\")\n\nGObond_debt %>% ggplot() +   \n  \n  geom_col(aes(x=fy, y=interest/1000000, fill = \"Interest\")) + \n  \n  geom_col(aes(x=fy, y=principal/1000000, fill = \"Principal\"))+ \n  \n  labs(title = \"Debt Service\", subtitle = \"General Obligation Principal and Interest Payments\")\n\n\n\n\n\nLooking only at short term borrowing principal and interest payments\n\n\nCode\n# short term borrowing, first observation is in 2004?\n\nshort_debt <- exp_temp %>% \n\n  filter(obj_seq_type == 88110108 |obj_seq_type == 88130108) %>% \n\n  group_by(fy, obj_seq_type) %>% \n\n  summarize(sum = sum(expenditure, na.rm=TRUE)) %>% \n\n  pivot_wider(names_from = obj_seq_type, values_from = sum) %>% \n\n  mutate(principal = `88110108`,\n\n         interest = `88130108`,\n\n         ratio = (as.numeric(interest)/as.numeric(principal)))\n\nshort_debt %>% select(principal, interest, ratio) %>%\n\n  mutate(across(principal:interest, ~format(., big.mark= \",\",  scientific = F)))\n\n\n\n\n  \n\n\n\nCode\nshort_debt %>% ggplot() + \n\n  geom_col(aes(x=fy, y=principal/1000000, fill = \"Principal\"))+ \n\n  geom_col(aes(x=fy, y=interest/1000000, fill = \"Interest\")) + \n\n  labs(title = \"Debt Service\", subtitle = \"Short Term Borrowing: Principal and Interest Payments\")\n\n\n\n\n\nWhen including short term borrowing and normal debt service, the debt ratio seems more normal and the total interest and principal payments over the years are smoothed out.\nPrincipal and interest amounts calculated exclude the Illinois Tollway debt service and debt for capital projects. Capital projects debt service is examined below:\n\n\nCode\ncapitalprojects <- exp_temp %>%filter(object == \"8800\")\n\nall_debt <- exp_temp %>% \n\n  filter(fund != \"0455\" & (object == \"8811\" |object == \"8813\" | object == \"8800\") )%>% \n\n  group_by(fy, object) %>% \n\n  summarize(sum = sum(expenditure, na.rm=TRUE)) %>% \n\n  pivot_wider(names_from = object, values_from = sum) %>% \n\n  mutate(principal = `8811`,\n\n         interest = `8813`,\n\n         CapitalProjects = `8800`,\n\n         ratio = (as.numeric(interest)/as.numeric(principal)))\n\nall_debt %>% select(principal, interest, CapitalProjects, ratio) %>%\n\n  mutate(across(principal:CapitalProjects, ~format(., big.mark= \",\", scientific = F)))\n\n\n\n\n  \n\n\n\nCode\nall_debt %>% ggplot() + \n\n  geom_line(aes(x=fy, y=principal/1000000, color = \"Principal\"))+ \n\n  geom_line(aes(x=fy, y=interest/1000000, color = \"Interest\"))+\n\n  geom_line(aes(x=fy, y = CapitalProjects / 1000000, color = \"Capital Projects\"))+\n\n  labs(y = \"Debt ($Millions)\",\n\n       title = \"Principal and Interest payments\", subtitle = \"Principal and interest from short term borrowing and GO Bonds debt service\", caption = \"Capital projects does not include Illinois tollway debt service.\n\n       Capital projects include interest and principal values as one value and cannot be sepearated.\")\n\n\n\n\n\nCode\nall_debt %>% ggplot() + \n\n  geom_line(aes(x=fy, y=principal/1000000, color = \"Principal\"))+ \n\n  geom_line(aes(x=fy, y=interest/1000000, color = \"Interest\"))+\n\n  geom_line(aes(x=fy, y = CapitalProjects / 1000000, color = \"Capital Projects Debt Service\"))+\n\n  geom_line(data = tollwaydebt, aes( x=fy, y=sum/1000000, color = \"Tollway Debt Service\"))+\n\n  labs(y = \"Debt ($Millions)\", title = \"Short term borrowing and GO Bonds\",\n\n       subtitle = \"Principal and Interest payments\", caption = \"Capital projects does not include Illinois tollway debt service.\") \n\n\n\n\n\nCode\nall_debt %>% ggplot() + \n\n  geom_line(aes(x=fy, y=(principal+interest)/1000000, color = \"Principal & Interest\"))+ \n\n  #geom_line(aes(x=fy, y=interest/1000000, color = \"Interest\"))+\n\n  geom_line(aes(x=fy, y = CapitalProjects / 1000000, color = \"Capital Projects Debt Service\"))+\n\n  geom_line(data = tollwaydebt, aes( x=fy, y=sum/1000000, color = \"Tollway Debt Service\"))+\n\n  labs(y = \"Debt ($Millions)\", title = \"Illinois Debt Service Expenditures: Short term borrowing and GO Bonds\",\n\n       subtitle = \"Principal and Interest payments\", caption = \"Capital projects does not include Illinois tollway debt service.\") \n\n\n\n\n\nCapital projects include the IL Civic Center and Build Illinois Bonds. Tollway principal and interest has been dropped from the State’s Debt Service expenditure but is counted in the Illinois Tollway Expenditure cost."
  },
  {
    "objectID": "Pensions.html",
    "href": "Pensions.html",
    "title": "3  Pensions",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(formatR)\nlibrary(lubridate)\nlibrary(smooth)\nlibrary(forecast)\nlibrary(scales)\nlibrary(kableExtra)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(quantmod)\nlibrary(geofacet)\nlibrary(janitor)\n\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\n\n\nFor yearly expenditure calculations, the state contributions to the pension funds (object = 4431) should be the expenditure included for pensions. If trying to look at the bigger fiscal health picture and include unfunded liabilities and in/out flows, then items like purchase of investments and POB spikes in trends that occurred from policy changes should be analyzed and discussed in a separate section. Again, State contributions TO the pension funds are the expenditures BUT an additional graph/discussion on the employer contributions, employee contributions, and benefits paid out should be included and considered for additional context on Illinois’ situation.\nPension expenditures referenced in the analysis are based on state payments to the following pension systems:\n\nTeachers Retirement System (TRS)\nNew POB bond in 2019: Accelerated Bond Fund paid benefits in advance as lump sum\nState Employee Retirement System (SERS)\nState University Retirement System (SURS)\nJudges Retirement System (JRS)\nGeneral Assembly Retirement System (GARS)\n\nAdditional context:\nFor the $10 billion in 2004, they borrowed money and invested it in pension portfolio and hoped that the returns would be greater than the interest on the debt. If returns>interest, then they increased the pension funds and it was a good idea. Otherwise a short term band-aid causes even more problems later. This added a significant amount to the unfunded pension liabilities. In 2010 and 2011, POBs served as a type of general borrowing for the state by borrowing against what was owed to the pension systems and using that revenue that should have funded pensions to instead subsidize the cost of providing core services. Illinois borrowed money (POBs) and used it to pay for government services. A temporary way to fill a budget gap for that 2010 that then costs more in the long run due to increased unfunded liabilities and interest on the borrowed money. - “Basket Case” by Dye 2015\nIn 2019 lawmakers offered a pension buyout plan where members could opt-out of their future benefits for a lump sum. However, few people participated in the buyout plan and very little savings have occurred so far. The buyout plan has been extended to 2026 in hopes that more people participate in it. Description of Pension Obligation Acceleration Bond at this link. Proceeds of bonds go into pension obligation acceleration fund (which are not included as a revenue source) and the fund is only used to make accelerated pension benefit payments. The pension stabilization fund (0319) is money put into the pension funds to help pay for unfunded liabilities from past poor budgeting decisions.\nData coding details\n\nState pension contributions are largely captured with object=4431. (These are the State expenditures included in analysis)\n\nincludes 8 billion payment in 2004 that creates large peak in expenditure graphs\n\nObject 4431 does not capture recent pension stabilization fund which is fund = 0319, object = 1900 and has $300 million investment in FY2022.\n\nFund=0475 is the Municipal Retirement Fund - Not included because state just helps collect and disperse local pension funds. IMRF is most funded pension fund in Illinois. Fund ends in 2015. All were considered purchase of investments.\nIOC objects 1160-1165 are for all retirement expenditures for employers. These are not included in the analysis.\nSome expenditures with object=4430 (benefits paid to retirees) were paid for with Pension obligation bond funds (fund == 0825).\nIn past years, some POB funded expenditures were moved to revenue side. Code logic was unclear. We are no longer doing this as of FY2021.\nOther types of pension expenditures to consider when looking at pension funds: Pension obligation acceleration bond, state pension obligation bond reimbursements, pension pickup, accelerated pension buy-out (bond financed funds)\n\nOther items to be aware of that may contain useful pension context:\n\nobject = 1298 is for Purchase of Investments and is excluded from analysis. In past analyses, there were a couple of exceptions during 2010 and 2011.\n\nPurchase of Investments captures the pension obligation bonds issued in 2010-2011.\n\n\nobject = 1900 for pension stabilization is under lump sums\n\nobject = 1167 and 1168 is for Employer pension contributions but is not used by IOC yet as of FY2022.\n\nobject 4900 is awards and grants lump sum\n\nEmployer contributions for pensions are excluded from analysis to avoid double counting the cost of pensions. Expenditures with object 4430 for pensions, benefits, and annuities appears in items from funds 0473, 0477, 0479, 0481, (TRS, JRS, SERS, GARS), 0755, 0786, 0787, 0788, 0789, 0799 (deferred compensation plan, GAR excess benefit, JRS excess benefit, SER excess benefit, TRS excess benefit, state university retirement system) are NOT included in the analysis. All are coded with in_ff=0 in the fund_ab_in.xlsx file of funds.\nMost of these funds were found by either using CTRL-F with pension related words or scrowllin through code options on the comptroller’s website.\n\n\nCode\nexp_temp <- read_csv(\"exp_temp.csv\")\nrev_temp <- read_csv(\"rev_temp.csv\")\n\n\n# check what is being included in pensions\n\n# funds related to pension contributions\npension_funds <- c(\"0472\", \"0473\", \"0477\", \"0479\", \"0481\", \"0755\", \"0786\", \"0787\", \"0788\", \"0789\", \"0799\")\n\npension_check <- exp_temp %>% \n  mutate(pension = case_when( \n # object == \"4430\" & fund == \"0825\" ~ \"Object 4430 - Pension Buyout/Benefits Paid Early\",\n    (object==\"4430\") ~ \"Object 4430 - Benefits Paid to Employees; EXCLUDED\", # pensions, annuities, benefits\n    (object==\"4431\") ~ \"Object 4431 - State Contributions; INCLUDED\", # 4431 = state payments into pension fund\n        (obj_seq_type > \"11590000\" & obj_seq_type < \"11660000\")  ~ \"Object 1160-1165 Employer Contributions to Pension Fund; EXCLUDED\",\n    # objects 1159 to 1166 are all considered Retirement by Comptroller \n    \n            TRUE ~ \"0\")) %>%  # All other observations coded as 0 for non-pension items\n  \n  # recodes specific instances of code anomalies from past years:\n  mutate(pension = case_when(\n    (object==\"1298\" & fund %in% pension_funds ) ~ \"Object 1298 - Purchase of Investments; DROPPED\", \n\n    \n      # pension stabilization fund in 2022 \n # object == \"1900\" & fund == \"0319\" ~ \"Fund 0319-Pension Stabilization\", \n    object == \"1900\" & fund %in% pension_funds ~ \"Fund 0319 - Pension Stabilization\", \n\n  \n  object == \"4900\" & fund %in% pension_funds ~ \"Object 4900 - Awards/Grants; Weird 2010-2011 values\",\n  \n    TRUE ~ as.character(pension)) ) %>% \n  filter(pension != \"0\" )\n\npension_check %>% group_by(fy, pension) %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %>%\n  ggplot(aes(x=fy, y = expenditure, color = pension)) + \n  geom_line() + \n\n  labs (title = \"Pension Fund Payments In and Retirement Benefits Out\", \n  caption = \"Object 4430 is retirement benefits paid to employees. \n  Object 4431 includes state payments INTO pension Fund.\n  Object 1998 is excluded except for years 2010 and 2011 due to POBs.\")+\n    theme(legend.position = \"bottom\")+\n  guides(color = guide_legend(nrow=3))\n\n\n\n\n\nPension contributions from employees and employers are not included as revenue sources but are useful for understanding the money going into the funds and the money flowing out of the funds. Identifying and graphing employee and employer contributions, as well as benefits paid to retired employees and state contributions was important for checking the items that should and should not be included in the analysis.\n\n\n\n\nCode\n# # contributions and benefits paid comparison\n# ggplot()+\n#   geom_line(data=employee_contributions, aes(x=fy, y=contributions), color=\" light green\") +\n#     geom_line(data=employer_contributions, aes(x=fy, y=contributions), color=\"orange\") +\n# \n#   geom_line(data= state_contrib, aes(x=fy, y = expenditure), color = \"red\")+ \n# \n#   geom_line(data= benefits_paid, aes(x=fy, y = expenditure), color = \"dark blue\")+ \n#   labs(title=\"Pension fund inflows and outflows\", \n#        caption = \"Blue: object = 4430 for benefits paid out of funds, \n#       red:  object = 4431 for state contributions into pension fund, \n#     neon  green: employee contributions into the fund,\n#      orange: employer contributions into the fund.\", y = \"Dollars\")\n\npension_picture %>% group_by(fy, pension) %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %>%\n  ggplot(aes(x=fy, y = expenditure, color = pension)) + \n  geom_line() + \n  geom_line(data=employee_contributions, aes(x=fy, y=contributions), color=\"green\") +\n    geom_line(data=employer_contributions, aes(x=fy, y=contributions), color=\"orange\") +\n  labs (title = \"Pension Fund Payments In and Retirement Benefits Out\", \n  caption = \"Neon green - employee contributions INTO the fund. \n  Orange - employer contributions INTO the fund.\")+\n    theme(legend.position = \"bottom\", legend.title = element_blank())"
  },
  {
    "objectID": "Healthcare.html",
    "href": "Healthcare.html",
    "title": "4  State Employee Healthcare Discussion",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(formatR)\nlibrary(lubridate)\nlibrary(smooth)\nlibrary(forecast)\nlibrary(scales)\nlibrary(kableExtra)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(quantmod)\nlibrary(geofacet)\nlibrary(janitor)\n\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\n\n\nState Employee Health Care = Sum of expenditures for “health care coverage as elected by members per state employees group insurance act.” The payments are made from the Health Insurance Reserve Fund. Employee contributions are not considered a revenue source or an expenditure in our analysis.\nFunding for the State Employees Group Insurance plan originates from two funds. The Health Insurance Reserve Fund (HIRF) and the Group Insurance Premium Fund (GIPF). Contributions and payment for Health coverage benefits are deposited INTO HIRF and contributions for life insurance are deposited into the GIPF.\nHIRF is the fund mainly used to administer the group insurance program. Funding for HIRF comes from several different revenue sources, the General Revenue Fund (GRF), Road Fund, reimbursements, university funds, and misc funds. CGFA Report.\nCoding details\nIn FY2013, the Local Government Health Insurance fund was transferred to the department of Central Management Services (agency changes from 478 to 416 in data.)\nEmployer group insurance contributions for health insurance are excluded to avoid double counting the cost of healthcare provision. All employer group insurance contributions are coded as object = 1180. BUT the last two fiscal years were coded as 1900 instead of 1180 for lump sums instead of employer contributions — anything to do with pandemic money categorization?\n\nFund = 0907 = health insurance reserve, in_ff = 1\nFund = 0457 is “Group insurance premium”, in_ff = 1\nFund = 0193 is “Local govt health insurance reserve”, in=ff = 0\nfund = 0477 is “Community College Health Insurance”, in=ff = 0.\n\nhad large amount in early years\n\nFund = 9939 is “group self-insurers’ insolv”, in_ff = 1\nFund = 0940 is Self-Insurers security, in_ff = 0\nFund = 0739 is Group Workers Comp Pool Insol, in_ff = 1\n\neehc = 0 means it is NOT a state healthcare cost but it is an employer contribution of some type to some fund\neehc = 1 means it is a state employee healthcare cost and it is an employer contribution to health insurance\n\n\n\n\nCode\nexp_temp <- read_csv(\"exp_temp.csv\")\nrev_temp <- read_csv(\"rev_temp.csv\")\n\n\nhealth_ins_reserve <- exp_temp %>% filter(fund == \"0907\") %>%  group_by(fy) %>% \n\n    summarize(fund_0907 = sum(expenditure)) \n\nhealth_ins_reserve %>% \n\n  ggplot(aes(x=fy, y=fund_0907)) + geom_line() + labs(title=\"Health Insurance Reserve\", subtitle = \"Sum of expenditures from fund 907\")\n\n\n\n\n\nCode\n# object 1180 is inconsistently coded over time form the IOC \n\n# object 1180 should be employer contributions to healthcare group insurance\n\nemployer_contributions <- exp_temp %>% filter(object == \"1180\") %>% group_by(fy) %>% summarize(object1180 = sum(expenditure)) \n\nemployer_contributions%>% \n\n  ggplot(aes(x=fy, y=object1180)) + geom_line() + labs(title=\"Employer Contributions to Healthcare Group Insurance, IOC Object 1180\")\n\n\n\n\n\nCode\nemployer_contributions2 <- exp_temp %>% filter(object == \"1180\" & fund==\"0001\") %>% group_by(fy) %>% summarize(object1180 = sum(expenditure)) \n\nemployer_contributions2 %>% \n\n  ggplot(aes(x=fy, y=object1180)) + geom_line() + labs(title=\"Employer Contributions to Healthcare Group Insurance\", subtitle = \"IOC Object 1180 from Fund 001\")\n\n\n\n\n\nCode\n# examine combined group insurance totals per year\n\ngroup_ins2 <- exp_temp %>% \n\n  mutate(eehc = ifelse(\n\n    # group insurance contributions for 1998-2005 and 2013-present\n\n    # CMS took over health insurance in 2013\n\n   fund == \"0001\" & (object == \"1180\" | object ==\"1900\") & agency == \"416\" & appr_org==\"20\", 1, 0) )%>% \n\n  mutate(eehc = ifelse(\n\n    # group insurance contributions for 2006-2012\n\n    # health insurance was in healthcare and family services, agency 478 for a few years\n\n    fund == \"0001\" & object == \"1180\" & agency == \"478\" & appr_org==\"80\", 1, eehc) )%>%\n\n  filter(eehc == 1) %>% \n\n    group_by(fy) %>% \n\n    summarize(dropped_group_premiums = sum(expenditure, na.rm=TRUE))\n\ngroup_ins2 %>% ggplot(aes(x=fy, y=dropped_group_premiums)) + geom_line() + labs(title=\"Employer Healthcare Group Insurance Contributions\", subtitle= \" - Dropped from analysis to avoid double counting healthcare expenditures\", caption = \"Objects 1180 and 1900 from fund 0001. See code for additional coding details.\")\n\n\n\n\n\nIf observation is a group insurance contribution, then the expenditure amount is set to $0 (essentially dropped from analysis).\n\n4.0.1 Health Insurance Premiums - Revenue Side\nEmployee insurance premiums for healthcare are a revenue source for the state in the IOC data but are NOT included in the Fiscal Futures analysis and fiscal gap calculations.\nSource #’s:\n\n0120 = ins prem-option life\n0120 = ins prem-optional life/univ\n0347 = optional health - HMO\n0348 = optional health - dental\n0349 = optional health - univ/local SI\n0350 = optional health - univ/local\n0351 = optional health - retirement\n0352 = optional health - retirement SI\n0353 = optional health - retire/dental\n0354 = optional health - retirement hmo\n2199-2209 = various HMOs, dental, health plans from Health Insurance Reserve (fund)\n\n\n\nCode\nhealth_insurance_fund_rev<- rev_temp %>% \n\n  filter(fund==\"0907\") %>% \n\n    group_by(fy) %>%\n\n  summarize(health_ins_rev = sum(receipts)) \n\nhealth_insurance_fund_rev %>% \n\n  ggplot(aes(x=fy, y = health_ins_rev)) + \n\n  geom_line() + labs( title = \"Health insurance fund - All revenue, Fund 0907\")\n\n\n\n\n\nCode\n#collect optional insurance premiums to fund 0907 for use in eehc expenditure  \n\nemployee_health_premiums <- rev_temp %>% \n\n  mutate(employee_premiums = ifelse(\n\n    fund==\"0907\" & (source==\"0120\"| source==\"0121\"| (source>\"0345\" & source<\"0357\")|(source>\"2199\" & source<\"2209\")), 1, 0)) %>%\n\n  filter(employee_premiums == 1)\n\n# optional insurance premiums = employee insurance premiums\n\nemp_premium <- employee_health_premiums %>%\n\n  group_by(fy) %>%\n\n  summarize(employee_premiums_sum = sum(receipts))\n\n  \n\nemp_premium %>% ggplot(aes(x=fy, y = employee_premiums_sum)) + \n\n  geom_line() + labs( title = \"Employee health insurance premiums\")\n\n\n\n\n\nCode\n# contributions and benefits paid comparison\n\nggplot()+\n\n  #  geom_line(data=group_ins, aes(x=fy, y=object1180, color='Group Insurance1')) +\n\n      geom_line(data=health_insurance_fund_rev, aes(x=fy, y=health_ins_rev, color='Health Insurance Fund - All Revenue')) +\n\n geom_line(data = emp_premium, aes(x=fy, y = employee_premiums_sum, color = 'Revenue from Employee Premiums')) +\n\n    geom_line(data=health_ins_reserve, aes(x=fy, y=fund_0907, color='Cost of Provision')) +\n\n    geom_line(data=employer_contributions, aes(x=fy, y=object1180, color='Group Insurance-Object1180')) +\n\n #   geom_line(data=employer_contributions2, aes(x=fy, y=object1180, color='Employer Contributions-General Fund')) +\n\n  geom_line(data=group_ins2, aes(x=fy, y=dropped_group_premiums, color='Group Insurance - 1180 & 1900')) +\n\n  #geom_line(data= healthcare_costs, aes(x=fy, y = cost_of_provision, color = 'Healthcare Costs'))+ \n\n  scale_color_manual(values = c(\n\n    'Cost of Provision' = 'darkblue',\n\n    'Health Insurance Fund - All Revenue' = 'light green',\n\n    'Revenue from Employee Premiums' = 'dark green',\n\n    'Group Insurance - 1180 & 1900' = 'blue',\n\n    'Group Insurance-Object1180' = 'light blue'\n\n   #     'Employer Contributions-General Fund' = 'light blue'\n\n)) +\n\n  labs(title=\"Healthcare costs and group insurance contributions\", \n\n       caption = \"Healthcare costs and group insurance contributions\", \n\n       y = \"Dollars\", x = \"\")\n\n\n\n\n\nCode\nexp_temp <- exp_temp %>% \n\n  mutate(eehc = ifelse(object == \"1180\", 1, 0)) %>%\n\n  mutate(eehc = ifelse((eehc == 1 & in_ff ==\"0\"), 2, eehc))\n\n#%>%mutate(in_ff = ifelse(eehc == 2, \"1\", in_ff) ) %>% filter(eehc ==2 )\n\ntable(exp_temp$eehc)\n\n\n\n     0      1      2 \n163720   4414    149"
  },
  {
    "objectID": "Medicaid.html#federal-medicaid-reimbursements-and-medicaid-costs",
    "href": "Medicaid.html#federal-medicaid-reimbursements-and-medicaid-costs",
    "title": "6  Medicaid",
    "section": "6.1 Federal Medicaid Reimbursements and Medicaid Costs",
    "text": "6.1 Federal Medicaid Reimbursements and Medicaid Costs\n\n\nCode\nmedicaid_cost <- exp_temp %>% filter(agency==\"478\" & (appr_org==\"01\" | appr_org == \"65\" | appr_org==\"88\") & (object==\"4900\" | object==\"4400\")) %>% group_by(fy) %>% summarize(sum=sum(expenditure))\n\nmed_reimburse <- rev_temp %>% filter(rev_type==\"57\" & agency==\"478\" & (source==\"0618\"|source==\"2364\"|source==\"0660\"|source==\"1552\"| source==\"2306\"| source==\"2076\"|source==\"0676\"|source==\"0692\")) %>% group_by(fy) %>% summarize(sum=sum(receipts))\n\nggplot()+\n\n  geom_line(data=medicaid_cost, aes(x=fy, y=sum), color = \"red\") + \n\n  geom_line(data=med_reimburse, aes(x=fy, y = sum), color=\"black\") + labs(title = \"Medicaid reimbursements and Medicaid expenditures\", caption = \"Medicaid expenditures include funds provided to medical providers. \")\n\n\n\n\n\nMedicaid.That portion of the Healthcare and Family Services (or Public Aid in earlier years, agency code 478) budget for Medical (appr_organization code 65) for awards and grants (object codes 4400 and 4900).\n\nState CURE will remain in the Medicaid expenditure category due to the nature of it being federal funds providing public health services and funding to locations that provide public services.\n\n\nUses same appropriation name of “HEALTHCARE PROVIDER RELIEF” and fund == 0793 and obj_seq_type == 49000000. So can defend the “mistake” of including healthcare provider relief as Medicaid expenditure.\n\nFederal Medical Assistance Program (FMAP): in 1965. The FMAP formula compares the state per-capita income to the national per-capita income. There is no cap on the dollar amount that the federal government pays, so the morethat a state spends the more that it receives. a maximum of 83%. States with a higher per-capita income receive lower FMAP funding but no less than 50%, and the states that have a lower per-capita income receive higher FMAP funding. Those that need more, get more."
  },
  {
    "objectID": "FiscalGap.html",
    "href": "FiscalGap.html",
    "title": "7  Yearly Fiscal Gap",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(formatR)\nlibrary(lubridate)\nlibrary(smooth)\nlibrary(forecast)\nlibrary(scales)\nlibrary(kableExtra)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(quantmod)\nlibrary(geofacet)\nlibrary(janitor)\n\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE, eval=FALSE)\n\nexp_temp <- read_csv(\"exp_temp.csv\")\nrev_temp <- read_csv(\"rev_temp.csv\")\n\n\nGraphs made from aggregated_totals_long dataframe.\n\n\nCode\nannotation <- data.frame(\n  x = c(2004, 2017, 2019),\n  y = c(60000, 50000, 5000),  \n  label = c(\"Expenditures\",\"Revenue\", \"Fiscal Gap\")\n)\n\n# with trend lines:\nyear_totals %>%  \n  ggplot() +\n  # geom_smooth adds regression line, graphed first so it appears behind line graph\n  geom_smooth(aes(x = Year, y = Revenue), color = \"rosybrown2\", alpha = 0.7, method = \"lm\", se = FALSE) + \n  geom_smooth(aes(x = Year, y = Expenditures), color = \"gray\", method = \"lm\", se = FALSE) +\n  \n  # line graph of revenue and expenditures\n  geom_line(aes(x = Year, y = Revenue), color = \"Black\", size=1) +\n  geom_line(aes(x = Year, y = Expenditures), color = \"red\", size=1) +\n  \n  # labels\n    theme_bw() +\n  scale_y_continuous(labels = comma)+\n  xlab(\"Year\") + \n  ylab(\"Millions of Dollars\")  +\n  ggtitle(\"Illinois Expenditures and Revenue Totals, 1998-2022\")\n\n\n# without trend lines:\nyear_totals %>%  \n  ggplot() +\n  # line graph of revenue and expenditures\n  geom_line(aes(x = Year, y = Revenue), color = \"Black\", size=1) +\n  geom_line(aes(x = Year, y = Expenditures), color = \"red\", size=1) +\n      theme_bw() +\n  scale_y_continuous(labels = comma)+\n  xlab(\"Year\") + \n  ylab(\"Millions of Dollars\")  +\n  ggtitle(\"Illinois Expenditures and Revenue Totals, 1998-2022\")\n\n\n\nfiscal_gap <- year_totals %>%  \n  ggplot() +\n  geom_hline(yintercept = 0) +\n  # geom_smooth adds regression line, graphed first so it appears behind line graph\n  geom_smooth(aes(x = Year, y = Revenue), color = \"gray\", alpha = 0.7, method = \"lm\", se = FALSE) + \n  #  scale_linetype_manual(values=\"dashed\")+\n  geom_smooth(aes(x = Year, y = Expenditures), color =\"rosybrown2\", linetype = \"dashed\", method = \"lm\", se = FALSE, alpha = 0.7) +\n\n  # line graph of revenue and expenditures\n  geom_line(aes(x = Year, y = Revenue), color = \"Black\", size=1) +\n  geom_line(aes(x = Year, y = Expenditures, linetype = \"dashed\"), color = \"red\", lwd=1) +\n  geom_line(aes(x = Year, y = `Fiscal Gap`), color = \"gray\") +\n  \n  geom_text(data = annotation, aes(x=x, y=y, label=label))+\n  # labels\n    theme_bw() +\n    theme(legend.position = \"none\")+\n\n    scale_linetype_manual(values = c(\"dashed\", \"dashed\")) +\n\n  scale_y_continuous(labels = comma)+\n  xlab(\"Year\") + \n  ylab(\"Millions of Dollars\")  +\n  ggtitle(\"Illinois Expenditures and Revenue Totals, 1998-2022\")\n\nfiscal_gap\n\n\n\nannotation_billions <- data.frame(\n  x = c(2004, 2017, 2019),\n  y = c(60, 50, 5),  \n  label = c(\"Expenditures\",\"Revenue\", \"Fiscal Gap\")\n)\nfiscal_gap2 <- year_totals %>%  \n  ggplot() +\n  geom_hline(yintercept = 0) +\n  geom_line(aes(x = Year, y = Revenue/1000), color = \"Black\", lwd=1) +\n  geom_line(aes(x = Year, y = Expenditures/1000, linetype = \"dashed\"), color = \"red\", lwd=1) +\n  geom_line(aes(x = Year, y = `Fiscal Gap`/1000), color = \"gray\") +\n  \n  geom_text(data = annotation, aes(x=x, y=y/1000, label=label))+\n    theme_bw() +\n  theme(legend.position = \"none\")+\n    scale_linetype_manual(values = c(\"dashed\", \"dashed\")) +\n\n  scale_y_continuous(labels = comma)+\n  xlab(\"Year\") + \n  ylab(\"Billions of Dollars\")  +\n  ggtitle(\"Illinois Expenditures and Revenue Totals, 1998-2022\")\n\nfiscal_gap2\n\n\n\n\nCode\naggregated_totals_long %>%  \n  filter(type == \"exp\") %>% # uses only expenditures\n  ggplot(aes(x = Year, y = Dollars, group = Category, color = Category)) +\n  geom_line()+\n    xlab(\"Year\") + \n    ylab(\"Millions of Dollars\")  +\n    ggtitle(\"Illinois Expenditures by Category\")\n\naggregated_totals_long %>%  \n  filter(type == \"rev\") %>% #uses only revenues\n  ggplot(aes(x = Year, y = Dollars, group = Category, color = Category)) +\n  geom_line()+\n    xlab(\"Year\") + \n    ylab(\"Millions of Dollars\")  +\n    ggtitle(\"Illinois Revenues by Category\")\n\n\nExpenditure and revenue amounts in millions of dollars:\n\n\nCode\nexp_long %>%\n  filter(Year == 2022) %>%\n  #mutate(`Total Expenditures`= sum(Dollars, na.rm = TRUE)) %>%\n # select(-c(Year, `Total Expenditures`)) %>%\n  arrange(desc(`Dollars`)) %>%\n  ggplot() + \n  geom_col(aes(x = fct_reorder(Category_name, `Dollars`), y = `Dollars`, fill = \"red\"))+ \n  coord_flip() +\n      theme_bw()+\n  theme(legend.position = \"none\") +\n  labs(title = \"Expenditures for FY2022\") +\n    xlab(\"Expenditure Categories\") +\n  ylab(\"Millions of Dollars\") \n\nrev_long %>%\n  filter(Year == 2022) %>%\n  #mutate(`Total Expenditures`= sum(Dollars, na.rm = TRUE)) %>%\n # select(-c(Year, `Total Expenditures`)) %>%\n  arrange(desc(`Dollars`)) %>%\n  ggplot() + \n  geom_col(aes(x = fct_reorder(Category_name, `Dollars`), y = `Dollars`))+ \n  coord_flip() +\n    theme_bw() +\n    theme(legend.position = \"none\") +\n      labs(title = \"Revenues for FY2022\")+\n    xlab(\"Revenue Categories\") +\n  ylab(\"Millions of Dollars\") \n\n\nExpenditure and revenues when focusing on largest categories and combining others into “All Other Expenditures(Revenues)”:\n\n\nCode\nexp_long %>%\n  filter( Year == 2022) %>%\n  mutate(rank = rank(Dollars),\n        Category_name = ifelse(rank > 13, Category_name, 'All Other Expenditures')) %>%\n # select(-c(Year, Dollars, rank)) %>%\n  arrange(desc(Dollars)) %>%\n  ggplot() + \n  geom_col(aes(x = fct_reorder(Category_name, `Dollars`), y = `Dollars`), fill = \"rosybrown2\")+ \n  coord_flip() +\n      theme_bw() +\n    labs(title = \"Expenditures for FY2022\") +\n    xlab(\"\") +\n  ylab(\"Millions of Dollars\")\n\nrev_long %>%\n  filter( Year == 2022) %>%\n  mutate(rank = rank(Dollars),\n        Category_name = ifelse(rank > 10, Category_name, 'All Other Sources')) %>%\n  arrange(desc(Dollars)) %>%\n  ggplot() + \n  geom_col(aes(x = fct_reorder(Category_name, `Dollars`), y = `Dollars`), fill = \"dark gray\")+ \n  coord_flip() +\n      theme_bw() +\n    labs(title = \"Revenues for FY2022\") +\n    xlab(\"\") +\n  ylab(\"Millions of Dollars\")\n\n\nChanges in Categories - 2021 to 2022 Dot Plot Attempt:\n\n\nCode\nrev_long %>%\n    filter(Year == \"2022\" | Year == \"2021\") %>%\n  mutate(Year = as.character(Year)) %>%\n  ggplot(aes(x = Dollars, y = reorder(Category, Dollars))) +\n  geom_line(aes(group = Category) )+\n    geom_text(aes(x = ifelse(Year == \"2022\", as.numeric(Dollars), NA),  label = ifelse(Year == \"2022\", Category_name, \"\")),  \n            hjust = -0.2,\n            size = 2.8) +\n         geom_point(aes(color = Year), size=2)  +\n  labs(title = \"2021 to 2022 Change in Revenue\", x = \"Millions of Dollars\" , y = \"\",  caption = \"\")  +\n   scale_fill_manual(values = c(\"#d62828\", \"#003049\"), labels = c(\"FY 2021\", \"FY 2022\"))+\n    scale_color_manual(values = c(\"#d62828\", \"#003049\")) +   \n  theme_classic()+ \n    theme(\n   legend.position = \"bottom\" ,\n  axis.text.y = element_blank(),\n  axis.ticks.y = element_blank(),\n  axis.line.y.left  = element_blank(),\n # axis.line.x = element_blank(),\n  #  axis.title.y = element_blank(),\n # axis.ticks.x = element_blank()\n )+\n  scale_x_continuous(limits = c(0, 31000), labels = comma)\n\n\n\n\nexp_long %>%\n    filter(Year == \"2022\" | Year == \"2021\") %>%\n  mutate(Year = as.character(Year)) %>%\n  ggplot(aes(x = Dollars, y = reorder(Category, Dollars))) +\n  geom_line(aes(group = Category) )+\n  geom_text(aes(x = ifelse(Year == \"2022\", (as.numeric(Dollars)+1100), NA),  \n                label = ifelse(Year == \"2022\", Category_name, \"\")),  \n            hjust = 0,\n            size = 2.8) +\n  geom_point(aes(color = Year), size=2 #, alpha = 0.5\n             )  +\n  labs(title = \"2021 to 2022 Change in Expenditures\", x = \"Millions of Dollars\" , y = \"\",  caption = \"\")  +\n   scale_fill_manual(values = c(\"#d62828\", \"#003049\"), labels = c(\"FY 2021\", \"FY 2022\"))+\n    scale_color_manual(values = c(\"#d62828\", \"#003049\")) +\n\n   theme_classic()+ \n    theme(\n    legend.position = \"bottom\" ,\n  axis.text.y = element_blank(),\n  axis.ticks.y = element_blank(),\n  axis.line.y.left  = element_blank(),\n  #axis.line.x = element_blank(),\n   # axis.title.y = element_blank(),\n  #axis.ticks.x = element_blank()\n  )+\n  scale_x_continuous(limits = c(0, 31000), labels = comma)\n\n\n\n7.0.1 Top 3 Revenues\n\n\nCode\nannotation <- data.frame(\n  x = c(2012, 2019, 2012),\n  y = c(16000, 10000, 5000),  \n  label = c(\"Individual Income Tax\", \"Sales Tax\", \"Corporate Income Tax\")\n)\n\ntop3 <- rev_long  %>% \n  filter(Category == \"02\" | Category == \"03\" | Category == \"06\") %>%\n  ggplot()+\n  geom_line(aes(x=Year, y=Dollars, color = Category_name)) + \n  geom_text(data = annotation, aes(x=x, y=y, label=label))+\n    theme_bw() +\n  \n  scale_y_continuous(labels = comma)+\n  scale_linetype_manual(values = c(\"dotted\", \"dashed\", \"solid\")) +\n\n  theme(legend.position = \"none\")+\n  labs(title = \"Top 3 Own Source Revenues\", \n       subtitle = \"Individual Income Taxes, Sales Tax, and Corporate income taxes\",\n       y = \"Nominal Dollars (in Millions)\") \n  \n\ntop3\n\n\n\n\n7.0.2 Own Source and Fed Transfers\n\n\nCode\nownsource_rev <- rev_long %>%\n  filter(!Category %in% c(\"57\", \"58\", \"59\")) %>%\n  group_by(Year) %>% \n  summarize(Dollars = sum(Dollars))\n\n# ownsource_rev %>% \n#   ggplot()+geom_line(aes(x=Year, y=Dollars)) + \n#   labs(title = \"Own Source Revenues\", subtitle = \"Total own source revenue\", y = \"Millions of Dollars\")\n\nfed_rev <- ff_rev %>% select(fy, rev_57, rev_58, rev_59) %>%\n  mutate(fed_total = rev_57+rev_58+rev_59)\n\n\nannotation <- data.frame(\n  x = c(2010, 2010),\n  y = c(50000, 25000),  \n  label = c(\"Own Source Revenue\", \"Federal Transfers\")\n)\n\n\nggplot() + \n  geom_line(data = ownsource_rev, aes(x=Year, y=Dollars), color = \"Red\") + \n  geom_line(data = fed_rev, aes(x=fy, y=fed_total), color = \"Black\") + \n    geom_text(data = annotation, aes(x=x, y=y, label=label))+\n    scale_y_continuous(labels = comma)+\n  theme(legend.position = \"none\")+\n\n  theme_bw()+\n  labs(title = \"Own Source Revenue and Federal Transfers\", \n  y = \"Nominal Dollars (in Millions)\")"
  },
  {
    "objectID": "Everything.html",
    "href": "Everything.html",
    "title": "9  All Code together",
    "section": "",
    "text": "10 Expenditure & Revenue Categorization\nCreate total revenues and total expenditures only:\nGraphs made from aggregated_totals_long dataframe.\nExpenditure and revenue amounts in millions of dollars:\nExpenditure and revenues when focusing on largest categories and combining others into “All Other Expenditures(Revenues)”:\nChanges in Categories - 2021 to 2022 Dot Plot Attempt:\nEach year, you will need to update the CAGR formulas! Change the filter() year.\ncalc_cagr is a function created for calculating the CAGRs for different spans of time.\nExpenditure and Revenue Growth using a lag formula:\nSaves main items in one excel file named summary_file.xlsx. Delete eval=FALSE to run on local computer.\nIf only sustainable revenues are included in the model, then the federal dollars from the pandemic response (CARES, CRSSA,& ARPA)should be excluded from the calculation of the fiscal gap.\nThe Fiscal Futures model focuses on sustainable revenue sources. To understand our fiscal gap and outlook, we need to exclude these one time revenues. GOMB has emphasized that they have allocated COVID dollars to one time expenditures (unemployment trust fund, budget stabilization fund, etc.). The fiscal gap, graphs,and CAGRs have been recalculated in the Drop COVID Dollars section below. In addition, an attempt at forecasting revenue and expenditures is also made after dropping the federal COVID dollars.\nCompare with and without federal COVID dollars:\nExpenditure and revenue amounts in millions of dollars:\nThe 10 largest revenue sources and 13 largest expenditure sources remain separate categories and all other smaller sources/expenditures are combined into “All Other _____”. These condensed tables are typically used in the Fiscal Futures articles. They were manually created in past years but this hopefully automates the process a bit until final formatting stages.\nTop 10 revenue sources CAGRs and Yearly Change Tables:"
  },
  {
    "objectID": "Everything.html#pension-discusion",
    "href": "Everything.html#pension-discusion",
    "title": "9  All Code together",
    "section": "9.1 Pension Discusion",
    "text": "9.1 Pension Discusion\n\n\nCode\n# check what is being included in pensions\n\n# funds related to pension contributions\npension_funds <- c(\"0472\", \"0473\", \"0477\", \"0479\", \"0481\", \"0755\", \"0786\", \"0787\", \"0788\", \"0789\", \"0799\")\n\npension_check <- exp_temp %>% \n  mutate(pension = case_when( \n # object == \"4430\" & fund == \"0825\" ~ \"Object 4430 - Pension Buyout/Benefits Paid Early\",\n    (object==\"4430\") ~ \"Object 4430 - Benefits Paid to Employees; EXCLUDED\", # pensions, annuities, benefits\n    (object==\"4431\") ~ \"Object 4431 - State Contributions; INCLUDED\", # 4431 = state payments into pension fund\n        (obj_seq_type > \"11590000\" & obj_seq_type < \"11660000\")  ~ \"Object 1160-1165 Employer Contributions to Pension Fund; EXCLUDED\",\n    # objects 1159 to 1166 are all considered Retirement by Comptroller \n    \n            TRUE ~ \"0\")) %>%  # All other observations coded as 0 for non-pension items\n  \n  # recodes specific instances of code anomalies from past years:\n  mutate(pension = case_when(\n    (object==\"1298\" & fund %in% pension_funds ) ~ \"Object 1298 - Purchase of Investments; DROPPED\", \n\n    \n      # pension stabilization fund in 2022 \n # object == \"1900\" & fund == \"0319\" ~ \"Fund 0319-Pension Stabilization\", \n    object == \"1900\" & fund %in% pension_funds ~ \"Fund 0319 - Pension Stabilization\", \n\n  \n  object == \"4900\" & fund %in% pension_funds ~ \"Object 4900 - Awards/Grants; Weird 2010-2011 values\",\n  \n    TRUE ~ as.character(pension)) ) %>% \n  filter(pension != \"0\" )\n\npension_check %>% group_by(fy, pension) %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %>%\n  ggplot(aes(x=fy, y = expenditure, color = pension)) + \n  geom_line() + \n\n  labs (title = \"Pension Fund Payments In and Retirement Benefits Out\", \n  caption = \"Object 4430 is retirement benefits paid to employees. \n  Object 4431 includes state payments INTO pension Fund.\n  Object 1998 is excluded except for years 2010 and 2011 due to POBs.\")+\n    theme(legend.position = \"bottom\")+\n  guides(color = guide_legend(nrow=3))\n\n\n\n\n\nCode\npension_check %>% group_by(fy, object) %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %>%\n  ggplot(aes(x=fy, y = expenditure, color = object)) + \n  geom_line() + \n  labs (title = \"Expenditures by Object\")\n\n\n\n\n\nCode\npension_check %>% group_by(fy, type) %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %>%\n  ggplot(aes(x=fy, y = expenditure, color = type)) + \n  geom_line() + \n  labs (title = \"Expenditures by Type\", caption = \"Not confident with what Type represents. \n        $10 billion POB issued in 2003-2004 and again in 2010-2011.\")\n\n\n\n\n\nCode\npension_check3 <- exp_temp %>% \n  mutate(pension = case_when( \n       (object==\"4430\"  ) ~ 1, # 4430 = pension benefits paid to retired employees\n            TRUE ~ 0)) %>% \n  filter(pension > 0 )\n\npension_check3 %>% group_by(fy) %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %>%\n  ggplot(aes(x=fy, y = expenditure)) + \n  geom_line() + \n  labs (title = \"Pension Benefits Paid to Employees\")\n\n\n\n\n\nCode\n## taking care of Pension Obligation Bond proceeds\n\npension_picture <- exp_temp %>% \n  mutate(pension = case_when( \n  #object == \"4430\" & fund == \"0825\" ~ \"Pension Buyout/Benefits Paid Early; INCLUDED\",\n    (object==\"4430\") ~ \"Benefits Paid to Employees\", # pensions, annuities, benefits\n    (object==\"4431\") ~ \"State Pension Contributions\", # 4431 = state payments into pension fund\n        (obj_seq_type > \"11590000\" & obj_seq_type < \"11660000\")  ~ \"IOC Retirement Expense Objectw\",\n    # objects 1159 to 1166 are all considered Retirement by Comptroller \n    \n            TRUE ~ \"0\")) %>%  # All other observations coded as 0 for non-pension items\n  \n  # recodes specific instances of code anomalies from past years:\n#  mutate(pension = case_when( (object==\"1298\" & fund %in% pension_funds ) ~ \"Purchase of Investments\", \n\n    \n      # pension stabilization fund in 2022 \n # object == \"1900\" & fund == \"0319\" ~ \"Fund 0319-Pension Stabilization\", \n   # object == \"1900\" & fund %in% pension_funds ~ \"Pension Stabilization Fund\", \n  \n    #TRUE ~ as.character(pension)) ) %>% \n  filter(pension != \"0\" )\n\npension_picture %>% group_by(fy, pension) %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %>%\n  ggplot(aes(x=fy, y = expenditure, color = pension)) + \n  geom_line() + \n\n  labs (title = \"Pension Fund Payments In and Retirement Benefits Out\", \n  caption = \"All pension expenditure types are included in IOC Expenditure data\")+\n    theme(legend.position = \"bottom\", legend.title = element_blank())#+ guides(color = guide_legend(nrow=2))\n\n\n\n\n\n\n9.1.1 Pension Contributions - Revenue Data\n\n\nCode\n# rev_type = 51 is for retirement/pension contributions from both employers and employees.\n\n# current year employee revenue source = 0573, contributions by employee == 572 (stops at 2011)\nretirement_contributions <- rev_temp %>% \n  filter(rev_type == \"51\") %>% group_by(fy) %>% summarize(contributions = sum(receipts))\n\nemployer_contributions <- rev_temp %>% \n  filter(rev_type == \"51\" & source == \"0577\") %>% group_by(fy) %>% summarize(contributions = sum(receipts))\n\nemployee_contributions <- rev_temp %>% \n  filter(rev_type == \"51\" & (source == \"0572\" | source == \"0573\") ) %>% \n  group_by(fy) %>% summarize(contributions = sum(receipts))\n\nbenefits_paid <- pension_check %>% filter(object == \"4430\") %>%\n  group_by(fy) %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE))\n\nstate_contrib <- pension_check %>% filter(object == \"4431\") %>%\n  group_by(fy) %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE))\n\nrev_temp %>% \n  filter(rev_type == \"51\") %>% # all retirement contributions\n  group_by(fy, source) %>% \n  summarise(sum = sum(receipts, na.rm = TRUE)) %>%\n  ggplot() +\n  geom_line(aes(x=fy, y = sum, color=source)) + labs(title=\"All Retirement Contributions, ALL rev_source == 51\", \n       caption = \"Source 0573, 0572 is for employee contributions. 0577 is Contributions by employer.\")\n\n\n\n\n\nCode\n# # contributions and benefits paid comparison\n# ggplot()+\n#   geom_line(data=employee_contributions, aes(x=fy, y=contributions), color=\" light green\") +\n#     geom_line(data=employer_contributions, aes(x=fy, y=contributions), color=\"orange\") +\n# \n#   geom_line(data= state_contrib, aes(x=fy, y = expenditure), color = \"red\")+ \n# \n#   geom_line(data= benefits_paid, aes(x=fy, y = expenditure), color = \"dark blue\")+ \n#   labs(title=\"Pension fund inflows and outflows\", \n#        caption = \"Blue: object = 4430 for benefits paid out of funds, \n#       red:  object = 4431 for state contributions into pension fund, \n#     neon  green: employee contributions into the fund,\n#      orange: employer contributions into the fund.\", y = \"Dollars\")\n\npension_picture %>% group_by(fy, pension) %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %>%\n  ggplot(aes(x=fy, y = expenditure, color = pension)) + \n  geom_line() + \n  geom_line(data=employee_contributions, aes(x=fy, y=contributions), color=\"green\") +\n    geom_line(data=employer_contributions, aes(x=fy, y=contributions), color=\"orange\") +\n  labs (title = \"Pension Fund Payments In and Retirement Benefits Out\", \n  caption = \"Neon green - employee contributions INTO the fund. \n  Orange - employer contributions INTO the fund.\")+\n    theme(legend.position = \"bottom\", legend.title = element_blank())"
  },
  {
    "objectID": "Everything.html#debt-service-discussion",
    "href": "Everything.html#debt-service-discussion",
    "title": "9  All Code together",
    "section": "9.2 Debt Service Discussion",
    "text": "9.2 Debt Service Discussion\n\n\nCode\ntollway <- exp_temp %>% filter(fund == \"0455\") #all tollway expenditures\ncapitalproject_debtservice <- exp_temp %>%filter(object == \"8800\") # ALL Capital projects debt service\n\n# look at Illinois tollway bond proceeds and debt service: \n# rev_temp %>% filter(fund == \"0455\") # examine items in fund 0455\n#exp_temp %>% filter(fund == \"0455\") %>% group_by(fy) %>% summarize(sum = sum(expenditure)) %>% arrange(-fy)\ntollway\n\n\n\n\n  \n\n\n\nCode\n#rev_temp %>% filter(fund == \"0455\") %>% group_by(fy) %>% summarize(sum = sum(receipts)) %>% arrange(-fy)\n\n\ntollway_exp <- exp_temp %>% filter(fund == \"0455\") %>% group_by(fy) %>% summarize(expenditure = sum(expenditure))\n                                                                                                    #tollway_exp %>% ggplot() + geom_line(aes(x=fy, y=expenditure)) + labs(title = \"Fund 0455 from Expenditure: All Tollway Expenditures\", caption = \"Data from IOC Expenditure Files. Fund 0455 is the IL State Tollway\")\n\n\n# all tollway revenues, not just bond proceeds\nalltollway<-rev_temp %>% filter(fund == \"0455\" & source != \"0571\") %>% group_by(fy) %>% summarize(sum = sum(receipts, na.rm = TRUE))\n\n\n# tollway bond proceeds\ntollway_bondproc <- rev_temp %>% filter(fund == \"0455\" & source == \"0571\" ) %>% group_by(fy) %>% summarize(sum = sum(receipts, na.rm = TRUE))\n\n#alltollway %>%  ggplot() + geom_line(aes(x=fy, y=sum)) + labs(title = \"Fund 0455 - All Tollway Revenue\", caption = \"Data from IOC Revenue Files. Fund 0455 is the IL State Tollway Revenue\") \n\n#tollway_bondproc %>% ggplot() + geom_line(aes(x=fy, y=sum)) + labs(title = \"Fund 0455 - Tollway Revenue: Tollway Bond Proceeds\", caption = \"Data from IOC Revenue Files. Fund 0455 is the IL State Tollway Revenue\")\n  \n#ggplot() + geom_line(data=tollway_bondproc, aes(x=fy, y=sum)) + labs(title = \"Fund 0455 - Tollway Revenue: Tollway Bond Proceeds\", caption = \"Data from IOC Revenue Files. Fund 0455 is the IL State Tollway Revenue\")\n\n#tollwaydebt %>% ggplot() + geom_line(aes(x=fy, y=sum)) + labs(title = \"Tollway Debt Service\", caption = \"Debt service includes principal and interest for the Illinois Tollway. Object = 8800 and fund = 0455\")\n\n\n#tollway debt principal and interest\ntollwaydebt <- exp_temp %>%filter(object == \"8800\" & fund == \"0455\") %>% group_by(fy) %>% summarize(sum=sum(expenditure)) \n\n# Tollway agency expenditures = SAME as filtering by fund == 0455\n#tollway<-exp_temp %>% filter(agency == \"557\")\n#exp_temp %>% filter(agency == \"557\") %>% group_by(fy) %>% summarize(sum = sum(expenditure)) %>% arrange(-fy)\n\n# contributions and benefits paid comparison\nggplot()+\n  geom_line(data=tollway_bondproc, aes(x=fy, y=sum, color='Bond Proceeds')) +\n  geom_line(data= tollwaydebt, aes(x=fy, y = sum, color = 'Debt Service'))+ \n  geom_line(data= tollway_exp, aes(x=fy, y = expenditure, color = 'Tollway Expenditures'))+ \n  geom_line(data= alltollway, aes(x=fy, y = sum, color = \"Tollway Revenue\"))+ \n  scale_color_manual(values = c(\n    'Bond Proceeds' = 'darkblue',\n    'Debt Service' = 'red',\n    'Tollway Expenditures' = 'orange',\n    'Tollway Revenue' = 'light green')) +\n  labs(title=\"Tollway bond procreeds, debt service, revenue, and expenditures.\", \n       caption = \"Tollway revenue + bond proceeds should be roughly equal to tollway expenditures + debt service.\", \n       y = \"Dollars\")\n\n\n\n\n\n\n9.2.0.1 State Principal and Interest\nFiltering for interest on short term borrowing and GO bonds (88130008, 88130000, and 88130108) and GO bond principal amounts (88110008).\n\nobject == 8813 is for all debt service interest but obj_seq_type is used to specify short term borrowing versus regular debt service.\nan Interest to Principal ratio is also calculated in the table below.\n\nLooking only at general obligation principal payments and interest payments:\n\n\nCode\n# GO bond principal and GO bond interest\nGObond_debt <- exp_temp %>% \n  filter(obj_seq_type == \"88110008\" |obj_seq_type == \"88130000\" | obj_seq_type == \"88130008\") %>% \n  group_by(fy, obj_seq_type) %>% \n  summarize(sum = sum(expenditure, na.rm=TRUE)) %>% \n  pivot_wider(names_from = obj_seq_type, values_from = sum) %>% \n  mutate(principal = `88110008`,\n         interest = sum(`88130008`+`88130000`, na.rm = TRUE),\n         ratio = (as.numeric(interest)/as.numeric(principal)))\n\nGObond_debt %>% select(principal, interest, ratio) %>%\n  mutate(across(principal:interest, ~format(., big.mark= \",\", scientific = F)))\n\n\n\n\n  \n\n\n\nCode\n# GObond_debt %>% ggplot() + \n#   geom_line(aes(x=fy, y=principal, color = \"Principal\"))+ \n#   geom_line(aes(x=fy, y=interest, color = \"Interest\")) + \n#   labs(title = \"General Obligation principal and interest payments\")\n\nGObond_debt %>% ggplot() +   \n  geom_col(aes(x=fy, y=interest/1000000, fill = \"Interest\")) + \n  geom_col(aes(x=fy, y=principal/1000000, fill = \"Principal\"))+ \n  labs(title = \"Debt Service\", subtitle = \"General Obligation Principal and Interest Payments\")\n\n\n\n\n\nLooking only at short term borrowing principal and interest payments:\n\n\nCode\n# short term borrowing, first observation is in 2004?\nshort_debt <- exp_temp %>% \n  filter(obj_seq_type == 88110108 |obj_seq_type == 88130108) %>% \n  group_by(fy, obj_seq_type) %>% \n  summarize(sum = sum(expenditure, na.rm=TRUE)) %>% \n  pivot_wider(names_from = obj_seq_type, values_from = sum) %>% \n  mutate(principal = `88110108`,\n         interest = `88130108`,\n         ratio = (as.numeric(interest)/as.numeric(principal)))\n\nshort_debt %>% select(principal, interest, ratio) %>%\n  mutate(across(principal:interest, ~format(., big.mark= \",\",  scientific = F)))\n\n\n\n\n  \n\n\n\nCode\nshort_debt %>% ggplot() + \n  geom_col(aes(x=fy, y=principal/1000000, fill = \"Principal\"))+ \n  geom_col(aes(x=fy, y=interest/1000000, fill = \"Interest\")) + \n  labs(title = \"Debt Service\", subtitle = \"Short Term Borrowing: Principal and Interest Payments\")\n\n\n\n\n\nWhen including short term borrowing and normal debt service, the debt ratio seems more normal and the total interest and principal payments over the years are smoothed out.\nPrincipal and interest amounts calculated exclude the Illinois Tollway debt service and debt for capital projects. Capital projects debt service is examined below:\n\n\nCode\ncapitalprojects <- exp_temp %>%filter(object == \"8800\")\n\nall_debt <- exp_temp %>% \n  filter(fund != \"0455\" & (object == \"8811\" |object == \"8813\" | object == \"8800\") )%>% \n  group_by(fy, object) %>% \n  summarize(sum = sum(expenditure, na.rm=TRUE)) %>% \n  pivot_wider(names_from = object, values_from = sum) %>% \n  mutate(principal = `8811`,\n         interest = `8813`,\n         CapitalProjects = `8800`,\n         ratio = (as.numeric(interest)/as.numeric(principal)))\n\nall_debt %>% select(principal, interest, CapitalProjects, ratio) %>%\n  mutate(across(principal:CapitalProjects, ~format(., big.mark= \",\", scientific = F)))\n\n\n\n\n  \n\n\n\nCode\nall_debt %>% ggplot() + \n  geom_line(aes(x=fy, y=principal/1000000, color = \"Principal\"))+ \n  geom_line(aes(x=fy, y=interest/1000000, color = \"Interest\"))+\n  geom_line(aes(x=fy, y = CapitalProjects / 1000000, color = \"Capital Projects\"))+\n  labs(y = \"Debt ($Millions)\",\n       title = \"Principal and Interest payments\", subtitle = \"Principal and interest from short term borrowing and GO Bonds debt service\", caption = \"Capital projects does not include Illinois tollway debt service.\n       Capital projects include interest and principal values as one value and cannot be sepearated.\")\n\n\n\n\n\nCode\nall_debt %>% ggplot() + \n  geom_line(aes(x=fy, y=principal/1000000, color = \"Principal\"))+ \n  geom_line(aes(x=fy, y=interest/1000000, color = \"Interest\"))+\n  geom_line(aes(x=fy, y = CapitalProjects / 1000000, color = \"Capital Projects Debt Service\"))+\n  geom_line(data = tollwaydebt, aes( x=fy, y=sum/1000000, color = \"Tollway Debt Service\"))+\n  labs(y = \"Debt ($Millions)\", title = \"Short term borrowing and GO Bonds\",\n       subtitle = \"Principal and Interest payments\", caption = \"Capital projects does not include Illinois tollway debt service.\") \n\n\n\n\n\nCode\nall_debt %>% ggplot() + \n  geom_line(aes(x=fy, y=(principal+interest)/1000000, color = \"Principal & Interest\"))+ \n  #geom_line(aes(x=fy, y=interest/1000000, color = \"Interest\"))+\n  geom_line(aes(x=fy, y = CapitalProjects / 1000000, color = \"Capital Projects Debt Service\"))+\n  geom_line(data = tollwaydebt, aes( x=fy, y=sum/1000000, color = \"Tollway Debt Service\"))+\n  labs(y = \"Debt ($Millions)\", title = \"Illinois Debt Service Expenditures: Short term borrowing and GO Bonds\",\n       subtitle = \"Principal and Interest payments\", caption = \"Capital projects does not include Illinois tollway debt service.\") \n\n\n\n\n\nCapital projects include the IL Civic Center and Build Illinois Bonds. Tollway principal and interest has been dropped from the State’s Debt Service expenditure but is counted in the Illinois Tollway Expenditure cost."
  },
  {
    "objectID": "Everything.html#state-employee-healthcare-discussion",
    "href": "Everything.html#state-employee-healthcare-discussion",
    "title": "9  All Code together",
    "section": "9.3 State Employee Healthcare Discussion",
    "text": "9.3 State Employee Healthcare Discussion\n\n\nCode\nhealth_ins_reserve <- exp_temp %>% filter(fund == \"0907\") %>%  group_by(fy) %>% \n    summarize(fund_0907 = sum(expenditure)) \n\nhealth_ins_reserve %>% \n  ggplot(aes(x=fy, y=fund_0907)) + geom_line() + labs(title=\"Health Insurance Reserve\", subtitle = \"Sum of expenditures from fund 907\")\n\n\n\n\n\nCode\n# object 1180 is inconsistently coded over time form the IOC \n# object 1180 should be employer contributions to healthcare group insurance\nemployer_contributions <- exp_temp %>% filter(object == \"1180\") %>% group_by(fy) %>% summarize(object1180 = sum(expenditure)) \n\nemployer_contributions%>% \n  ggplot(aes(x=fy, y=object1180)) + geom_line() + labs(title=\"Employer Contributions to Healthcare Group Insurance, IOC Object 1180\")\n\n\n\n\n\nCode\nemployer_contributions2 <- exp_temp %>% filter(object == \"1180\" & fund==\"0001\") %>% group_by(fy) %>% summarize(object1180 = sum(expenditure)) \n\nemployer_contributions2 %>% \n  ggplot(aes(x=fy, y=object1180)) + geom_line() + labs(title=\"Employer Contributions to Healthcare Group Insurance\", subtitle = \"IOC Object 1180 from Fund 001\")\n\n\n\n\n\nCode\n# examine combined group insurance totals per year\ngroup_ins2 <- exp_temp %>% \n  mutate(eehc = ifelse(\n    # group insurance contributions for 1998-2005 and 2013-present\n    # CMS took over health insurance in 2013\n   fund == \"0001\" & (object == \"1180\" | object ==\"1900\") & agency == \"416\" & appr_org==\"20\", 1, 0) )%>% \n  mutate(eehc = ifelse(\n    # group insurance contributions for 2006-2012\n    # health insurance was in healthcare and family services, agency 478 for a few years\n    fund == \"0001\" & object == \"1180\" & agency == \"478\" & appr_org==\"80\", 1, eehc) )%>%\n  filter(eehc == 1) %>% \n    group_by(fy) %>% \n    summarize(dropped_group_premiums = sum(expenditure, na.rm=TRUE))\n\n\ngroup_ins2 %>% ggplot(aes(x=fy, y=dropped_group_premiums)) + geom_line() + labs(title=\"Employer Healthcare Group Insurance Contributions\", subtitle= \" - Dropped from analysis to avoid double counting healthcare expenditures\", caption = \"Objects 1180 and 1900 from fund 0001. See code for additional coding details.\")\n\n\n\n\n\n\n9.3.1 Health Insurance Premiums - Revenue Side\n\n\nCode\nhealth_insurance_fund_rev<- rev_temp %>% \n  filter(fund==\"0907\") %>% \n    group_by(fy) %>%\n  summarize(health_ins_rev = sum(receipts)) \n\nhealth_insurance_fund_rev %>% \n  ggplot(aes(x=fy, y = health_ins_rev)) + \n  geom_line() + labs( title = \"Health insurance fund - All revenue, Fund 0907\")\n\n\n\n\n\nCode\n#collect optional insurance premiums to fund 0907 for use in eehc expenditure  \nemployee_health_premiums <- rev_temp %>% \n  mutate(employee_premiums = ifelse(\n    fund==\"0907\" & (source==\"0120\"| source==\"0121\"| (source>\"0345\" & source<\"0357\")|(source>\"2199\" & source<\"2209\")), 1, 0)) %>%\n  filter(employee_premiums == 1)\n\n# optional insurance premiums = employee insurance premiums\nemp_premium <- employee_health_premiums %>%\n  group_by(fy) %>%\n  summarize(employee_premiums_sum = sum(receipts))\n  \nemp_premium %>% ggplot(aes(x=fy, y = employee_premiums_sum)) + \n  geom_line() + labs( title = \"Employee health insurance premiums\")\n\n\n\n\n\nCode\n# contributions and benefits paid comparison\nggplot()+\n  #  geom_line(data=group_ins, aes(x=fy, y=object1180, color='Group Insurance1')) +\n      geom_line(data=health_insurance_fund_rev, aes(x=fy, y=health_ins_rev, color='Health Insurance Fund - All Revenue')) +\n geom_line(data = emp_premium, aes(x=fy, y = employee_premiums_sum, color = 'Revenue from Employee Premiums')) +\n    geom_line(data=health_ins_reserve, aes(x=fy, y=fund_0907, color='Cost of Provision')) +\n    geom_line(data=employer_contributions, aes(x=fy, y=object1180, color='Group Insurance-Object1180')) +\n #   geom_line(data=employer_contributions2, aes(x=fy, y=object1180, color='Employer Contributions-General Fund')) +\n\n  geom_line(data=group_ins2, aes(x=fy, y=dropped_group_premiums, color='Group Insurance - 1180 & 1900')) +\n  #geom_line(data= healthcare_costs, aes(x=fy, y = cost_of_provision, color = 'Healthcare Costs'))+ \n  scale_color_manual(values = c(\n    'Cost of Provision' = 'darkblue',\n    'Health Insurance Fund - All Revenue' = 'light green',\n    'Revenue from Employee Premiums' = 'dark green',\n    'Group Insurance - 1180 & 1900' = 'blue',\n    'Group Insurance-Object1180' = 'light blue'\n   #     'Employer Contributions-General Fund' = 'light blue'\n)) +\n  labs(title=\"Healthcare costs and group insurance contributions\", \n       caption = \"Healthcare costs and group insurance contributions\", \n       y = \"Dollars\", x = \"\")\n\n\n\n\n\n\n\nCode\nexp_temp <- exp_temp %>% \n  mutate(eehc = ifelse(object == \"1180\", 1, 0)) %>%\n  mutate(eehc = ifelse((eehc == 1 & in_ff ==\"0\"), 2, eehc))\n#%>%mutate(in_ff = ifelse(eehc == 2, \"1\", in_ff) ) %>% filter(eehc ==2 )\ntable(exp_temp$eehc)\n\n\n\n     0      1      2 \n163720   4414    149"
  },
  {
    "objectID": "Everything.html#federal-medicaid-reimbursements-and-medicaid-costs",
    "href": "Everything.html#federal-medicaid-reimbursements-and-medicaid-costs",
    "title": "9  All Code together",
    "section": "9.4 Federal Medicaid Reimbursements and Medicaid Costs",
    "text": "9.4 Federal Medicaid Reimbursements and Medicaid Costs\n\n\nCode\nmedicaid_cost <- exp_temp %>% filter(agency==\"478\" & (appr_org==\"01\" | appr_org == \"65\" | appr_org==\"88\") & (object==\"4900\" | object==\"4400\")) %>% group_by(fy) %>% summarize(sum=sum(expenditure))\n  \nmed_reimburse <- rev_temp %>% filter(rev_type==\"57\" & agency==\"478\" & (source==\"0618\"|source==\"2364\"|source==\"0660\"|source==\"1552\"| source==\"2306\"| source==\"2076\"|source==\"0676\"|source==\"0692\")) %>% group_by(fy) %>% summarize(sum=sum(receipts))\n\nggplot()+\n  geom_line(data=medicaid_cost, aes(x=fy, y=sum), color = \"red\") + \n  geom_line(data=med_reimburse, aes(x=fy, y = sum), color=\"black\") + labs(title = \"Medicaid reimbursements and Medicaid expenditures\", caption = \"Medicaid expenditures include funds provided to medical providers. \")"
  },
  {
    "objectID": "Everything.html#modify-expenditure-file",
    "href": "Everything.html#modify-expenditure-file",
    "title": "9  All Code together",
    "section": "10.1 Modify Expenditure File",
    "text": "10.1 Modify Expenditure File\n\n10.1.1 Tax refunds\nAggregate expenditures: Save tax refunds as negative revenue. Code refunds to match the rev_type codes (02=income taxes, 03 = corporate income taxes, 06=sales tax, 09=motor fuel tax, 24=insurance taxes and fees, 35 = all other tax refunds).\n\n\nCode\n## negative revenue becomes tax refunds\n\ntax_refund_long <- exp_temp %>%           # fund != \"0401\" # removes State Trust Funds\n  filter(fund != \"0401\" & (object==\"9910\"|object==\"9921\"|object==\"9923\"|object==\"9925\")) %>%\n  # keeps these objects which represent revenue, insurance, treasurer,and financial and professional reg tax refunds\n  mutate(refund = case_when(\n    fund==\"0278\" & sequence == \"00\" ~ \"02\", # for income tax refund\n    fund==\"0278\" & sequence == \"01\" ~ \"03\", # tax administration and enforcement and tax operations become corporate income tax refund\n     fund == \"0278\" & sequence == \"02\" ~ \"02\",\n    object==\"9921\" ~ \"21\",                # inheritance tax and estate tax refund appropriation\n    object==\"9923\" ~ \"09\",                # motor fuel tax refunds\n    obj_seq_type == \"99250055\" ~ \"06\",    # sales tax refund\n    fund==\"0378\" & object==\"9925\" ~ \"24\", # insurance privilege tax refund\n    fund==\"0001\" & object==\"9925\" ~ \"35\", # all other taxes\n      T ~ \"CHECK\"))                       # if none of the items above apply to the observations, then code them as CHECK \n\n    \nexp_temp <- left_join(exp_temp, tax_refund_long) %>%\n  mutate(refund = ifelse(is.na(refund),\"not refund\", as.character(refund)))\n\ntax_refund <- tax_refund_long %>% \n  group_by(refund, fy)%>%\n  summarize(refund_amount = sum(expenditure, na.rm = TRUE)/1000000) %>%\n  pivot_wider(names_from = refund, values_from = refund_amount, names_prefix = \"ref_\") %>%\n  mutate_all(~replace_na(.,0)) %>%\n  arrange(fy)\n\ntax_refund %>% pivot_longer( ref_02:ref_35, names_to = \"Refund Type\", values_to = \"Amount\") %>%\n  ggplot()+\n  geom_line(aes(x=fy,y=Amount, group = `Refund Type`, color = `Refund Type`))+\n  labs(title = \"Refund Types\", caption = \"Refunds are excluded from Expenditure totals and instead subtracted from Revenue totals\") + \n  labs(title = \"Tax refunds\", \n       caption = \"Rev_type codes: 02=income taxes, 03=corporate income taxes, 06=sales tax, 09=motor fuel tax, \n       24=insurance taxes and fees, 35 = all other tax refunds.\" )\n\n\n\n\n\nCode\n# remove the items we recoded in tax_refund_long\nexp_temp <- exp_temp %>% filter(refund == \"not refund\")\n\n\ntax_refund amounts are removed from expenditure totals and subtracted from revenue totals (since they were tax refunds).\n\n\n10.1.2 Pension Expenditures\nState payments to the following pension systems:\n• Teachers Retirement System (TRS)\n- New POB bond in 2019: Accelerated Bond Fund paid benefits in advance as lump sum\n• State Employee Retirement System (SERS)\n• State University Retirement System (SURS)\n• Judges Retirement System (JRS)\n• General Assembly Retirement System (GARS)\n\nIncludes pension stabilization fund = 0319, object = 1900 and the $300 million investment in FY2022.\n\nState pension contributions are largely captured with object=4431. (State payments into pension fund)\n\nincludes 8 billion payment in 2004 that creates large peak in expenditure graphs\n\ndoes not capture recent pension stabilization payments\n\n\nSome expenditures with object=4430 are paid for with Pension obligation bond funds (fund == 0825). In past years, some POB funded expenditures were moved to revenue side in the Stata code. We are no longer doing this as of FY2021.\n\nModify exp_temp and move all state pension contributions to their own group (901):\n\n\nCode\nexp_temp <-  exp_temp %>% \n  arrange(fund) %>%\n  mutate(pension = case_when( \n   (object==\"4431\") ~ 1, # 4431 = easy to find pension payments INTO fund\n   \n # (object>\"1159\" & object<\"1166\") & fund != \"0183\" & fund != \"0193\"   ~ 2, \n   # objects 1159 to 1166 are all considered Retirement by Comptroller, \n  # Excluded - employer contributions from agencies/organizations/etc.\n\n  (object==\"1298\" &  # Purchase of Investments, Normally excluded\n     (fy==2010 | fy==2011) & \n     (fund==\"0477\" | fund==\"0479\" | fund==\"0481\")) ~ 3, #judges retirement OUT of fund\n  # state borrowed money from pension funds to pay for core services during 2010 and 2011. \n  # used to fill budget gap and push problems to the future. \n \n\n fund == \"0319\" ~ 4, # pension stabilization fund\n                                        TRUE ~ 0) )\n\ntable(exp_temp$pension) \n\n\n\n     0      1      3      4 \n167875    228      6      5 \n\n\nCode\nexp_temp %>% filter(pension != 0) %>%\n  mutate(pension = as.factor(pension))%>%\n  group_by(fy, pension) %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %>%\n  ggplot(aes(x=fy, y = expenditure, group=pension)) + \n  geom_line(aes(color = pension)) + \n\n  labs (title = \"Pension expenditures\", \n  caption = \"1 = State contributions INTO pension funds\")+\n    theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\nCode\n# special accounting of pension obligation bond (POB)-funded contributions to JRS, SERS, GARS, TRS \n\nexp_temp <- exp_temp %>% \n  # change object for 2010 and 2011, retirement expenditures were bond proceeds and would have been excluded\n  mutate(object = ifelse((pension >0 & in_ff == \"0\"), \"4431\", object)) %>% \n  # changes weird teacher & judge retirement system  pensions object to normal pension object 4431\n  mutate(pension =  ifelse(pension >0 & in_ff == \"0\", 6, pension)) %>% # coded as 6 if it was supposed to be excluded. \n  mutate(in_ff = ifelse(pension>0, \"1\", in_ff))\n\ntable(exp_temp$pension) \n\n\n\n     0      1      4      6 \n167875    226      5      8 \n\n\nCode\n# all other pensions objects  codes get agency code 901 for State Pension Contributions\nexp_temp <- exp_temp %>% \n  mutate(agency = ifelse(pension>0, \"901\", as.character(agency)),\n         agency_name = ifelse(agency == \"901\", \"State Pension Contributions\", as.character(agency_name)))\n\nexp_temp %>% \n filter(pension > 0) %>%  \n  mutate(pension = as.factor(pension)) %>%\n  group_by(fy, pension) %>% \n  summarize(expenditure = sum(expenditure, na.rm=TRUE)) %>%\n  ggplot(aes(x=fy, y=expenditure, color = pension)) +\n  geom_line() + \n  labs (title = \"Pension Expenditures\", \n  caption = \"\")\n\n\n\n\n\nCode\nexp_temp %>% \n filter(pension > 0) %>%  \n  group_by(fy) %>% \n  summarize(expenditure = sum(expenditure, na.rm=TRUE)) %>%\n  ggplot(aes(x=fy, y=expenditure)) +\n  geom_line() + \n  labs (title = \"Pension Expenditures\")\n\n\n\n\n\n\n\n10.1.3 Drop Interfund transfers\n\nobject == 1993 is for interfund cash transfers\n\nagency == 799 is for statutory transfers\n\nobject == 1298 is for purchase of investments and is not spending EXCEPT for costs in 2010 and 2011 (and were recoded already to object == “4431”). Over 168,000 observations remain.\n\n\n\nCode\ntransfers_drop <- exp_temp %>% filter(\n  agency == \"799\" | # statutory transfers\n           object == \"1993\" |  # interfund cash transfers\n           object == \"1298\") # purchase of investments\n\nexp_temp <- anti_join(exp_temp, transfers_drop)\nexp_temp\n\n\n\n\n  \n\n\n\nCode\ntransfers_drop %>% filter(fy>2019 & object == 1993) %>% group_by(obj_seq_type) %>% summarize(sum = sum(expenditure)) %>% arrange(-sum)\n\n\n\n\n  \n\n\n\n\n\n10.1.4 State employee healthcare costs\nIf observation is a group insurance contribution, then the expenditure amount is set to $0 (essentially dropped from analysis).\n\n\nCode\n#if observation is a group insurance contribution, then the expenditure amount is set to $0 (essentially dropped from analysis)\n\n# pretend eehc is named group_insurance_contribution or something like that\n# eehc coded as zero implies that it is group insurance\n# if eehc=0, then expenditures are coded as zero for group insurance to avoid double counting costs\n\nexp_temp <- exp_temp %>% \n  mutate(eehc = ifelse(\n    # group insurance contributions for 1998-2005 and 2013-present\n   fund == \"0001\" & (object == \"1180\" | object ==\"1900\") & agency == \"416\" & appr_org==\"20\", 0, 1) )%>% \n  mutate(eehc = ifelse(\n    # group insurance contributions for 2006-2012\n    fund == \"0001\" & object == \"1180\" & agency == \"478\" & appr_org==\"80\", 0, eehc) )%>%\n     # group insurance contributions from road fund\n  # coded with 1900 for some reason??\n    mutate(eehc = ifelse(\n      fund == \"0011\" & object == \"1900\" & agency == \"416\" & appr_org==\"20\", 0, eehc) ) %>%\n  \n  mutate(expenditure = ifelse(eehc==\"0\", 0, expenditure)) %>%\n  \n  mutate(agency = case_when(   # turns specific items into State Employee Healthcare (agency=904)\n      fund==\"0907\" & (agency==\"416\" & appr_org==\"20\") ~ \"904\",   # central management Bureau of benefits using health insurance reserve \n      fund==\"0907\" & (agency==\"478\" & appr_org==\"80\") ~ \"904\",   # agency = 478: healthcare & family services using health insurance reserve - stopped using this in 2012\n      TRUE ~ as.character(agency))) %>%\n  mutate(agency_name = ifelse(agency == \"904\", \"STATE EMPLOYEE HEALTHCARE\", as.character(agency_name)),\n         in_ff = ifelse( agency == \"904\", 1, in_ff),\n         group = ifelse(agency == \"904\", \"904\", as.character(agency)))  \n# creates group variable\n\n# Default group = agency number\n\nhealthcare_costs <- exp_temp %>% filter(group == \"904\")\n\nhealthcare_costs\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(group == \"904\") %>% group_by(fy) %>% \n  summarise(healthcare_cost = sum(expenditure, na.rm = TRUE)) %>% \n  ggplot() +geom_line(aes(x=fy, y=healthcare_cost)) + labs(title=\"State Employee Healthcare Costs - Included in Fiscal Futures Model\", caption = \"Fund 0907 for agencies responsible for health insurance reserve (DHFS & CMS)\")\n\n\n\n\n\nCode\n#exp_temp <- anti_join(exp_temp, healthcare_costs) %>% mutate(expenditure = ifelse(object == \"1180\", 0, expenditure))\n\n#healthcare_costs_yearly <- healthcare_costs %>% group_by(fy, group) %>% summarise(healthcare_cost = sum(expenditure, na.rm = TRUE)/1000000) %>% select(-group)\n\n\n\n\n10.1.5 Local Transfers\nSeparate transfers to local from parent agencies that come from DOR(492) or Transportation (494). Treats muni revenue transfers as expenditures, not negative revenue.\nThe share of certain taxes levied state-wide at a common rate and then transferred to local governments. (Purely local-option taxes levied by specific local governments with the state acting as collection agent are NOT included.)\nThe six corresponding revenue items are:\n• Local share of Personal Income Tax - Individual Income Tax Pass-Through New 2021 (source 2582). • Local share of General Sales Tax\n• Personal Property Replacement Tax on Business Income\n• Personal Property Replacement Tax on Public Utilities\n• Local share of Motor Fuel Tax - Transportation Renewal Fund 0952\nUntil Dec 18. 2022, Local CURE was being aggregated into Revenue totals since the agency was the Department of Revenue. However the $371 million expenditure is for “LOC GOVT ARPA” and the revenue source that is Local CURE is also $371 million. Since it cancels out and is just passed through the state government, I am changing changing the fund_ab_in file so that in_ff=0 for the Local CURE fund. It also inflates the department of revenue expenditures in a misleading way when the expense is actually a transfer to local governments.\n\nDropping Local CURE fund from analysis results in a $371 million decrease in the department of Revenue (where the Local Government ARPA transfer money). The appropriation for it was over $740 million so some will probably be rolled over to FY23 too.\n\nIn the FY21 New and Reused Funds word document, 0325 Local CURE is described as “Created as a federal trust fund. The fund is established to receive transfers from either the disaster response and recovery fund or the state cure fund of federal funds received by the state. These transfers, subject to appropriation, will provide for the administration and payment of grants and expense reimbursements to units of local government. Revenues should be under Federal Other and expenditures under Commerce and Economic Opportunity.” - I propose changing it to exclude for both.\n\n\n\nCode\nexp_temp <- exp_temp %>% mutate(\n  agency = case_when(fund==\"0515\" & object==\"4470\" & type==\"08\" ~ \"971\", # income tax to local governments\n                     fund==\"0515\" & object==\"4491\" & type==\"08\" & sequence==\"00\" ~ \"971\", # object is shared revenue payments\n                     fund==\"0802\" & object==\"4491\" ~ \"972\", #pprt transfer\n                     fund==\"0515\" & object==\"4491\" & type==\"08\" & sequence==\"01\" ~ \"976\", #gst to local\n                     fund==\"0627\" & object==\"4472\"~ \"976\" , # public transportation fund but no observations exist\n                     fund==\"0648\" & object==\"4472\" ~ \"976\", # downstate public transportation, but doesn't exist\n                     fund==\"0515\" & object==\"4470\" & type==\"00\" ~ \"976\", # object 4470 is grants to local governments\n                    object==\"4491\" & (fund==\"0188\"|fund==\"0189\") ~ \"976\",\n                     fund==\"0187\" & object==\"4470\" ~ \"976\",\n                     fund==\"0186\" & object==\"4470\" ~ \"976\",\n                    object==\"4491\" & (fund==\"0413\"|fund==\"0414\"|fund==\"0415\")  ~ \"975\", #mft to local\n                  fund == \"0952\"~ \"975\", # Added Sept 29 2022 AWM. Transportation Renewal MFT\n                    TRUE ~ as.character(agency)),\n  \n  agency_name = case_when(agency == \"971\"~ \"INCOME TAX 1/10 TO LOCAL\",\n                          agency == \"972\" ~ \"PPRT TRANSFER TO LOCAL\",\n                          agency == \"975\" ~ \"MFT TO LOCAL\",\n                          agency == \"976\" ~ \"GST TO LOCAL\",\n                          TRUE~as.character(agency_name)),\n  group = ifelse(agency>\"970\" & agency < \"977\", as.character(agency), as.character(group)))\n\n\n\n\nCode\ntransfers_long <- exp_temp %>% \n  filter(group == \"971\" |group == \"972\" | group == \"975\" | group == \"976\")\n\ntransfers_long %>% \n  group_by(agency_name, group, fy) %>% \n  summarize(expenditure = sum(expenditure, na.rm=TRUE) )%>% \n  ggplot() + geom_line(aes(x=fy, y = expenditure, color=agency_name)) + labs(title = \"Transfers to Local Governments\", caption = \"Data Source: Illinois Office of the Comptroller\")\n\n\n\n\n\nCode\ntransfers <- transfers_long %>%\n  group_by(fy, group ) %>%\n  summarize(sum_expenditure = sum(expenditure)/1000000) %>%\n  pivot_wider(names_from = \"group\", values_from = \"sum_expenditure\", names_prefix = \"exp_\" )\n\nexp_temp <- anti_join(exp_temp, transfers_long)\n\n\ndropped_inff_0 <- exp_temp %>% filter(in_ff == 0)\n\nexp_temp <- exp_temp %>% filter(in_ff == 1) # drops in_ff = 0 funds AFTER dealing with net-revenue above\n\n\nThe Local Transfers from the Personal Property Replacement Tax (fund 802) increased over $2 billion from corporate income taxes alone. Personal property replacement taxes (PPRT) are revenues collected by the state of Illinois and paid to local governments to replace money that was lost by local governments when their powers to impose personal property taxes on corporations, partnerships, and other business entities were taken away.\n\n\n10.1.6 Debt Service\nDebt Service expenditures include interest payment on both short-term and long-term debt. We do not include escrow or principal payments.\nDecision from Sept 30 2022: We are no longer including short term principal payments as a cost; only interest on borrowing is a cost. Pre FY22 and the FY21 correction, we did include an escrow payment and principle payments as costs but not bond proceeds as revenues. This caused expenditures to be inflated because we were essentially counting debt twice - the principle payment and whatever the money was spent on in other expenditure categories, which was incorrect.\n\n\nCode\ndebt_drop <- exp_temp %>% \n  filter(object == \"8841\" |  object == \"8811\")  \n# escrow  OR  principle\n\n#debt_drop %>% group_by(fy) %>% summarize(sum = sum(expenditure)) %>% arrange(-fy)\n\n\ndebt_keep <- exp_temp %>% \n  filter(fund != \"0455\" & (object == \"8813\" | object == \"8800\" )) \n# examine the debt costs we want to include\n\n#debt_keep %>% group_by(fy) %>% summarize(sum = sum(expenditure)) %>% arrange(-fy) \n\n\nexp_temp <- anti_join(exp_temp, debt_drop) \nexp_temp <- anti_join(exp_temp, debt_keep)\n\ndebt_keep <- debt_keep %>%\n  mutate(\n    agency = ifelse(fund != \"0455\" & (object == \"8813\" | object == \"8800\"), \"903\", as.character(agency)),\n    group = ifelse(fund != \"0455\" & (object == \"8813\" | object == \"8800\"), \"903\", as.character(group)),\n    in_ff = ifelse(group == \"903\", 1, as.character(in_ff)))\n\ndebt_keep_yearly <- debt_keep %>% group_by(fy, group) %>% summarize(debt_cost = sum(expenditure,na.rm=TRUE)/1000000) %>% select(-group)\n\n\n\n\n10.1.7 Medicaid\nMedicaid. That portion of the Healthcare and Family Services (or Public Aid in earlier years, agency code 478) budget for Medical (appr_organization code 65) for awards and grants (object codes 4400 and 4900).\n\nState CURE will remain in the Medicaid expenditure category due to the nature of it being federal funds providing public health services and funding to locations that provide public services.\n\n\nUses same appropriation name of “HEALTHCARE PROVIDER RELIEF” and fund == 0793 and obj_seq_type == 49000000. So can defend the “mistake” of including healthcare provider relief as Medicaid expenditure.\n\nFederal Medical Assistance Program (FMAP): in 1965. The FMAP formula compares the state per-capita income to the national per-capita income. There is no cap on the dollar amount that the federal government pays, so the morethat a state spends the more that it receives. a maximum of 83%. States with a higher per-capita income receive lower FMAP funding but no less than 50%, and the states that have a lower per-capita income receive higher FMAP funding. Those that need more, get more.\n\n\n10.1.8 Add Other Fiscal Future group codes\n\n\nCode\nexp_temp <- exp_temp %>%\n  #mutate(agency = as.numeric(agency) ) %>%\n  # arrange(agency)%>%\n  mutate(\n    group = case_when(\n      agency>\"100\"& agency<\"200\" ~ \"910\", # legislative\n      \n      agency == \"528\"  | (agency>\"200\" & agency<\"300\") ~ \"920\", # judicial\n      pension>0  ~ \"901\", # pensions\n      (agency>\"309\" & agency<\"400\") ~ \"930\",    # elected officers\n      \n      agency == \"586\" ~ \"959\", # create new K-12 group\n\n      agency==\"402\" | agency==\"418\" | agency==\"478\" | agency==\"444\" | agency==\"482\" ~ as.character(agency), # aging, CFS, HFS, human services, public health\n      T ~ as.character(group))\n    ) %>%      \n\n  \n  mutate(group = case_when(\n    agency==\"478\" & (appr_org==\"01\" | appr_org == \"65\" | appr_org==\"88\") & (object==\"4900\" | object==\"4400\") ~ \"945\", # separates CHIP from health and human services and saves it as Medicaid\n    \n    agency == \"586\" & fund == \"0355\" ~ \"945\",  # 586 (Board of Edu) has special education which is part of medicaid\n    \n    # OLD CODE: agency == \"586\" & appr_org == \"18\" ~ \"945\", # Spec. Edu Medicaid Matching\n    \n    agency==\"425\" | agency==\"466\" | agency==\"546\" | agency==\"569\" | agency==\"578\" | agency==\"583\" | agency==\"591\" | agency==\"592\" | agency==\"493\" | agency==\"588\" ~ \"941\", # public safety & Corrections\n    \n    agency==\"420\" | agency==\"494\" |  agency==\"406\" | agency==\"557\" ~ as.character(agency), # econ devt & infra, tollway\n    \n    agency==\"511\" | agency==\"554\" | agency==\"574\" | agency==\"598\" ~ \"946\",  # Capital improvement\n    \n    agency==\"422\" | agency==\"532\" ~ as.character(agency), # environment & nat. resources\n    \n    agency==\"440\" | agency==\"446\" | agency==\"524\" | agency==\"563\"  ~ \"944\", # business regulation\n    \n    agency==\"492\" ~ \"492\", # revenue\n    \n    agency == \"416\" ~ \"416\", # central management services\n    agency==\"448\" & fy > 2016 ~ \"416\", #add DoIT to central management \n    \n    T ~ as.character(group))) %>%\n  \n  \n  mutate(group = case_when(\n    # agency==\"684\" | agency==\"691\"  ~ as.character(agency), # moved under higher education in next line. 11/28/2022 AWM\n    \n    agency==\"692\" | agency==\"695\" | agency == \"684\" |agency == \"691\" | (agency>\"599\" & agency<\"677\") ~ \"960\", # higher education\n    \n    agency==\"427\"  ~ as.character(agency), # employment security\n    \n    agency==\"507\"|  agency==\"442\" | agency==\"445\" | agency==\"452\" |agency==\"458\" | agency==\"497\" ~ \"948\", # other departments\n    \n    # other boards & Commissions\n    agency==\"503\" | agency==\"509\" | agency==\"510\" | agency==\"565\" |agency==\"517\" | agency==\"525\" | agency==\"526\" | agency==\"529\" | agency==\"537\" | agency==\"541\" | agency==\"542\" | agency==\"548\" |  agency==\"555\" | agency==\"558\" | agency==\"559\" | agency==\"562\" | agency==\"564\" | agency==\"568\" | agency==\"579\" | agency==\"580\" | agency==\"587\" | agency==\"590\" | agency==\"527\" | agency==\"585\" | agency==\"567\" | agency==\"571\" | agency==\"575\" | agency==\"540\" | agency==\"576\" | agency==\"564\" | agency==\"534\" | agency==\"520\" | agency==\"506\" | agency == \"533\" ~ \"949\", \n    \n    # non-pension expenditures of retirement funds moved to \"Other Departments\"\n    # should have removed pension expenditures already from exp_temp in Pensions step above\n    agency==\"131\" | agency==\"275\" | agency==\"589\" |agency==\"593\"|agency==\"594\"|agency==\"693\" ~ \"948\",\n    \n    T ~ as.character(group))) %>%\n\n  mutate(group_name = \n           case_when(\n             group == \"416\" ~ \"Central Management\",\n             group == \"478\" ~ \"Healthcare and Family Services\",\n             group == \"482\" ~ \"Public Health\",\n             group == \"900\" ~ \"NOT IN FRAME\",\n             group == \"901\" ~ \"STATE PENSION CONTRIBUTION\",\n             group == \"903\" ~ \"DEBT SERVICE\",\n             group == \"910\" ~ \"LEGISLATIVE\"  ,\n             group == \"920\" ~ \"JUDICIAL\" ,\n             group == \"930\" ~ \"ELECTED OFFICERS\" , \n             group == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             group == \"941\" ~ \"PUBLIC SAFETY\" ,\n             group == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n             group == \"943\" ~ \"CENTRAL SERVICES\",\n             group == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             group == \"945\" ~ \"MEDICAID\" ,\n             group == \"946\" ~ \"CAPITAL IMPROVEMENT\" , \n             group == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n             group == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             group == \"959\" ~ \"K-12 EDUCATION\" ,\n             group == \"960\" ~ \"UNIVERSITY EDUCATION\" ,\n             group == agency ~ as.character(group),\n             TRUE ~ \"Check name\"),\n         year = fy)\n\nexp_temp %>% filter(group_name == \"Check name\")\n\n\n\n\n  \n\n\n\nCode\n#write_csv(exp_temp, \"all_expenditures_recoded.csv\")\n\n\nAll expenditures recoded but not aggregated: Allows for inspection of individual expenditures within larger categories. This stage of the data is extremely useful for investigating almost all questions we have about the data.\nNote that these are the raw figures BEFORE we take the additional steps:\n\nSubtract tax refunds from tax revenues by revenue type.\n\n\n\nCode\nexp_temp %>% filter(fy>2020 & fund == \"0561\") %>% group_by(wh_approp_name, fy) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n\n\n\n\n  \n\n\n\nSBE Federal Department of Education is fund 0561. Fund 0579 is the State Board of Education."
  },
  {
    "objectID": "Everything.html#modify-revenue-data",
    "href": "Everything.html#modify-revenue-data",
    "title": "9  All Code together",
    "section": "10.2 Modify Revenue data",
    "text": "10.2 Modify Revenue data\nRevenue Categories NOT included in Fiscal Futures:\n- 32. Garnishment-Levies. (State is fiduciary, not beneficiary.)\n- 45. Student Fees-Universities. (Excluded from state-level budget.)\n- 51. Retirement Contributions (of individuals and non-state entities).\n- 66. Proceeds, Investment Maturities. (Not sustainable flow.)\n- 72. Bond Issue Proceeds. (Not sustainable flow.)\n- 75. Inter-Agency Receipts.\n- 79. Cook County Intergovernmental Transfers. (State is not beneficiary.)\n- 98. Prior Year Refunds.\n- 99. Statutory Transfers.\nAll Other Sources\nExpanded to include the following smaller sources:\n- 30. Horse Racing Taxes & Fees.\n- 60. Other Grants and Contracts.\n- 63. Investment Income.\nFor aggregating revenue, use the rev_1998_2022 dataframe, join the funds_ab_in_2022 file to it, and then join the ioc_source_type file to the dataset. Remember: You need to update the funds_ab_in and ioc_source_type file every year!\n\n\nCode\n# recodes old agency numbers to consistent agency number\nrev_temp <- rev_temp %>% \n  mutate(agency = case_when(\n    (agency==\"438\"| agency==\"475\" |agency == \"505\") ~ \"440\",\n    # financial institution &  professional regulation &\n     # banks and real estate  --> coded as  financial and professional reg\n    agency == \"473\" ~ \"588\", # nuclear safety moved into IEMA\n    (agency ==\"531\" | agency ==\"577\") ~ \"532\", # coded as EPA\n    (agency ==\"556\" | agency == \"538\") ~ \"406\", # coded as agriculture\n    agency == \"560\" ~ \"592\", # IL finance authority (fire trucks and agriculture stuff)to state fire marshal\n    agency == \"570\" & fund == \"0011\" ~ \"494\",   # city of Chicago road fund to transportation\n    TRUE ~ (as.character(agency)))) \n\n\n\n10.2.1 Federal to State Transfers\n\n\nCode\n#rev_temp <- rev_temp %>% filter(in_ff==1)\n\nrev_temp <- rev_temp %>% \n  mutate(\n    rev_type = ifelse(rev_type==\"57\" & agency==\"478\" & (source==\"0618\"|source==\"2364\"|source==\"0660\"|source==\"1552\"| source==\"2306\"| source==\"2076\"|source==\"0676\"|source==\"0692\"), \"58\", rev_type),\n    rev_type_name = ifelse(rev_type==\"58\", \"Federal Medicaid Reimbursements\", rev_type_name),\n    rev_type = ifelse(rev_type==\"57\" & agency==\"494\", \"59\", rev_type),\n    rev_type_name = ifelse(rev_type==\"59\", \"Federal Transportation\", rev_type_name),\n    rev_type_name = ifelse(rev_type==\"57\", \"Federal - Other\", rev_type_name),\n    rev_type = ifelse(rev_type==\"6\", \"06\", rev_type),\n    rev_type = ifelse(rev_type==\"9\", \"09\", rev_type)) \n\nrev_temp %>% \n  filter(rev_type == \"58\" | rev_type == \"59\" | rev_type == \"57\") %>% \n  group_by(fy, rev_type, rev_type_name) %>% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000) %>% \n  ggplot() +\n  geom_line(aes(x=fy, y=receipts,color=rev_type_name)) +\n      theme_bw() +\n  scale_y_continuous(labels = comma)+\n  labs(title = \"Federal to State Transfers\", \n       y = \"Millions of Dollars\", x = \"\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  )\n\n\n\n\n\nLooking at Federal Revenue:\nAll revenue sources within “Federal - Other” source.\n\n\nCode\nrev_temp %>% filter(rev_type == \"57\" & fy >2018) %>% group_by(fund_name, source_name_AWM,  fy) %>% summarize(receipts =sum(receipts)) %>% arrange(-receipts) %>% pivot_wider(names_from = fy, values_from = receipts)\n\n\n\n\n  \n\n\n\nCode\nfed_rev_compare <- rev_temp %>% filter((rev_type == \"57\" | rev_type == \"58\" | rev_type == \"59\") & (fy == 2022 | fy==2021 | fy==2020 | fy == 2019)) %>%  arrange(-receipts)\nwrite_csv(fed_rev_compare, \"comparefedrev.csv\")\n\n\nrev_temp %>% filter(source_name_AWM == \"FEDERAL STIMULUS PACKAGE\") %>% group_by(fy, fund_name) %>% summarize(receipts =sum(receipts)) %>% arrange(-fy)\n\n\n\n\n  \n\n\n\nCode\nrev_temp %>% filter(fy > 2018 & source_name_AWM == \"FEDERAL STIMULUS PACKAGE\") %>% group_by(fund_name, fy) %>% summarize(receipts =sum(receipts)) %>% arrange(-receipts)\n\n\n\n\n  \n\n\n\nCode\nrev_temp %>% filter(rev_type == \"57\" & fy > 2018 & fund_name == \"SBE FEDERAL DEPT OF EDUCATION\") %>% group_by(source_name_AWM , fund_name, fy) %>% summarize(receipts =sum(receipts)) %>% arrange(-receipts)\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(fy >2019 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\" | fund_name == \"SBE FEDERAL DEPT OF EDUCATION\" | fund_name == \"DISASTER RESPONSE AND RECOVERY\" | fund_name == \"ESSENTIAL GOVT SERV SUPPORT\" )) %>% group_by(fy, agency_name, wh_approp_name, fund_name) %>% \n  summarize(sum=sum(expenditure),\n            appropriated = sum(appn_net_xfer)) %>% \n  arrange(-appropriated)\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(fy >2019 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\" | fund_name == \"SBE FEDERAL DEPT OF EDUCATION\" | fund_name == \"DISASTER RESPONSE AND RECOVERY\" | fund_name == \"ESSENTIAL GOVT SERV SUPPORT\" )) %>% group_by(fy, wh_approp_name, fund_name) %>% \n  summarize(sum=sum(expenditure),\n            appropriated = sum(appn_net_xfer)) %>% \n  arrange(-appropriated)\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(fy >2019 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\" | fund_name == \"SBE FEDERAL DEPT OF EDUCATION\" | fund_name == \"DISASTER RESPONSE AND RECOVERY\" | fund_name == \"ESSENTIAL GOVT SERV SUPPORT\" )) %>% group_by(fund_name, fy, agency_name) %>% \n  summarize(sum=sum(expenditure),\n            appropriated = sum(appn_net_xfer)) %>% \n  arrange(-appropriated)\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(fy == 2022 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(org_name, agency_name, object, wh_approp_name, fund_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(fy == 2022 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(agency_name, object, wh_approp_name, fund_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(fy == 2022 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(fund_name, object, org_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(fy == 2022 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(fund_name, agency_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(fy == 2022 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(agency_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(fy == 2021 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(wh_approp_name, fund_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n\n\n\n\n  \n\n\n\nDropping State CURE Revenue\nThe Fiscal Futures model focuses on sustainable revenue sources. To understand our fiscal gap and outlook, we need to exclude these one time revenues. GOMB has emphasized that they have allocated COVID dollars to one time expenditures (unemployment trust fund, budget stabilization fund, etc.). The fiscal gap, graphs,and CAGRs have been recalculated in the Drop COVID Dollars section below. In addition, an attempt at forecasting revenue and expenditures is also made after dropping the federal COVID dollars.\n\nNOTE: I have only dropped State and Local CURE revenue so far. Federal money went into other funds during the beginning of pandemic.\n\n\n\nCode\nrev_temp <- rev_temp %>% mutate(covid_dollars = ifelse(source_name_AWM == \"FEDERAL STIMULUS PACKAGE\",1,0))\n\n\n\n\n10.2.2 Health Insurance Premiums from Employees\nInsurance premiums for employees is coded below but it is NOT used in the fiscal futures model. Employee and employer premiums are considered rev_51 and dropped from analysis in later step.\n0120 = ins prem-option life\n0120 = ins prem-optional life/univ\n0347 = optional health - HMO\n0348 = optional health - dental\n0349 = optional health - univ/local SI\n0350 = optional health - univ/local\n0351 = optional health - retirement\n0352 = optional health - retirement SI\n0353 = optional health - retire/dental\n0354 = optional health - retirement hmo\n2199-2209 = various HMOs, dental, health plans from Health Insurance Reserve (fund)\n\n\nCode\n#collect optional insurance premiums to fund 0907 for use in eehc expenditure  \nrev_temp <- rev_temp %>% \n  mutate(\n    #variable not used in aggregates, but could be interesting for other purposes\n    employee_premiums = ifelse(fund==\"0907\" & (source==\"0120\"| source==\"0121\"| (source>\"0345\" & source<\"0357\")|(source>\"2199\" & source<\"2209\")), 1, 0),\n    \n    # adds more rev_type codes\n    rev_type = case_when(\n      fund ==\"0427\" ~ \"12\", # pub utility tax\n      fund == \"0742\" | fund == \"0473\" ~ \"24\", # insurance and fees\n      fund == \"0976\" ~ \"36\",# receipts from rev producing\n      fund == \"0392\" |fund == \"0723\" ~ \"39\", # licenses and fees\n      fund == \"0656\" ~ \"78\", #all other rev sources\n      TRUE ~ as.character(rev_type)))\n# if not mentioned, then rev_type as it was\n\n\n\n# # optional insurance premiums = employee insurance premiums\n\n# emp_premium <- rev_temp %>%\n#   group_by(fy, employee_premiums) %>%\n#   summarize(employee_premiums_sum = sum(receipts)/1000000) %>%\n#   filter(employee_premiums == 1) %>%\n#   rename(year = fy) %>% \n#   select(-employee_premiums)\n\nemp_premium_long <- rev_temp %>%  filter(employee_premiums == 1)\n# 381 observations have employee premiums == 1\n\n\n# drops employee premiums from revenue\n# rev_temp <- rev_temp %>% filter(employee_premiums != 1)\n# should be dropped in next step since rev_type = 51\n\n\nEmployee premiums are dropped in the following steps. In FY21, employee premiums were subtracted from state healthcare costs on the expenditure side to calculate a “Net Healthcare Cost” but that methodology has been discontinued. Totals were practically unchanged: revenue from employee premiums is also very small.\n\n\n10.2.3 Transfers in and Out:\nFunds that hold and disperse local taxes or fees are dropped from the analysis. Then other excluded revenue types are also dropped.\nDrops Blank, Student Fees, Retirement contributions, proceeds/investments, bond issue proceeds, interagency receipts, cook IGT, Prior year refunds:\nI don’t have much faith in the transfers in and out steps- AWM\nI am currently choosing to exclude the totals from this step. Overall, this decreases the total revenues in “All Other Revenues” by a few million dollars.\n\nin_from_out <- c(“0847”, “0867”, “1175”, “1176”, “1177”, “1178”, “1181”, “1182”, “1582”, “1592”, “1745”, “1982”, “2174”, “2264”)\n\nSee the methodology document for the list of what these sources/funds are.\n\n\n\nCode\nrev_temp <- rev_temp %>% \n  filter(in_ff == 1) %>% \n  mutate(local = ifelse(is.na(local), 0, local)) %>% # drops all revenue observations that were coded as \"local == 1\"\n  filter(local != 1)\n\n# 1175 doesnt exist?\nin_from_out <- c(\"0847\", \"0867\", \"1175\", \"1176\", \"1177\", \"1178\", \"1181\", \"1182\", \"1582\", \"1592\", \"1745\", \"1982\", \"2174\", \"2264\")\n\n# what does this actually include:\n# all are items with rev_type = 75 originally. \nin_out_df <- rev_temp %>%\n  mutate(infromout = ifelse(source %in% in_from_out, 1, 0)) %>%\n  filter(infromout == 1)\n\nrev_temp <- rev_temp %>% \n  mutate(rev_type_new = ifelse(source %in% in_from_out, \"76\", rev_type))\n# if source contains any of the codes in in_from_out, code them as 76 (all other rev).\n# I end up excluding rev_76 in later steps\n\n\nCorporate income tax Individual Income Tax Pass-Through (source =2582) was over 2 billion. The PTE tax allows a workaround to the federal $10,000 limitation for state and local tax (SALT) deductions and expires Jan 1. 2026 (to correspond with remaining years that the Tax Cuts and Jobs Act SALT limitation is in effect) Tax Adviser. With the enactment of the Tax Cuts and Jobs Act of 2017 (“TCJA”), individual taxpayers were limited to a $10,000 state and local tax deduction per year. In response to this limitation, many states created a workaround mechanism, introducing a pass-through entity tax (“PTET”). This shifted the state and local tax deduction from an individual taxpayer to the entity level that is not subject to the $10,000 limitation. Implications: Illinois residents in multistate passthrough entities will need to pay estimated taxes on income that is not subject to the SALT cap tax. TCJA of 2017 decreased\n\n\nCode\n# revenue types to drop\ndrop_type <- c(\"32\", \"45\", \"51\", \n               \"66\", \"72\", \"75\", \"79\", \"98\")\n\n# drops Blank, Student Fees, Retirement contributions, proceeds/investments,\n# bond issue proceeds, interagency receipts, cook IGT, Prior year refunds.\n\n\nrev_temp <- rev_temp %>% filter(!rev_type_new %in% drop_type)\n# keep observations that do not have a revenue type mentioned in drop_type\n\ntable(rev_temp$rev_type_new)\n\n\n\n   02    03    06    09    12    15    18    21    24    27    30    31    33 \n  161   124   828   127   575   258    45  1420   450    76   659   124   130 \n   35    36    39    42    48    54    57    58    59    60    63    76    78 \n  660  5152  9044  2755    31  1239  6451   620   226   103  5081   154 11261 \n   99 \n  964 \n\n\nCode\nrev_temp %>% \n  group_by(fy, rev_type_new) %>% \n  summarize(total_reciepts = sum(receipts)/1000000) %>%\n  pivot_wider(names_from = rev_type_new, values_from = total_reciepts, names_prefix = \"rev_\") \n\n\n\n\n  \n\n\n\nCode\n# combines smallest 4  categories to to \"Other\"\n# they were the 4 smallest in past years, are they still the 4 smallest? \n\nrev_temp <- rev_temp %>%  \n mutate(rev_type_new = ifelse(rev_type==\"30\" | rev_type==\"60\" | rev_type==\"63\" | rev_type==\"76\", \"78\", rev_type_new))\n\n\n#table(rev_temp$rev_type_new)  # check work\n\n\n\nrm(rev_1998_2022)\nrm(exp_1998_2022)\n\n\n#write.csv(exp_temp, \"exp_fy22_recoded_12192022.csv\")\n#write.csv(rev_temp, \"rev_fy22_recoded_12192022.csv\")"
  },
  {
    "objectID": "Everything.html#pivoting-and-merging",
    "href": "Everything.html#pivoting-and-merging",
    "title": "9  All Code together",
    "section": "10.3 Pivoting and Merging",
    "text": "10.3 Pivoting and Merging\n\nLocal Government Transfers (exp_970) should be on the expenditure side\nState employer group insurance contributions should be dropped to avoid double counting both the state. Do not do this. This was done for FY21 only and will not be done again.\n\nSubtract employee insurance premiums from State Employee Healthcare Expenditures (group == 904) - Employee Premiums = Actual state healthcare costs.\n\nff_exp\\(exp904 − emp_premium\\)employee_premiums_sum = statehealthcarecosts\n\nDid in FY21, but not doing again. Minor difference in fiscal gap overall from change in methodology.\n\n\n\n10.3.1 Revenues\nI chose to drop rev_76 for Transfers in and Out because I do not understand why that step occurs in the previously used Stata code. Rev_76 was created and included in rev_78 for All Other Revenues in old Stata code for years before FY21 but that method has been discontinued for FY22.\n\n\nCode\nff_rev <- rev_temp %>% \n  group_by(rev_type_new, fy) %>% \n  summarize(sum_receipts = sum(receipts, na.rm=TRUE)/1000000 ) %>%\n  pivot_wider(names_from = \"rev_type_new\", values_from = \"sum_receipts\", names_prefix = \"rev_\")\n\nff_rev<- left_join(ff_rev, tax_refund)\n\n#ff_rev <- left_join(ff_rev, pension2_fy22, by=c(\"fy\" = \"year\"))\n\n#ff_rev <- left_join(ff_rev, eehc2_amt) \nff_rev <- mutate_all(ff_rev, ~replace_na(.,0))\n\n\nff_rev <- ff_rev %>%\n  mutate(rev_02 = rev_02 - ref_02,\n         rev_03 = rev_03 - ref_03,\n         rev_06 = rev_06 - ref_06,\n         rev_09 = rev_09 - ref_09,\n         rev_21 = rev_21 - ref_21,\n         rev_24 = rev_24 - ref_24,\n         rev_35 = rev_35 - ref_35\n\n      #   rev_78new = rev_78 #+ pension_amt #+ eehc\n         ) %>% \n  select(-c(ref_02:ref_35, rev_99, rev_NA, rev_76#, pension_amt , rev_76,\n          #  , eehc\n            ))\n\nff_rev\n\n\n\n\n  \n\n\n\nSince I already pivot_wider()ed the table in the previous code chunk, I now change each column’s name by using rename() to set new variable names. Ideally the final dataframe would have both the variable name and the variable label but I have not done that yet.\n\n\nCode\naggregate_rev_labels <- ff_rev %>%\n  rename(\"INDIVIDUAL INCOME TAXES, gross of local, net of refunds\" = rev_02,\n         \"CORPORATE INCOME TAXES, gross of PPRT, net of refunds\" = rev_03,\n         \"SALES TAXES, gross of local share\" = rev_06 ,\n         \"MOTOR FUEL TAX, gross of local share, net of refunds\" = rev_09 ,\n         \"PUBLIC UTILITY TAXES, gross of PPRT\" = rev_12,\n         \"CIGARETTE TAXES\" = rev_15 ,\n         \"LIQUOR GALLONAGE TAXES\" = rev_18,\n         \"INHERITANCE TAX\" = rev_21,\n         \"INSURANCE TAXES&FEES&LICENSES, net of refunds\" = rev_24 ,\n         \"CORP FRANCHISE TAXES & FEES\" = rev_27,\n       # \"HORSE RACING TAXES & FEES\" = rev_30,  # in Other\n         \"MEDICAL PROVIDER ASSESSMENTS\" = rev_31 ,\n         # \"GARNISHMENT-LEVIES \" = rev_32 , # dropped\n         \"LOTTERY RECEIPTS\" = rev_33 ,\n         \"OTHER TAXES\" = rev_35,\n         \"RECEIPTS FROM REVENUE PRODUCNG\" = rev_36, \n         \"LICENSES, FEES & REGISTRATIONS\" = rev_39 ,\n         \"MOTOR VEHICLE AND OPERATORS\" = rev_42 ,\n         #  \"STUDENT FEES-UNIVERSITIES\" = rev_45,   # dropped\n         \"RIVERBOAT WAGERING TAXES\" = rev_48 ,\n         # \"RETIREMENT CONTRIBUTIONS \" = rev_51, # dropped\n         \"GIFTS AND BEQUESTS\" = rev_54, \n         \"FEDERAL OTHER\" = rev_57 ,\n         \"FEDERAL MEDICAID\" = rev_58, \n         \"FEDERAL TRANSPORTATION\" = rev_59 ,\n         #\"OTHER GRANTS AND CONTRACTS\" = rev_60, #other\n       # \"INVESTMENT INCOME\" = rev_63, # other\n         # \"PROCEEDS,INVESTMENT MATURITIES\" = rev_66 , #dropped\n         # \"BOND ISSUE PROCEEDS\" = rev_72,  #dropped\n         # \"INTER-AGENCY RECEIPTS\" = rev_75,  #dropped\n      #  \"TRANSFER IN FROM OUT FUNDS\" = rev_76,  #other\n         \"ALL OTHER SOURCES\" = rev_78,\n         # \"COOK COUNTY IGT\" = rev_79, #dropped\n         # \"PRIOR YEAR REFUNDS\" = rev_98 #dropped\n  ) \n\naggregate_rev_labels\n\n\n\n\n  \n\n\n\n\n\n10.3.2 Expenditures\nCreate exp_970 for all local government transfers (exp_971 + exp_972 + exp_975 + exp_976).\nCreate state employee healthcare costs that reflects the health costs minus the optional insurance premiums that came in (904_new=904−med_option_amt_recent). Do not do this. This was done for FY21 only and will not be done again. Small differences in overall Fiscal Gap from methodology change.\n\n\nCode\nff_exp <- exp_temp %>% \n  group_by(fy, group) %>% \n  summarize(sum_expenditures = sum(expenditure, na.rm=TRUE)/1000000 ) %>%\n  pivot_wider(names_from = \"group\", values_from = \"sum_expenditures\", names_prefix = \"exp_\")%>%\n  \n    left_join(debt_keep_yearly) %>%\n  mutate(exp_903 = debt_cost) %>%\n\n  #  left_join(healthcare_costs_yearly) %>%\n\n  # join state employee healthcare and subtract employee premiums\n  # left_join(emp_premium, by = c(\"fy\" = \"year\")) %>%\n#  mutate(exp_904_new = (`healthcare_cost` - `employee_premiums_sum`)) %>% # state employee healthcare premiums\n  \n # left_join(retirement_contributions) %>%\n  #    mutate(exp_901_new = exp_901 - contributions/1000000) %>% #employee pension contributions\n\n\n  # join local transfers and create exp_970\n  left_join(transfers) %>%\n  mutate(exp_970 = exp_971 + exp_972  + exp_975 + exp_976)\n\nff_exp<- ff_exp %>% select(-c(debt_cost, exp_971:exp_976)) # drop unwanted columns\nff_exp"
  },
  {
    "objectID": "Everything.html#forecasting-attempt",
    "href": "Everything.html#forecasting-attempt",
    "title": "9  All Code together",
    "section": "15.1 Forecasting attempt",
    "text": "15.1 Forecasting attempt\n\n\nCode\n#### Revenues\n\nyear_totals2 <- year_totals2 %>% \n  arrange(Year)\n\n#ts_rev <- year_totals %>% select(Year, Revenue ) %>% arrange(Year)\n\ntsrev <- ts(year_totals2$Revenue, start =\"1998\", frequency = 1) # yearly data\n\n# start(tsrev) # 1998, January\n# end(tsrev)  ## 2022 \n# summary(tsrev)\n# plot(tsrev)\n# abline(reg=lm(tsrev~time(tsrev)))\n\n\n#### ARIMAs\nmymodel <- auto.arima(tsrev, seasonal = FALSE)\nmymodel # ARIMA (0, 1, 0) with drift\n\n\nSeries: tsrev \nARIMA(0,1,1) with drift \n\nCoefficients:\n         ma1     drift\n      0.8781  3012.396\ns.e.  0.1925  1372.353\n\nsigma^2 = 14506095:  log likelihood = -231.63\nAIC=469.26   AICc=470.46   BIC=472.79\n\n\nCode\nmyforecastrev <- forecast(mymodel, h = 20)\n#plot(myforecastrev,  xlab =\"\", ylab =\"Total Revenue\", main =\"Chicago Revenue\")\n\ntsexp <- ts(year_totals2$Expenditures, start = \"1998\", frequency = 1)\nmodel_exp<- auto.arima(tsexp, seasonal = FALSE)\nmodel_exp # ARIMA (0,1,1) with drift\n\n\nSeries: tsexp \nARIMA(0,1,0) with drift \n\nCoefficients:\n          drift\n      2958.3626\ns.e.   871.9642\n\nsigma^2 = 19041068:  log likelihood = -234.69\nAIC=473.38   AICc=473.95   BIC=475.73\n\n\nCode\nforecast_exp <- forecast(model_exp, h = 20) \n#plot(forecast_exp, xlab =\"\",  ylab =\"Total Expenditures\", main =\"Chicago Expenditures\")\n\np <- forecast(model_exp,  h = 20) %>% \n  autoplot() +\n    ylab(\"Dollars (Millions)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Forecasted Expenditures\") +\n  theme_classic() +\n  scale_y_continuous(labels = dollar )\n\nsummary(forecast_exp)\n\n\n\nForecast method: ARIMA(0,1,0) with drift\n\nModel Information:\nSeries: tsexp \nARIMA(0,1,0) with drift \n\nCoefficients:\n          drift\n      2958.3626\ns.e.   871.9642\n\nsigma^2 = 19041068:  log likelihood = -234.69\nAIC=473.38   AICc=473.95   BIC=475.73\n\nError measures:\n                   ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set 1.130403 4185.425 2682.578 -0.6894152 4.326307 0.6400791\n                   ACF1\nTraining set -0.1249597\n\nForecasts:\n     Point Forecast     Lo 80    Hi 80     Lo 95    Hi 95\n2023       105177.5  99585.33 110769.7  96625.01 113730.0\n2024       108135.9 100227.34 116044.4  96040.80 120231.0\n2025       111094.2 101408.29 120780.2  96280.86 125907.6\n2026       114052.6 102868.23 125237.0  96947.58 131157.6\n2027       117011.0 104506.46 129515.5  97886.97 136135.0\n2028       119969.3 106271.33 133667.3  99020.04 140918.6\n2029       122927.7 108132.16 137723.2 100299.87 145555.5\n2030       125886.1 110068.96 141703.2 101695.90 150076.2\n2031       128844.4 112067.86 145621.0 103186.88 154502.0\n2032       131802.8 114118.73 149486.8 104757.36 158848.2\n2033       134761.1 116213.96 153308.3 106395.67 163126.6\n2034       137719.5 118347.60 157091.4 108092.73 167346.3\n2035       140677.9 120514.95 160840.8 109841.35 171514.4\n2036       143636.2 122712.18 164560.3 111635.66 175636.8\n2037       146594.6 124936.15 168253.0 113470.86 179718.3\n2038       149553.0 127184.21 171921.7 115342.91 183763.0\n2039       152511.3 129454.14 175568.5 117248.41 187774.2\n2040       155469.7 131744.04 179195.3 119184.44 191754.9\n2041       158428.0 134052.27 182803.8 121148.51 195707.6\n2042       161386.4 136377.39 186395.4 123138.41 199634.4\n\n\nCode\nannotation <- data.frame(\n  x = c(2027, 2032),\n  y = c(130000, 100000),  label = c(\"$114 ± 19 Billion in 2027\",\"$128 ± 25 Billion in 2032 \")\n)\n\np + geom_label(data = annotation, aes(x=x, y=y, label=label), size = 3) + labs(title = \"Forecasted Expenditures\", caption = \"Projected values at 95% confidence interval. \nDark blue represents 80% liklihood of falling with that range, \n                                                                               light blue represents 95% liklihood of being in projected range.\")\n\n\n\n\n\nCode\n#### revenue chart\nmodel_rev <- auto.arima(tsrev, seasonal = FALSE)\nforecast_rev <- forecast(model_rev, h = 20)\n\nq <- forecast(forecast_rev,  h = 20) %>% \n  autoplot() +\n    ylab(\"Dollars (Millions)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Forecasted Revenue\") +\n  theme_classic() +\n  scale_y_continuous(labels = dollar )\n\nsummary(forecast_rev)\n\n\n\nForecast method: ARIMA(0,1,1) with drift\n\nModel Information:\nSeries: tsrev \nARIMA(0,1,1) with drift \n\nCoefficients:\n         ma1     drift\n      0.8781  3012.396\ns.e.  0.1925  1372.353\n\nsigma^2 = 14506095:  log likelihood = -231.63\nAIC=469.26   AICc=470.46   BIC=472.79\n\nError measures:\n                   ME     RMSE      MAE        MPE     MAPE      MASE      ACF1\nTraining set 38.18265 3572.865 2673.742 -0.5331993 4.610784 0.7280497 -0.168285\n\nForecasts:\n     Point Forecast    Lo 80    Hi 80     Lo 95    Hi 95\n2023       108159.9 103278.1 113041.8 100693.74 115626.1\n2024       111172.3 100786.2 121558.4  95288.11 127056.5\n2025       114184.7 100331.5 128037.9  92998.11 135371.3\n2026       117197.1 100585.4 133808.8  91791.68 142602.5\n2027       120209.5 101236.2 139182.9  91192.27 149226.7\n2028       123221.9 102150.0 144293.9  90995.14 155448.7\n2029       126234.3 103254.6 149214.0  91089.91 161378.7\n2030       129246.7 104505.9 153987.4  91408.98 167084.4\n2031       132259.1 105874.6 158643.6  91907.43 172610.8\n2032       135271.5 107339.7 163203.2  92553.57 177989.4\n2033       138283.9 108886.2 167681.5  93324.07 183243.7\n2034       141296.3 110502.4 172090.1  94201.18 188391.4\n2035       144308.7 112179.3 176438.1  95170.98 193446.4\n2036       147321.1 113909.4 180732.7  96222.37 198419.8\n2037       150333.5 115687.0 184979.9  97346.29 203320.7\n2038       153345.9 117507.1 189184.6  98535.23 208156.5\n2039       156358.3 119365.6 193350.9  99782.92 212933.6\n2040       159370.7 121259.1 197482.3 101084.01 217657.3\n2041       162383.1 123184.4 201581.7 102433.93 222332.2\n2042       165395.5 125139.1 205651.8 103828.73 226962.2\n\n\nCode\nannotation <- data.frame(\n  x = c(2027, 2032),\n  y = c(200000, 300000),  \n  label = c(\"$120 billion in 2027\",\"$135 billion in 2032\")\n)\n\nq+ geom_label(data = annotation, aes(x=x, y=y, label=label), size = 3) +\n  labs(caption = \"after dropping federal covid dollars\")\n\n\n\n\n\nCode\nautoplot(tsexp) +\n  #geom_line(tsexp)+\n  #geom_line(aes(model_rev))+\n  autolayer(forecast_rev, series = \"Revenue\") +\n  autolayer(forecast_exp, series = \"Expenditure)\", alpha = 0.5) +\n  geom_line(year_totals, mapping= aes(x = Year, y = Revenue))  + guides(colour = guide_legend(\"Forecast\")) + \n  labs(title = \"Forecasted Revenue and Expenditures\", caption = \"Revenue without State and Local CURE Dollars\")\n\n\n\n\n\nRevenue forecasting using precovid trends:\n\n\nCode\n# revenue using precovid trends\ntsrev <- ts(year_totals$Revenue, start =\"1998\", end = \"2020\", frequency = 1) # yearly data\n\ntsexp2019 <- ts(year_totals$Expenditures, start =\"1998\", end = \"2020\", frequency = 1) # yearly data\n\n#### revenue chart\nmodel_rev <- auto.arima(tsrev, seasonal = FALSE)\nforecast_rev <- forecast(model_rev, h = 23)\n\nc <- forecast(forecast_rev,  h = 22) %>% \n  autoplot() +\n    ylab(\"Dollars (Millions)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Forecasted Revenue\") +\n  theme_classic() +\n  scale_y_continuous(labels = dollar )\n\nsummary(forecast_rev)\n\n\n\nForecast method: ARIMA(0,1,0) with drift\n\nModel Information:\nSeries: tsrev \nARIMA(0,1,0) with drift \n\nCoefficients:\n          drift\n      2130.7731\ns.e.   522.5883\n\nsigma^2 = 6294284:  log likelihood = -202.91\nAIC=409.82   AICc=410.45   BIC=412.01\n\nError measures:\n                   ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set 1.266691 2397.281 1730.586 -0.3250278 3.211109 0.7071574\n                    ACF1\nTraining set -0.08547373\n\nForecasts:\n     Point Forecast     Lo 80     Hi 80     Lo 95     Hi 95\n2021       80272.46  77057.25  83487.67  75355.23  85189.70\n2022       82403.24  77856.24  86950.23  75449.21  89357.26\n2023       84534.01  78965.10  90102.92  76017.10  93050.92\n2024       86664.78  80234.36  93095.20  76830.31  96499.26\n2025       88795.56  81606.13  95984.98  77800.28  99790.84\n2026       90926.33  83050.71  98801.95  78881.60 102971.05\n2027       93057.10  84550.46 101563.75  80047.31 106066.89\n2028       95187.88  86093.89 104281.86  81279.83 109095.93\n2029       97318.65  87673.02 106964.28  82566.93 112070.36\n2030       99449.42  89282.04 109616.81  83899.75 114999.09\n2031      101580.20  90916.55 112243.84  85271.56 117888.83\n2032      103710.97  92573.16 114848.78  86677.15 120744.78\n2033      105841.74  94249.14 117434.34  88112.39 123571.10\n2034      107972.51  95942.30 120002.73  89573.89 126371.14\n2035      110103.29  97650.84 122555.74  91058.91 129147.67\n2036      112234.06  99373.22 125094.90  92565.11 131903.01\n2037      114364.83 101108.19 127621.48  94090.54 134639.13\n2038      116495.61 102854.63 130136.58  95633.53 137357.68\n2039      118626.38 104611.61 132641.15  97192.64 140060.13\n2040      120757.15 106378.30 135136.01  98766.59 142747.71\n2041      122887.93 108153.99 137621.87 100354.31 145421.54\n2042      125018.70 109938.03 140099.37 101954.81 148082.59\n2043      127149.47 111729.87 142569.07 103567.23 150731.72\n\n\nCode\nannotation <- data.frame(\n  x = c(2020, 2032),\n  y = c(130000, 100000),  \n  label = c(\"$93 ± __ Billion in 2027\",\"$104 ± __ Billion in 2032\")\n)\n\nc+ geom_label(data = annotation, aes(x=x, y=y, label=label), size = 3) + labs(title= \"Revenue Forecasted using Pre-Covid Data\", subtitle = \"Own Source and Federal Revenues Combined\")\n\n\n\n\n\nCode\nautoplot(tsexp2019) +\n  #geom_line(tsexp)+\n  #geom_line(aes(model_rev))+\n  autolayer(forecast_rev, series = \"Revenue\") +\n  autolayer(forecast_exp, series = \"Expenditure)\", alpha = 0.5) +\n  geom_line(year_totals, mapping= aes(x = Year, y = Revenue))  + guides(colour = guide_legend(\"Forecast\")) + \n  labs(title = \"Forecasted Revenue and Expenditures\", caption = \"Using Pre-Covid revenue data (ending in FY2020)\")\n\n\n\n\n\n\n15.1.1 Federal Revenue\n\n\nCode\nfed_rev <- ff_rev %>% select(fy, rev_57, rev_58, rev_59) %>%\n  mutate(fed_total = rev_57+rev_58+rev_59)\n\nfed_ts57 <- ts(fed_rev$rev_57, start =\"1998\", frequency = 1) # yearly data\n\nmodel_fed <- auto.arima(fed_ts57, seasonal = FALSE)\nforecast_fed <- forecast(model_fed, h = 23)\n\nfed57 <- forecast(forecast_fed,  h = 20) %>% \n  autoplot() +\n    ylab(\"Nominal Dollars (Millions)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Forecasted Federal Other Revenue\") +\n  theme_classic() +\n  scale_y_continuous(labels = dollar )\n\nfed57\n\n\n\n\n\nCode\nfed_ts58 <- ts(fed_rev$rev_58, start =\"1998\", frequency = 1) # yearly data\n\nmodel_fed <- auto.arima(fed_ts58, seasonal = FALSE)\nforecast_fed <- forecast(model_fed, h = 23)\n\nfed58 <- forecast(forecast_fed,  h = 20) %>% \n  autoplot() +\n    ylab(\"Nominal Dollars (Millions)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Forecasted Federal Transfers for Transportation\") +\n  theme_classic() +\n  scale_y_continuous(labels = dollar )\n\nfed58\n\n\n\n\n\nCode\nfed_ts59 <- ts(fed_rev$rev_59, start =\"1998\", frequency = 1) # yearly data\n\nmodel_fed <- auto.arima(fed_ts59, seasonal = FALSE)\nforecast_fed <- forecast(model_fed, h = 23)\n\nfed59 <- forecast(forecast_fed,  h = 20) %>% \n  autoplot() +\n    ylab(\"Nominal Dollars (Millions)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Forecasted Federal Medicaid Reimbursements\") +\n  theme_classic() +\n  scale_y_continuous(labels = dollar )\n\nfed59\n\n\n\n\n\nCode\nfed_tstotal <- ts(fed_rev$fed_total, start =\"1998\", frequency = 1) # yearly data\n\nmodel_fed <- auto.arima(fed_tstotal, seasonal = FALSE)\nforecast_fed <- forecast(model_fed, h = 23)\n\nfedtotal <- forecast(forecast_fed,  h = 20) %>% \n  autoplot() +\n    ylab(\"Nominal Dollars (Millions)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Forecasted Federal Revenue WITHOUT Federal COVID Dollars\", subtitle = \"Sum of Transportation, Medicaid, and Other Federal Tranfers\") +\n  theme_classic() +\n  scale_y_continuous(labels = dollar ) \n\nfedtotal\n\n\n\n\n\nCode\nfed_tstotal <- ts(fed_rev$fed_total, start =\"1998\", end = \"2020\", frequency = 1) # yearly data\n\nmodel_fed <- auto.arima(fed_tstotal, seasonal = FALSE)\nforecast_fed <- forecast(model_fed, h = 23)\n\nfedtotal2 <- forecast(forecast_fed,  h = 20) %>% \n  autoplot() +\n    ylab(\"Nominal Dollars (Millions)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Forecasted Federal Revenue -- pre-COVID trends\", subtitle = \"Sum of Transportation, Medicaid, and Other Federal Tranfers\") +\n  theme_classic() +\n  scale_y_continuous(labels = dollar ) \n\nfedtotal2\n\n\n\n\n\nGraphing the 3 federal revenue types together may be the most reliable since some COVID funding is still recorded in Federal Other and some are in other categories (like Disaster Response in FY2021). Need to look at more before using."
  },
  {
    "objectID": "Everything.html#tables-with-totals",
    "href": "Everything.html#tables-with-totals",
    "title": "9  All Code together",
    "section": "15.2 Tables with Totals",
    "text": "15.2 Tables with Totals\n\n\nCode\nexp_totals <- ff_exp %>% rowwise() %>% mutate(exp_TOTALS = sum(across(exp_402:exp_970)))\nrev_totals <- ff_rev %>%    rowwise() %>% \n  mutate(rev_TOTALS = sum(across(rev_02:rev_78)))\n\nrev_long <- pivot_longer(rev_totals, rev_02:rev_TOTALS, names_to = c(\"type\",\"Category\"), values_to = \"Dollars\", names_sep = \"_\") %>% \n  rename(Year = fy) %>%\n  mutate(Category_name = case_when(\n    Category == \"02\" ~ \"INDIVIDUAL INCOME TAXES\" ,\n    Category == \"03\" ~ \"CORPORATE INCOME TAXES\" ,\n    Category == \"06\" ~ \"SALES TAXES\" ,\n    Category == \"09\" ~ \"MOTOR FUEL TAX\" ,\n    Category == \"12\" ~ \"PUBLIC UTILITY TAXES\" ,\n    Category == \"15\" ~ \"CIGARETTE TAXES\" ,\n    Category == \"18\" ~ \"LIQUOR GALLONAGE TAXES\" ,\n    Category == \"21\" ~ \"INHERITANCE TAX\" ,\n    Category == \"24\" ~ \"INSURANCE TAXES&FEES&LICENSES\" ,\n    Category == \"27\" ~ \"CORP FRANCHISE TAXES & FEES\" ,\n    Category == \"30\" ~ \"HORSE RACING TAXES & FEES\",  # in Other\n    Category == \"31\" ~ \"MEDICAL PROVIDER ASSESSMENTS\" ,\n    Category == \"32\" ~ \"GARNISHMENT-LEVIES\" , # dropped\n    Category == \"33\" ~  \"LOTTERY RECEIPTS\" ,\n    Category == \"35\" ~  \"OTHER TAXES\" ,\n    Category == \"36\" ~  \"RECEIPTS FROM REVENUE PRODUCING\", \n    Category == \"39\" ~  \"LICENSES, FEES & REGISTRATIONS\" ,\n    Category == \"42\" ~  \"MOTOR VEHICLE AND OPERATORS\" ,\n    Category == \"45\" ~  \"STUDENT FEES-UNIVERSITIES\",   # dropped\n    Category == \"48\" ~  \"RIVERBOAT WAGERING TAXES\" ,\n    Category == \"51\" ~  \"RETIREMENT CONTRIBUTIONS\" , # dropped\n    Category == \"54\" ~ \"GIFTS AND BEQUESTS\", \n    Category == \"57\" ~  \"FEDERAL OTHER\" ,\n    Category == \"58\" ~  \"FEDERAL MEDICAID\", \n    Category == \"59\" ~  \"FEDERAL TRANSPORTATION\" ,\n    Category == \"60\" ~  \"OTHER GRANTS AND CONTRACTS\", #other\n    Category == \"63\" ~  \"INVESTMENT INCOME\", # other\n    Category == \"66\" ~ \"PROCEEDS,INVESTMENT MATURITIES\" , #dropped\n    Category == \"72\" ~ \"BOND ISSUE PROCEEDS\",  #dropped\n    Category == \"75\" ~  \"INTER-AGENCY RECEIPTS \",  #dropped\n    Category == \"76\" ~  \"TRANSFER IN FROM OUT FUNDS\",  #other\n    Category == \"78\" ~  \"ALL OTHER SOURCES\" ,\n    Category == \"79\" ~   \"COOK COUNTY IGT\", #dropped\n    Category == \"98\" ~  \"PRIOR YEAR REFUNDS\", #dropped\nCategory == \"TOTALS\" ~ \"Total\"\n\n  ) ) %>% \n  select(-type, -Category) %>%  # drop extra columns type and Category number\n  group_by(Year, Category_name) %>%\n  summarise(Dollars= round(sum(Dollars),digits=2)) %>% \n  mutate(Category_name = str_to_title(Category_name))\n\n# creates wide version of table where each revenue source is a column\nrevenue_wide2 <- rev_long %>% pivot_wider(names_from = Category_name, \n              values_from = Dollars) %>%\n#  relocate(\"Other Revenue Sources **\", .after = last_col()) %>%\n  relocate(\"Total\", .after =  last_col())\n\n\n\n\nCode\nexp_long <- pivot_longer(exp_totals, exp_402:exp_TOTALS , names_to = c(\"type\", \"Category\"), values_to = \"Dollars\", names_sep = \"_\") %>% \n  rename(Year = fy ) %>% \n  mutate(Category_name = \n           case_when(\n            Category == \"402\" ~ \"AGING\" ,\n            Category == \"406\" ~ \"AGRICULTURE\", \n             Category == \"416\" ~ \"Central Management\",\n            Category == \"418\" ~ \"CHILDREN AND FAMILY SERVICES\", \n             Category == \"420\" ~ \"Community Development\",\n            Category == \"422\" ~ \"NATURAL RESOURCES\" ,\n             Category == \"426\" ~ \"CORRECTIONS\",\n            Category == \"427\" ~ \"EMPLOYMENT SECURITY\" ,\n             Category == \"444\" ~ \"Human Services\" ,\n           Category == \"478\" ~ \"HEALTHCARE & FAM SER NET OF MEDICAID\", \n            Category == \"482\" ~ \"PUBLIC HEALTH\", \n            Category == \"492\" ~ \"REVENUE\", \n             Category == \"494\" ~ \"Transportation\" ,\n             Category == \"532\" ~ \"ENVIRONMENTAL PROTECT AGENCY\" ,\n             Category == \"557\" ~ \"Tollway\" ,\n             Category == \"684\" ~ \"IL COMMUNITY COLLEGE BOARD\", \n             Category == \"691\" ~ \"IL STUDENT ASSISTANCE COMM\" ,\n             Category == \"900\" ~ \"NOT IN FRAME\",\n             Category == \"901\" ~ \"State Pension Contribution\",\n             Category == \"903\" ~ \"Debt Service\",\n             Category == \"904\" ~ \"State Employee Healthcare\",\n             Category == \"910\" ~ \"LEGISLATIVE\"  ,\n             Category == \"920\" ~ \"JUDICIAL\" ,\n             Category == \"930\" ~ \"ELECTED OFFICERS\" , \n             Category == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             Category == \"941\" ~ \"Public Safety\" ,\n             Category == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n             Category == \"943\" ~ \"CENTRAL SERVICES\",\n             Category == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             Category == \"945\" ~ \"Medicaid\" ,\n             Category == \"946\" ~ \"Capital Improvement\" , \n             Category == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n             Category == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             Category == \"959\" ~ \"K-12 Education\" ,\n             Category == \"960\" ~ \"UNIVERSITY EDUCATION\",\n             Category == \"970\" ~ \"Local Govt Revenue Sharing\",\n          Category == \"TOTALS\" ~ \"Total\") #,T ~ \"All Other Expenditures **\")\n           ) %>% \n  select(-type, -Category) %>% \n  group_by(Year, Category_name) %>% \n  summarise(Dollars= round(sum(Dollars),digits=2)) %>% \n  mutate(Category_name = str_to_title(Category_name))\n\nexpenditure_wide2 <- exp_long%>% \n  pivot_wider(names_from = Category_name, \n              values_from = Dollars) %>%\n  #relocate(\"All Other Expenditures **\", .after = last_col()) %>%\n  relocate(\"Total\", .after =  last_col())\n\n\n\n\nCode\n# function for calculating the CAGR\ncalc_cagr <- function(df, n) {\n  df <- exp_long %>%\n    #select(-type) %>%\n    arrange(Category_name, Year) %>%\n    group_by(Category_name) %>%\n    mutate(cagr = ((`Dollars` / lag(`Dollars`, n)) ^ (1 / n)) - 1)\n\n  return(df)\n}\n\n# This works for one variable at a time\ncagr_24 <- calc_cagr(exp_long, 24) %>% \n  # group_by(Category) %>%\n  summarize(cagr_24 = round(sum(cagr*100, na.rm = TRUE), 2))\n\ncagr23_precovid <- exp_long %>%\n  filter(Year <= 2019) %>%\n  calc_cagr(21) %>% \n  summarize(cagr_21 = round(sum(cagr*100, na.rm = TRUE), 2))\n\n\n\ncagr_10 <- calc_cagr(exp_long, 10) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_10 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_5 <- calc_cagr(exp_long, 5) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_5 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_3 <- calc_cagr(exp_long, 3) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_3 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_2 <- calc_cagr(exp_long, 2) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_2 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_1 <- calc_cagr(exp_long, 1) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_1 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\nCAGR_expenditures_summary_tot <- data.frame(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_24 ) %>% \n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %>% \n  rename(\"Expenditure Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10,\"24 Year CAGR\" = cagr_24 )\n\nmove_to_last <- function(df, n) df[c(setdiff(seq_len(nrow(df)), n), n), ]\n\nCAGR_expenditures_summary_tot <- move_to_last(CAGR_expenditures_summary_tot, 29) \n\n#CAGR_expenditures_summary_tot <-   select(CAGR_expenditures_summary_tot, -1) \n\nCAGR_expenditures_summary_tot%>%   \n  kbl(caption = \"CAGR Calculations for Expenditure Categories\" , row.names=FALSE) %>% \n     kable_classic() %>%\n    row_spec(31, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nCAGR Calculations for Expenditure Categories\n \n  \n    Expenditure Category \n    1 Year CAGR \n    2 Year CAGR \n    3 Year CAGR \n    5 Year CAGR \n    10 Year CAGR \n    24 Year CAGR \n  \n \n\n  \n    Aging \n    6.35 \n    6.87 \n    7.18 \n    -0.65 \n    4.33 \n    7.49 \n  \n  \n    Agriculture \n    43.05 \n    15.59 \n    8.10 \n    6.53 \n    3.25 \n    1.19 \n  \n  \n    Bus & Profession Regulation \n    9.53 \n    6.39 \n    3.66 \n    1.97 \n    -1.55 \n    1.48 \n  \n  \n    Capital Improvement \n    -6.53 \n    17.27 \n    18.12 \n    10.65 \n    -3.63 \n    2.15 \n  \n  \n    Central Management \n    2.05 \n    1.06 \n    8.53 \n    1.18 \n    4.71 \n    4.46 \n  \n  \n    Children And Family Services \n    3.98 \n    4.60 \n    5.53 \n    4.71 \n    1.30 \n    0.17 \n  \n  \n    Community Development \n    -24.04 \n    52.43 \n    35.74 \n    17.29 \n    3.44 \n    4.83 \n  \n  \n    Corrections \n    1.52 \n    3.16 \n    1.13 \n    5.12 \n    2.48 \n    2.13 \n  \n  \n    Debt Service \n    -0.83 \n    1.59 \n    -0.70 \n    1.65 \n    1.19 \n    6.11 \n  \n  \n    Elected Officers \n    7.38 \n    7.22 \n    3.48 \n    6.78 \n    4.29 \n    3.88 \n  \n  \n    Employment Security \n    -2.77 \n    16.01 \n    12.87 \n    10.41 \n    1.65 \n    2.37 \n  \n  \n    Environmental Protect Agency \n    -1.98 \n    -4.09 \n    -7.73 \n    -6.49 \n    0.12 \n    3.21 \n  \n  \n    Healthcare & Fam Ser Net Of Medicaid \n    2.95 \n    7.37 \n    -6.65 \n    0.81 \n    -2.87 \n    5.45 \n  \n  \n    Human Services \n    15.30 \n    12.23 \n    10.33 \n    6.90 \n    3.66 \n    2.75 \n  \n  \n    Judicial \n    4.20 \n    6.41 \n    9.15 \n    5.11 \n    3.40 \n    2.99 \n  \n  \n    K-12 Education \n    14.51 \n    11.07 \n    9.44 \n    7.39 \n    4.53 \n    4.30 \n  \n  \n    Legislative \n    24.13 \n    13.97 \n    12.12 \n    8.15 \n    2.76 \n    3.35 \n  \n  \n    Local Govt Revenue Sharing \n    44.48 \n    26.75 \n    16.73 \n    9.93 \n    6.42 \n    4.66 \n  \n  \n    Medicaid \n    10.11 \n    13.93 \n    15.00 \n    10.14 \n    8.99 \n    7.25 \n  \n  \n    Natural Resources \n    3.90 \n    4.22 \n    2.19 \n    5.39 \n    2.85 \n    1.76 \n  \n  \n    Other Boards & Commissions \n    2.96 \n    10.05 \n    3.68 \n    3.20 \n    -2.54 \n    4.23 \n  \n  \n    Other Departments \n    1.94 \n    4.84 \n    8.22 \n    5.63 \n    7.06 \n    9.10 \n  \n  \n    Public Health \n    -0.16 \n    29.65 \n    29.12 \n    20.32 \n    8.71 \n    7.63 \n  \n  \n    Public Safety \n    -9.74 \n    10.35 \n    21.41 \n    17.00 \n    8.62 \n    6.11 \n  \n  \n    Revenue \n    34.07 \n    41.36 \n    55.45 \n    35.64 \n    16.19 \n    7.24 \n  \n  \n    State Employee Healthcare \n    4.47 \n    0.47 \n    -1.52 \n    -1.95 \n    2.49 \n    6.08 \n  \n  \n    State Pension Contribution \n    15.42 \n    10.80 \n    9.67 \n    9.26 \n    9.38 \n    10.76 \n  \n  \n    Tollway \n    7.21 \n    4.76 \n    6.32 \n    3.60 \n    11.66 \n    7.54 \n  \n  \n    Transportation \n    -18.40 \n    3.31 \n    8.10 \n    0.84 \n    -0.24 \n    3.35 \n  \n  \n    University Education \n    4.72 \n    2.44 \n    3.92 \n    -0.72 \n    -0.76 \n    0.44 \n  \n  \n    Total \n    9.88 \n    11.94 \n    11.18 \n    7.35 \n    5.50 \n    5.07 \n  \n\n\n\n\n\n\n\nCode\ncalc_cagr <- function(df, n) {\n  df <- rev_long %>%\n    arrange(Category_name, Year) %>%\n    group_by(Category_name) %>%\n    mutate(cagr = ((Dollars / lag(Dollars, n)) ^ (1 / n)) - 1)\n\n  return(df)\n}\n\n# This works for one variable at a time\ncagr_24 <- calc_cagr(rev_long, 24) %>% \n     # group_by(Category) %>%\n  summarize(cagr_24 = round(sum(cagr*100, na.rm = TRUE), 2))\n\ncagr_10 <- calc_cagr(rev_long, 10) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_10 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_5 <- calc_cagr(rev_long, 5) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_5 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_3 <- calc_cagr(rev_long, 3) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_3 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_2 <- calc_cagr(rev_long, 2) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_2 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\n cagr_1 <- calc_cagr(rev_long, 1) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_1 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\nCAGR_revenue_summary_tot <- data.frame(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_24) %>%   \n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %>% \n  rename(\"Revenue Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10,\"24 Year CAGR\" = cagr_24 )\n\nCAGR_revenue_summary_tot <- move_to_last(CAGR_revenue_summary_tot,1)\nCAGR_revenue_summary_tot <- move_to_last(CAGR_revenue_summary_tot,22)\n\nCAGR_revenue_summary_tot %>% \n  kbl(caption = \"CAGR Calculations for Revenue Sources\", row.names = FALSE) %>% \n     kable_classic() %>%\n    row_spec(23, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nCAGR Calculations for Revenue Sources\n \n  \n    Revenue Category \n    1 Year CAGR \n    2 Year CAGR \n    3 Year CAGR \n    5 Year CAGR \n    10 Year CAGR \n    24 Year CAGR \n  \n \n\n  \n    Cigarette Taxes \n    -8.25 \n    -0.54 \n    3.02 \n    1.49 \n    3.33 \n    2.51 \n  \n  \n    Corp Franchise Taxes & Fees \n    -32.40 \n    1.22 \n    -4.37 \n    0.85 \n    1.18 \n    2.55 \n  \n  \n    Corporate Income Taxes \n    76.66 \n    72.77 \n    38.19 \n    32.31 \n    13.59 \n    7.70 \n  \n  \n    Federal Medicaid \n    8.48 \n    17.30 \n    16.43 \n    12.76 \n    11.30 \n    7.52 \n  \n  \n    Federal Other \n    21.32 \n    32.72 \n    22.40 \n    12.92 \n    6.39 \n    4.55 \n  \n  \n    Federal Transportation \n    -22.95 \n    1.39 \n    10.40 \n    1.51 \n    1.37 \n    3.33 \n  \n  \n    Gifts And Bequests \n    23.76 \n    42.12 \n    18.49 \n    10.46 \n    10.65 \n    11.43 \n  \n  \n    Individual Income Taxes \n    12.60 \n    16.35 \n    9.25 \n    15.22 \n    5.36 \n    5.68 \n  \n  \n    Inheritance Tax \n    35.98 \n    48.20 \n    16.36 \n    18.47 \n    10.12 \n    3.74 \n  \n  \n    Insurance Taxes&Fees&Licenses \n    -3.42 \n    12.76 \n    5.20 \n    2.79 \n    3.20 \n    6.56 \n  \n  \n    Licenses, Fees & Registrations \n    -4.68 \n    15.06 \n    16.83 \n    9.26 \n    6.23 \n    7.87 \n  \n  \n    Liquor Gallonage Taxes \n    2.53 \n    2.81 \n    2.49 \n    1.69 \n    1.37 \n    7.45 \n  \n  \n    Lottery Receipts \n    -6.17 \n    9.62 \n    1.63 \n    2.27 \n    0.90 \n    2.15 \n  \n  \n    Medical Provider Assessments \n    -1.98 \n    3.67 \n    16.26 \n    11.80 \n    8.33 \n    8.36 \n  \n  \n    Motor Fuel Tax \n    6.12 \n    4.36 \n    23.16 \n    13.42 \n    6.98 \n    2.78 \n  \n  \n    Motor Vehicle And Operators \n    -5.59 \n    4.66 \n    -0.04 \n    0.15 \n    0.64 \n    3.21 \n  \n  \n    Other Taxes \n    63.89 \n    32.74 \n    17.36 \n    13.92 \n    17.13 \n    7.87 \n  \n  \n    Public Utility Taxes \n    3.09 \n    -0.43 \n    -1.43 \n    0.22 \n    -0.48 \n    0.70 \n  \n  \n    Receipts From Revenue Producing \n    3.01 \n    4.78 \n    -2.68 \n    1.45 \n    3.49 \n    5.07 \n  \n  \n    Riverboat Wagering Taxes \n    80.77 \n    -1.03 \n    -8.90 \n    -6.18 \n    -4.20 \n    1.75 \n  \n  \n    Sales Taxes \n    11.29 \n    12.22 \n    7.40 \n    6.27 \n    4.43 \n    3.23 \n  \n  \n    All Other Sources \n    37.70 \n    12.92 \n    13.64 \n    8.08 \n    6.28 \n    4.54 \n  \n  \n    Total \n    14.15 \n    18.36 \n    13.15 \n    11.40 \n    6.55 \n    5.16 \n  \n\n\n\n\n\nCode\nrm(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_24)\n\n\n\n\nCode\nrevenue_change2 <- rev_long %>%\n  #select(-c(Category)) %>%\n  filter(Year > 2020) %>%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %>%\n  mutate(\n    \"FY 2022 Revenues ($ billions)\" = round(Dollars_2022/1000, digits = 1),\n#    \"Change from 2021 to 2022\" = round(Dollars_2022 - Dollars_2021, digits = 2),\n         \"Percent Change from 2021 to 2022\" = round(((Dollars_2022 -Dollars_2021)/Dollars_2021*100), digits = 2)) %>%\n  left_join(CAGR_revenue_summary_tot, by = c(\"Category_name\" = \"Revenue Category\")) %>% \n    arrange(-`FY 2022 Revenues ($ billions)`)%>%\n  #select(-c(Dollars_2021, Dollars_2021, `1 Year CAGR`:`10 Year CAGR`)) %>%\n  rename( \"Compound Annual Growth, 1998-2022*\" = `24 Year CAGR`, \n          \"FY2022 Revenue Category\" = Category_name ) %>%\n  select(-c(Dollars_2021, Dollars_2022, `1 Year CAGR`:`10 Year CAGR`)) \n\n\nrevenue_change2 <- move_to_last(revenue_change2,8)\nrevenue_change2 <- move_to_last(revenue_change2,1)\n\nrevenue_change2 %>% \n  kbl(caption = \"Yearly Change in Revenue\", row.names = FALSE) %>% \n   kable_classic() %>%\n    row_spec(23, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nYearly Change in Revenue\n \n  \n    FY2022 Revenue Category \n    FY 2022 Revenues ($ billions) \n    Percent Change from 2021 to 2022 \n    Compound Annual Growth, 1998-2022* \n  \n \n\n  \n    Individual Income Taxes \n    23.8 \n    12.60 \n    5.68 \n  \n  \n    Federal Medicaid \n    19.0 \n    8.48 \n    7.52 \n  \n  \n    Sales Taxes \n    15.4 \n    11.29 \n    3.23 \n  \n  \n    Federal Other \n    10.9 \n    21.32 \n    4.55 \n  \n  \n    Corporate Income Taxes \n    9.7 \n    76.66 \n    7.70 \n  \n  \n    Medical Provider Assessments \n    3.7 \n    -1.98 \n    8.36 \n  \n  \n    Motor Fuel Tax \n    2.5 \n    6.12 \n    2.78 \n  \n  \n    Receipts From Revenue Producing \n    2.4 \n    3.01 \n    5.07 \n  \n  \n    Gifts And Bequests \n    1.9 \n    23.76 \n    11.43 \n  \n  \n    Licenses, Fees & Registrations \n    1.9 \n    -4.68 \n    7.87 \n  \n  \n    Federal Transportation \n    1.8 \n    -22.95 \n    3.33 \n  \n  \n    Motor Vehicle And Operators \n    1.6 \n    -5.59 \n    3.21 \n  \n  \n    Lottery Receipts \n    1.4 \n    -6.17 \n    2.15 \n  \n  \n    Other Taxes \n    1.4 \n    63.89 \n    7.87 \n  \n  \n    Public Utility Taxes \n    1.4 \n    3.09 \n    0.70 \n  \n  \n    Cigarette Taxes \n    0.8 \n    -8.25 \n    2.51 \n  \n  \n    Inheritance Tax \n    0.6 \n    35.98 \n    3.74 \n  \n  \n    Insurance Taxes&Fees&Licenses \n    0.6 \n    -3.42 \n    6.56 \n  \n  \n    Liquor Gallonage Taxes \n    0.3 \n    2.53 \n    7.45 \n  \n  \n    Riverboat Wagering Taxes \n    0.3 \n    80.77 \n    1.75 \n  \n  \n    Corp Franchise Taxes & Fees \n    0.2 \n    -32.40 \n    2.55 \n  \n  \n    All Other Sources \n    2.7 \n    37.70 \n    4.54 \n  \n  \n    Total \n    104.5 \n    14.15 \n    5.16 \n  \n\n\n\n\n\nCode\nexpenditure_change2 <- exp_long %>%\n  #select(-c(type,Category)) %>%\n  filter(Year > 2020) %>%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %>%\n  mutate(\"FY 2022 Expenditures ($ billions)\" = round(Dollars_2022/1000, digits = 1),\n  #  \"Change from 2021 to 2022\" = Dollars_2022 - Dollars_2021,\n         \"Percent Change from 2021 to 2022\" = round((Dollars_2022 -Dollars_2021)/Dollars_2021*100, digits = 2) )%>%\n  left_join(CAGR_expenditures_summary_tot, by = c(\"Category_name\" = \"Expenditure Category\")) %>% \n  arrange(-`FY 2022 Expenditures ($ billions)`)%>%\n  select(-c(Dollars_2022, Dollars_2021, `1 Year CAGR`:`10 Year CAGR`)) %>%\n  rename( \"Compound Annual Growth, 1998-2022*\" = `24 Year CAGR`, \n          \"FY2022 Expenditure Category\" = Category_name )\n\nexpenditure_change2 <- move_to_last(expenditure_change2, 1)\n\nexpenditure_change2 %>% \n  kbl(caption = \"Yearly Change in Expenditures\", row.names = FALSE) %>% \n  kable_classic() %>%\n    row_spec(31, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nYearly Change in Expenditures\n \n  \n    FY2022 Expenditure Category \n    FY 2022 Expenditures ($ billions) \n    Percent Change from 2021 to 2022 \n    Compound Annual Growth, 1998-2022* \n  \n \n\n  \n    Medicaid \n    28.9 \n    10.11 \n    7.25 \n  \n  \n    K-12 Education \n    13.9 \n    14.51 \n    4.30 \n  \n  \n    Local Govt Revenue Sharing \n    10.4 \n    44.48 \n    4.66 \n  \n  \n    Human Services \n    7.6 \n    15.30 \n    2.75 \n  \n  \n    State Pension Contribution \n    6.5 \n    15.42 \n    10.76 \n  \n  \n    Other Departments \n    4.9 \n    1.94 \n    9.10 \n  \n  \n    Transportation \n    4.4 \n    -18.40 \n    3.35 \n  \n  \n    State Employee Healthcare \n    3.0 \n    4.47 \n    6.08 \n  \n  \n    Revenue \n    2.3 \n    34.07 \n    7.24 \n  \n  \n    University Education \n    2.3 \n    4.72 \n    0.44 \n  \n  \n    Tollway \n    2.1 \n    7.21 \n    7.54 \n  \n  \n    Debt Service \n    2.0 \n    -0.83 \n    6.11 \n  \n  \n    Public Safety \n    1.8 \n    -9.74 \n    6.11 \n  \n  \n    Corrections \n    1.6 \n    1.52 \n    2.13 \n  \n  \n    Children And Family Services \n    1.4 \n    3.98 \n    0.17 \n  \n  \n    Community Development \n    1.4 \n    -24.04 \n    4.83 \n  \n  \n    Aging \n    1.2 \n    6.35 \n    7.49 \n  \n  \n    Central Management \n    1.2 \n    2.05 \n    4.46 \n  \n  \n    Elected Officers \n    1.0 \n    7.38 \n    3.88 \n  \n  \n    Public Health \n    0.9 \n    -0.16 \n    7.63 \n  \n  \n    Environmental Protect Agency \n    0.7 \n    -1.98 \n    3.21 \n  \n  \n    Judicial \n    0.5 \n    4.20 \n    2.99 \n  \n  \n    Capital Improvement \n    0.4 \n    -6.53 \n    2.15 \n  \n  \n    Healthcare & Fam Ser Net Of Medicaid \n    0.4 \n    2.95 \n    5.45 \n  \n  \n    Employment Security \n    0.3 \n    -2.77 \n    2.37 \n  \n  \n    Natural Resources \n    0.3 \n    3.90 \n    1.76 \n  \n  \n    Other Boards & Commissions \n    0.3 \n    2.96 \n    4.23 \n  \n  \n    Bus & Profession Regulation \n    0.2 \n    9.53 \n    1.48 \n  \n  \n    Agriculture \n    0.1 \n    43.05 \n    1.19 \n  \n  \n    Legislative \n    0.1 \n    24.13 \n    3.35 \n  \n  \n    Total \n    102.2 \n    9.88 \n    5.07 \n  \n\n\n\n\n\n\n\nCode\n#install.packages(\"openxlsx\")\nlibrary(openxlsx)\n\ndataset_names <- list('rev_long' = rev_long, 'exp_long' = exp_long, \n                      `Table 1` = expenditure_change2, `Table 2` = revenue_change2,\n                      'Table 4.a' = CAGR_revenue_summary_tot, 'Table 4.b' = CAGR_expenditures_summary_tot, \n                      'year_totals' = year_totals)\n\nwrite.xlsx(dataset_names, file = 'summary_file_FY2022_withTotals.xlsx')\n\n\nExport summary file with Totals\n\n\nCode\ndataset_names <- list('Aggregate Revenues' = revenue_wide2, \n                      'Aggregate Expenditures' = expenditure_wide2, \n\n                      \n                      'Table 1' = expenditure_change2, #Top categories with yearly change, 23 yr cagr\n                      'Table 2' = revenue_change2,\n                      \n                     # 'Table 4.a' = CAGR_revenue_summary_majorcats, # Categories Match Table 1 in paper\n                     # 'Table 4.b' = CAGR_expenditures_summary_majorcats, \n                                            \n                     # 'Table 1-AllCats' = expenditure_change_allcats,  # All Categories by Year\n                    #  'Table 2-AllCats' = revenue_change_allcats,\n                      \n                      'Table 4.a-AllCats' = CAGR_revenue_summary_tot, \n                      'Table 4.b-AllCats' = CAGR_expenditures_summary_tot, \n                      \n                      'year_totals' = year_totals,    # Total Revenue, Expenditure, and Fiscal gap per year\n                      \n                      'aggregated_totals_long' = aggregated_totals_long # all data in long format. Good for creating pivot tables in Excel\n                      )\n\nwrite.xlsx(dataset_names, file = 'summary_file_FY22_wTotals.xlsx')"
  },
  {
    "objectID": "FedMoneyReceived.html#covid-money-tracker-data",
    "href": "FedMoneyReceived.html#covid-money-tracker-data",
    "title": "8  Federal COVID Money Received",
    "section": "8.1 COVID Money Tracker Data",
    "text": "8.1 COVID Money Tracker Data\nData was downloaded from COVIDMoneyTracker.org for the State of Illinois. It does not include aid for households or loans to businesses. Data file is named federalcoviddollars.xlsx in Github page used to create this website. A little information on Sankey graphs is below:\n\nThe axis is how the observations are grouped at each step. There are multiple axes.\nStrata are the options that exist for each level. (e.g. Year received can be 2021 or 2022)\nAlluvium correspond to the fixed value of each axis variable. Proportional to how the sum of however you are grouping your data.\nFlows are the segments of the alluvia between adjacent axes.\n\nRead the charts from the top to the bottom. Most of the graphs below begin with either the year the money was received or the name of the Law that provided the funds and then shows it flowing down to either who received the money or how it was spent.\nThe graph below focuses on when the money from each Federal Act arrived and where it was received (State or a state department) and the spending category that it would be considered using the Fiscal Futures categorization.\n\n\nCode\nsankeydata <- read_excel(\"federalcoviddollars.xlsx\")\nsankey <- sankeydata %>% \n  #select(Federal, StateFunds, StFund, Expenditures, stfundname, value, Notes) %>%\n  #  filter(StFund == \"Total\") %>%\n\n  mutate(StateFunds = factor(FY, levels = c( \"FY20\", \"FY21\", \"FY22\")),\n        Legislation2 = factor(Legislation2, levels = c( \"Other\", \"CARES\", \"CRRSA\", \"ARPA\")),\n                              Legislation1 = factor(Legislation, levels = c( \"Families First\", \"CARES\", \"PPP & Health Care\", \"Response & Relief\", \"ARPA\"))\n)\n         \n                 #  Expenditures = factor(Expenditures, levels = c(\"Community Development\", \"Public Health\", \"Medicaid\", \"K-12\", \"Federal Other\", \"Transit\")),\n      #   Notes = factor(Notes, levels = c(  \"CARES\", \"Other *\",\"CRRSA\", \"ARPA\")))\n\n\nggplot(sankey, \n       aes(y = `Dollars Received`, axis3 = FY, axis2 = `Broad Category`, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Legislation), color = \"black\", reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n     geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n    theme(legend.position = \"bottom\")+\n  ggtitle(\"$52 Million Federal COVID Relief to Illinois over 3 years\")\n\n\n\n\n\nCode\nggplot(sankey, \n       aes(y = `Dollars Received`, axis2 = FY, axis3 = `Broad Category`, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Legislation), color = \"black\", reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n     geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n    theme(legend.position = \"bottom\")+\n  ggtitle(\"$52 Million Federal COVID Relief to Illinois over 3 years\")\n\n\n\n\n\nCode\nsankey %>% group_by(FY) %>% summarize(sum=sum(`Dollars Received`))\nsankey %>% group_by(Legislation) %>% summarize(sum=sum(`Dollars Received`))\n\nsankey %>% group_by(`Broad Category`) %>% summarize(sum=sum(`Dollars Received`))\nsankey %>% group_by(Legislation, FF_Cat2) %>% summarize(sum=sum(`Dollars Received`))\n\n\nsankey %>% group_by(FF_Cat2) %>% summarize(sum=sum(`Dollars Received`))\n\nsankey %>% group_by(Legislation, `Broad Category`,FF_Cat2) %>% summarize(sum=sum(`Dollars Received`))\n\n\nsankey %>% group_by(FY, FF_Cat2) %>% summarize(sum=sum(`Dollars Received`)) %>% pivot_wider(names_from=\"FY\", values_from = sum)\n\nsankey %>% filter(FF_Cat != \"Excluded\") %>%\nggplot(\n       aes(y = `Dollars Received`, axis4 = `Broad Category`, axis3 = Category, axis2 = Recipient, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Legislation), color = \"black\", reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n     geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n    theme(legend.position = \"bottom\")+\n  ggtitle(\"State CURE and State Departments Received $43.1 Billion\")\n\n\n\n\n\n\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n\n\nState CURE received $11.6 billion dollars from State Fiscal Recovery Funds and $31.5 billion in other federal revenue. This other federal revenue frequently came in the form of increased or new grants to many State Departments that normally receive federal funding. Local Governments within Illinois received an additional $8.9 billion for economic recovery but we do not include funds given straight to localities in our State COVID recovery fund calculations.\nBelow is a graph showing federal stimulus money that was received in each year, the federal agency/fund that it came from, who received the money (e.g. the State of Illinois, Department of Human Services, Local Governments, etc.) and what the funds were ultimately spent on. $15.7 billion was received in FY20, $7.24 billion in FY21, and $29 billion was received in FY22 from multiple COVID response Federal Acts. The graph above shows the year received, the federal government’s fund name or purpose, the department that received the funds, and the fiscal futures spending category that the purpose falls under.\nAgain, these graphs show the funds that were received and their intended purpose, NOT the data on how or when it was spent.\n\n\nCode\nsankey %>% filter(FF_Cat2!= \"Excluded\") %>%\n  ggplot(aes(y = `Dollars Received`, axis4 = FY, axis3= `Category`, axis2 = Recipient, axis1=FF_Cat2\n          # , label = \"stratum\"\n           )) +\n  geom_flow(aes(fill = Legislation2, label = \"flow\"), \n            color = \"black\", reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\n     geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), \n               size = 2, reverse=FALSE)+\n  coord_flip()+\n  scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n  theme(legend.position = \"bottom\")+\n  ggtitle(\"State Received $16 Billion in FY20, $7 Billion in FY21, and $29 Billion in FY22\")\n\n\n\n\n\nCode\nsankey %>% group_by(FY)%>%summarize(TotalReceived=sum(`Dollars Received`))\n\nsankey %>% group_by(Legislation)%>%summarize(TotalReceived=sum(`Dollars Received`))\n\n\nsankey %>% group_by(Recipient)%>%summarize(TotalReceived=sum(`Dollars Received`))\n\nsankey %>% group_by(FF_Cat)%>%summarize(TotalReceived=sum(`Dollars Received`))\n\nsankey %>% group_by(Legislation, Recipient)%>%summarize(TotalReceived=sum(`Dollars Received`)) %>% pivot_wider(names_from = Legislation, values_from = TotalReceived)\n\nsankey %>% group_by(Legislation, FF_Cat)%>%summarize(TotalReceived=sum(`Dollars Received`)) %>% pivot_wider(names_from = Legislation, values_from = TotalReceived)\n\nsankey %>% group_by(FY, FF_Cat)%>%summarize(TotalReceived=sum(`Dollars Received`)) %>% pivot_wider(names_from = FY, values_from = TotalReceived)\n\n\nsankey %>% group_by(Legislation, FF_Cat2)%>%summarize(TotalReceived=sum(`Dollars Received`)) %>% pivot_wider(names_from = Legislation, values_from = TotalReceived)\n\nsankey %>% group_by(FY, FF_Cat2)%>%summarize(TotalReceived=sum(`Dollars Received`)) %>% pivot_wider(names_from = FY, values_from = TotalReceived)\n\n\n\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n\n\nMore graph variations.\n\n\nCode\ndata <- read_excel(\"attemptJan15.xlsx\") %>% filter(FF_Cat2 != \"Exclude\")\n\nggplot(data, \n       aes(y = Committed, axis4 = FY_Received, axis3 = State_Local, axis2 = StateOrDepartments, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\n # geom_text(stat = \"stratum\", label.strata = TRUE) + \ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 4, reverse=FALSE)+\n  theme(legend.position = \"bottom\")+\n  ggtitle(\"$52 Billion for Illinois (including Local Governments, education, healthcare providers)\")\n\n\n\n\n\nCode\ndata %>% filter(FF_Cat2 != \"Exclude\") %>%\nggplot(aes(y = Committed, axis3 = StateOrDepartments, axis2=FundPurpose2, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+theme(legend.position = \"bottom\") + \n  ggtitle(\"Received: $16 Billion for Illinois + $23.3 for State Departments ($39.7 Billion total)\")\n\n\n\n\n\nCode\ndata %>% group_by(State_Local) %>% summarize(sum=sum(Committed))\n\ndata %>% group_by(StateOrDepartments) %>% summarize(sum=sum(Committed))\n\ndata %>% group_by(StateOrDepartments, FF_Cat) %>% summarize(sum=sum(Committed))\n\ndata %>% group_by(StateOrDepartments, FF_Cat, FY_Received) %>% summarize(sum=sum(Committed)) %>% pivot_wider(names_from = FY_Received, values_from = sum)\n\ndata %>% filter(State_Local !=\"Local\") %>% group_by(Law, FF_Cat, FY_Received) %>% summarize(sum=sum(Committed)) %>% pivot_wider(names_from = FY_Received, values_from = sum)\n\ndata %>% group_by(StateOrDepartments, FY_Received) %>% summarize(sum=sum(Committed)) %>% pivot_wider(names_from = FY_Received, values_from = sum)\n\ndata %>% filter(State_Local !=\"Local\") %>% group_by(Law, FF_Cat) %>% summarize(sum=sum(Committed)) %>% pivot_wider(names_from = Law, values_from = sum)"
  },
  {
    "objectID": "FedMoneyReceived.html#other-revenue-graphs",
    "href": "FedMoneyReceived.html#other-revenue-graphs",
    "title": "8  Federal COVID Money Received",
    "section": "8.3 Other Revenue Graphs",
    "text": "8.3 Other Revenue Graphs\nSankeyattempt2022.csv file totals $32 billion flowing into the state. $16.15 billion came in FY21 and $16.1 billion in FY22.\n\n\nCode\nsankeydata <- read_csv(\"sankeyattempt2022.csv\") %>% filter(StFund == \"Total\")\n\nsankeydata2 <- sankeydata %>% select(Federal, StateFunds, StFund, Expenditures, value, Notes) %>%\n  filter(StFund == \"Total\") %>%\n  mutate(StateFunds = factor(StateFunds, levels = c(\"Total_received_fy20\",\"Total_received_fy21\", \"Total_received_fy22\")),\n                  Federal = as.factor(Federal),\n                  Expenditures = factor(Expenditures, levels = c(\"Community Development\", \"Transit\", \"Public Health\", \"Medicaid\", \"K-12\", \"Federal Other\")),\n         Notes = factor(Notes, levels = c(\"CARES\", \"CRRSA\", \"ARPA\", \"Other *\")))\n\nsankey4 <- sankeydata2\n\nggplot(sankey4, \n       aes(y = value, \n           axis3 = Federal, axis2 = StateFunds, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = Notes), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n     scale_x_discrete( limits = c(\"Federal Funds\", \"State Funds\", \"Expenditure Categories\") )+ \n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)\n\n\n\n\n\n\n\nCode\nsankey4 %>% #group_by(StateFunds) %>% \n  summarize(sum=sum(value))\n\nsankey4 %>% group_by(StateFunds) %>% \n  summarize(sum=sum(value))\n\nsankey4 %>% group_by(Expenditures) %>% \n  summarize(sum=sum(value))\n\nsankey4 %>% group_by(Notes) %>% \n  summarize(sum=sum(value))\n\nsankey4 %>% group_by(StateFunds, Expenditures) %>% \n  summarize(sum=sum(value))\n\n\n\n\n  \n\n  \n\n  \n\n  \n\n  \n\n\n\nGraph below shows same amount in federal COVID dollars but here color indicates the fund that the money was received in.\n\n\nCode\nsankeydata <- read_csv(\"sankeyattempt2022.csv\") %>% filter(StFund == \"Total\")\n\nsankey <- sankeydata %>% select(Federal, StateFunds, StFund, Expenditures, stfundname, value, Notes) %>%\n  mutate(StateFunds = factor(StateFunds, levels = c(\"Total_received_fy20\", \"Total_received_fy21\", \"Total_received_fy22\")),\n         stfundname = as.factor(stfundname),\n         Federal = as.factor(Federal),\n         \n                   Expenditures = factor(Expenditures, levels = c(\"Transit\", \"Medicaid\", \"Public Health\",  \"K-12\", \"Federal Other\", \"Community Development\")),\n         Notes = factor(Notes, levels = c( \"Other *\", \"CARES\",\"CRRSA\", \"ARPA\")))\n\n\nggplot(sankey, \n       aes(y = value, axis3 = Federal, axis2 = stfundname, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = stfundname), color = \"black\",reverse=FALSE) +\n  guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +      \n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  ggtitle(\"Expenditures using Federal Relief Funds. \")\n\n\n\n\n\nHighlights legislation, fund money went into, and its purpose.\n\n\nCode\nggplot(sankey, \n       aes(y = value, axis3 = Notes, axis2 = stfundname, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = stfundname), color = \"black\",reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\n # geom_text(stat = \"stratum\", label.strata = TRUE) + \ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + ggtitle(\"Funds that received money from each law and their purpose.\")\n\n\n\n\n\nCode\nggplot(sankey, \n       aes(y = value, axis3 = Notes, axis2 = stfundname, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = stfundname), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2,reverse=FALSE)\n\n\n\n\n\n\n\nCode\nsankeydata <- read_csv(\"sankeyattempt2022.csv\")\n\nsankey <- sankeydata %>% select(Federal, StateFunds, StFund, Expenditures, stfundname, value, Notes) %>%\n    filter(StFund == \"Total\") %>%\n\n  mutate(StateFunds = factor(StateFunds, levels = c(\"Total_received_fy20\", \"Total_received_fy21\", \"Total_received_fy22\")),\n         stfundname = as.factor(stfundname),\n         Federal = as.factor(Federal),\n         \n                   Expenditures = factor(Expenditures, levels = c(\"Community Development\", \"Public Health\", \"Medicaid\", \"K-12\", \"Federal Other\", \"Transit\")),\n         Notes = factor(Notes, levels = c(  \"CARES\", \"Other *\",\"CRRSA\", \"ARPA\")))\n\n\nggplot(sankey, \n       aes(y = value, \n           axis3 = Notes, axis2 = StateFunds, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = stfundname), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse = FALSE)\n\n\n\n\n\n\nNote: CARES funds were originally received and spent in Disaster Response & Recovery Fund. In FY22, unspent aid was transferred to the State CURE and then transferred again to state agencies for COVID-related expenditures. Remaining CARES funds were transferred to State CURE fund for FY22. $337 million was also transfered from the Illinois Department of Revenue into the Illinois Housing Development Authority (IHDA). (LBOC June 2021 Report)\n\n\nRevenue from Local Cure is the Local Government Transfers.\n\n\n\nCode\nsankey %>%\n  summarize(sum=sum(value))\n\nsankey %>% group_by(StateFunds) %>% \n  summarize(sum=sum(value))\n\nsankey %>% group_by(Expenditures) %>% \n  summarize(sum=sum(value))\n\nsankey %>% group_by(Notes) %>% \n  summarize(sum=sum(value))\n\nsankey %>% group_by(StateFunds, Expenditures) %>% \n  summarize(sum=sum(value))\n\n\n\n\n  \n\n  \n\n  \n\n  \n\n  \n\n\n\nggsankey info and example"
  }
]