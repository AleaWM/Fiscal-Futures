[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Fiscal Futures Project",
    "section": "",
    "text": "Background Information\nThis is a living document in which we aim to describe things as clearly as possible in the time we have, share it with others, and improve as we come back to it. If we wait till we have time to write flawless docs, it’ll never happen.\nCode and information on the analysis of Illinois’ expenditures and revenues. The Fiscal Future Project is associated with the Institute of Government and Policy Affairs but publicly sharing the code and creating a website was done by Alea Wilbur-Mujtaba. Any errors with code or findings are the fault of the author, not the research institute. Data originally from annual FOIA requests to the Illinois Office of the Comptroller."
  },
  {
    "objectID": "index.html#including-or-excluding-funds-in-the-fiscal-futures-all-funds-budget",
    "href": "index.html#including-or-excluding-funds-in-the-fiscal-futures-all-funds-budget",
    "title": "Fiscal Futures Project",
    "section": "Including or Excluding funds in the Fiscal Futures All Funds Budget",
    "text": "Including or Excluding funds in the Fiscal Futures All Funds Budget\nWhile it is called an “All Funds” Budget, that is a slight exaggeration. Illinois has over 700 funds. Whereas the overwhelming majority are included in our “All Funds” measure, some are not.  The starting point for our list of all funds is all appropriated funds, but, for the reasons listed below, we exclude a handful of appropriated funds and include a number of non-appropriated funds. \nCriterion 1: INCLUDE IF the fund collects a state-levied tax.\nThe state collects both state-levied taxes and locally levied taxes (typically local-option sales and utility taxes).  The state collects and returns local taxes to the local governments.  Upon receipt, local tax revenues are deposited into specifically-designated, non-appropriated state trust funds.  In cases where the state is solely acting as a collection agent for a local taxing body, this receiving trust fund, its revenue and distribution (expenditure) is NOT counted in our analytical frame.  If the tax is collected for the state, the fund and its revenue IS counted in our analytical frame. \nCriterion 2:  INCLUDE IF the fund supports a state function.\nNon-appropriated funds may support state functions such as education, social services, transportation, public facilities, regulation, natural resources, and law enforcement.  Generally these are trust funds that hold federal dollars for a specified state project or purpose.  This category of non-appropriated funds is essentially the same as a large group of appropriated state and federal trust funds.  Because we are counting federal dollars as revenue, it would be inconsistent to count the appropriated funds, but not the non-appropriated funds that do essentially the same thing. \nCriterion 3:  EXCLUDE IF the fund is a holding fund for individuals.\nMany funds are used to hold monies that belong to individuals, not the state.  Most of these funds are non-appropriated, but some are appropriated.  Examples of appropriated funds that we exclude from the frame are child support collection funds or employee pension own-contribution funds.  These funds are holding money that belongs to an individual and will be returned to the person, or used for a payment on behalf of that person, at a later date. \nCriterion 4:  EXCLUDE IF the fund’s expenditures or revenues have been counted elsewhere (i.e., avoid double-counting).\nIn some cases, funds receive and disburse money that was already counted as revenues to or expenditures from other funds.  For example, the Commercial Consolidation Fund is a huge fund that distributes state benefit payments to individuals, service providers, and local governments by direct deposit.  Payments into this fund are counted, distributions from this fund are not. \nCriterion 5:  EXCLUDE IF the fund holds designated user fees targeted for a specific purpose that is not a public function (conduit).\nTypically we have excluded non-appropriated funds that hold designated user fees that are directed to a specific purpose that is not a necessary public function.  These funds can be considered a conduit and we did not add these to the frame.  For example, we exclude Fund 0098, which collects fees from harness race entrants at the state fair and then pays them out to race winners.\nCriterion 6:  INCLUDE IF the fund collects a user fee that supports a large, important state function (state function trumps user fee).\nNon-appropriated funds that are supported by user fees AND perform a state function (e.g., transportation) ARE counted in the frame.  The rationale for this is that the state function would have to be performed even if the user fee and the fund structure did not exist.  The biggest example is the Illinois State Toll Highway Revenue Fund, which collects tolls and supports the expansion and maintenance of Illinois toll roads. \nCriterion 7:  EXCLUDE IF unclear information, dead fund, small amounts. Some funds are defunct, and our historical information on fund descriptions does not include pre-2005 designations. Fund numbers are re-used, making it impossible to determine the original purpose of some older, defunct funds.  These funds generally appear to be very small.  Because we are projecting forward from the most recently completed fiscal year, we assumed that these funds would not be in the frame."
  },
  {
    "objectID": "code-cleaning.html",
    "href": "code-cleaning.html",
    "title": "1  Gathering and Cleaning Data!",
    "section": "",
    "text": "Information for the Fiscal Futures all funds database comes from detailed information provided by the Illinois Comptroller’s office.  Currently the database includes 300,000 individual records for fiscal years 1998 to 2022.\n\nDo the FOIA request. In a week or so, they send the expenditure and revenue data as excel files.\nChecks whether there are any new agencies, re-used funds etc. Create a list of funds, agencies, fund names, etc. for the new year and compare it to the immediate prior year to identify new funds.\nUpdate the funds_ab_in file which shows the use of funds. Use criteria to determine if the new funds should be in or out of the all-funds frame.\nChange the variable names to be consistent with other files such as AGENCYNAME --> agency_name\nOnce variable names are shared over all years of data, combine past years with newest year. All revenue files are in a `revenue` folder that I reference when I set the working directory. When adding new fiscal years, put the the newest year of data for revenue and expenditures in their respective folders.\n\nNormally, when your receive the new fiscal year files from the Comptrollers office, you will need to change the variable names so that they are consistent with past years. This is an example of reading in the new file and changing the variable names. They seem to change almost every year in the file received from the FOIA so if the code breaks here, check to make sure that the columns you are trying to rename exist and are spelled correctly! Once variables are the same, you will want to save the file as a csv file in its Revenue/Expenditure file and bind all past years and the current year together in one dataframe.\n\n#Example code below: Read in excel file and rename columns so that it plays well with the other years' files.\n\nrevenue_fy22 <- read_xlsx(\"Fis_Fut_Rev_2022_Final.xlsx\") %>% \n  rename(fy = 'FY',\n         fund = 'FUND',\n         fund_name = 'FUND NAME',\n         agency = 'AGENCY',\n         agency_name = 'AGENCY NAME',\n         source = 'REVENUE SOURCE',\n         source_name = 'REV SRC NAME',\n         receipts = 'AMOUNT'\n  ) \n\nexp_fy22 <- read_xlsx(\"Fis_Fut_Exp_2022_Final.xlsx\") %>% \n  rename(fy = 'FY',\n         fund = 'FUND',\n         fund_name = 'FUND NAME',\n         agency = 'AGENCY',\n         agency_name = 'AGENCY NAME',\n         appr_org = 'ORGANIZATION',\n         org_name = 'ORGANIZATION NAME',\n         obj_seq_type = 'APPROPRIATION',\n         wh_approp_name = 'APPROPRIATION NAME',\n        # exp_net_xfer = 'NET OF TRANS AMOUNT',\n         expenditure = 'EXPENDED'\n\n  ) \n\n# %>%\n#   # these come from ioc_source file after merging\n#   mutate(data_source = \"exp IOC Aug 2022\",\n#          object = ,\n#          seq = ,\n#          type = ,\n#          fund_cat = FIND_COLUMN, #create fund_cat column\n#          fund_cat_name = FIND_NAME) # create fund_cat_name column\n\nThe code chunk below takes the .dta files for all fiscal years before FY 2022 and binds them together. Variable names were manually changed by past researchers so that they were consistent across years.\nFor FY 2023 and after, .dta files can be avoided entirely and .csv or excel files will be used. All files before this year had been saved and passed on as .dta files for Stata code before the transition to R in Fall 2022. For years after fy22: add line of code to bind csv files after binding the dta files together. Variable names must identical to merge files together.\nCode below reads in the csv files created in chunks above (allrevfiles.csv and allrexpfiles.csv). These files contain all years of data combined into one file BEFORE any recoding is done. Do not use this file for summing categories because it is just an inbetween step before recoding revenue and expenditure categories.\n\n\nCode\n# combined in past chunks called create-rev-csv and create-exp-csv\n\nallrevfiles22 <- read_csv(\"allrevfiles22.csv\") #combined but not recoded\n\nallexpfiles22 <- read_csv(\"allexpfiles22.csv\") #combined but not recoded\n\n\n\n1.0.1 Inspecting new FY22 data files\nData files for closed years have been obtained from IOC. The numbers of funds, agencies, organizations, and revenue sources below were found by using pivot tables in the codebook files in the FY2022 Box folder. This could also be done using R and grouping new files by fund, agency, source number, source names, etc..\nRevenue File:\n\n684 Fund Numbers\n80 Agencies\n1184 Revenue source numbers\n1156 revenue source names\n\nExpenditure File:\n\n708 Fund Numbers\n107 Agencies\n98 Organization Numbers\n313 Organization names\n\n\n\n1.0.2 Finding new agencies and funds\nGeneral steps:\n\nIdentify new and reused funds for newest fiscal year.\nRecode funds to take into account different fund numbers/names over the years. See [Recoding New and Reused Funds] for code chunk that does this.\nUpdate fund_ab_in_2022.xlsx with any changes from previous fiscal year.\n\nNew Agencies, Funds, and Organizations from Expenditure files:\n\nUsing the code below, I found 2 agencies, multiple funds, and a couple organizations that had not been specifically mentioned in the funds_ab_in file - AWM, FY2022.\nNote: One new org name and org number combo has an expenditure of $600 million for pensions payment. Investigate later.\n\n\n\nCode\nallrevfiles22 <- read_csv(\"allrevfiles22.csv\") #combined but not recoded\n\nallexpfiles22 <- read_csv(\"allexpfiles22.csv\") #combined but not recoded\n\n\n#### From Expenditure Data #####\n\n# agencies referenced in any year before 2020:\n\nagencies_past <- allexpfiles22 %>% \n  filter(fy < 2022) %>% \n  mutate(agency == as.character(agency)) %>% \n  group_by(agency, agency_name) %>% \n  unique() %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %>% \n  drop_na() %>% \n  arrange(agency)\n\n# agencies_past # 146 agencies ever\n\n# agencies in 2022 data:\n\nagencies22 <- allexpfiles22  %>% \n  filter(fy == 2022) %>% \n  mutate(agency == as.character(agency)) %>% \n  group_by(agency, agency_name) %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE))\n\n# agencies22 # 107 agencies this year\n\n# 280 and 533 are new agency codes: \n\nanti_join(agencies22, agencies_past, \n          by = c(\"agency\", \"agency_name\")) %>% \n  arrange(agency)\n\n\n\n\n  \n\n\n\nCode\nfunds_past <- allexpfiles22  %>% \n  filter(fy < 2022) %>% \n  mutate(fund == as.character(fund)) %>% \n  group_by(fund, fund_name) %>% \n  summarize(count = n(), Expenditure = sum(expenditure, na.rm = TRUE))  %>% \n  drop_na()\n\nfunds22 <- allexpfiles22  %>% \n  filter(fy == 2022) %>% \n  mutate(fund == as.character(fund)) %>% \n  group_by(fund, fund_name) %>%  \n  summarize(count = n(), Expenditure = sum(expenditure, na.rm = TRUE)) %>% \n  unique()\n\n# 15 funds were in FY22 data that were not in past data:\n\nanti_join(funds22, funds_past, by = c(\"fund\", \"fund_name\")) %>% arrange(fund)\n\n\n\n\n  \n\n\n\nCode\n# orgs_pastin the past =  916 org groups ever\n\norgs_past <- allexpfiles22  %>% \n  filter(fy < 2022) %>% \n  mutate(appr_org == as.character(appr_org)) %>% \n  group_by(appr_org, org_name) %>% \n  unique() %>% \n  summarize(Expenditure = sum(expenditure, na.rm = TRUE)) %>% drop_na()\n\n# orgs_past # 916 org groups ever\n\norgs22 <- allexpfiles22  %>% \n  filter(fy == 2022) %>% \n  mutate(appr_org = as.character(appr_org)) %>% \n  group_by(appr_org, org_name) %>% \n  summarize(Expenditure = sum(expenditure, na.rm = TRUE))\n\n# orgs22 # 396 org groups this year\n\n# 4 org number and org name combos are new for FY2022:\n\nanti_join(orgs22, orgs_past, by = c(\"appr_org\", \"org_name\")) %>% arrange(appr_org)\n\n\n\n\n  \n\n\n\nNew Revenue Funds, Sources, and New Agencies:\n\n\nCode\n#### From Revenue Data ####\n\n# agencies_past # 108 agencies ever\n\nagencies_past <- allrevfiles22  %>% \n  filter(fy < 2022) %>% \n  mutate(agency == as.character(agency)) %>% \n  group_by(agency, agency_name) %>% \n  unique() %>% \n  summarize(Receipts = sum(receipts, na.rm = TRUE)) %>% \n  drop_na()\n\n# agencies22 # 80 agencies this year\n\nagencies22 <- allrevfiles22  %>% \n  filter(fy == 2022) %>% \n  mutate(agency == as.character(agency)) %>% \n  group_by(agency, agency_name) %>% \n  summarize(Receipts = sum(receipts, na.rm = TRUE))\n\n# 0 new agencies in revenue data this year\n\nanti_join(agencies22, agencies_past, by = c(\"agency\", \"agency_name\")) %>% arrange(agency)\n\n\n\n\n  \n\n\n\nCode\nfunds_past <- allrevfiles22  %>% \n  filter(fy < 2022) %>% \n  mutate(fund == as.character(fund)) %>% \n  group_by(fund, fund_name) %>% \n  summarize(count = n(), Receipts = sum(receipts, na.rm = TRUE))  %>% \n  drop_na()\n\nfunds22 <- allrevfiles22  %>% \n  filter(fy == 2022) %>% \n  mutate(fund == as.character(fund)) %>% \n  group_by(fund, fund_name) %>%  \n  summarize(count = n(), Receipts = sum(receipts, na.rm = TRUE)) %>% \n  unique() %>% \n  drop_na()\n\n# 19 revenue funds were in FY22 revenue data that were not in past data \n\n# some could be small fund name changes\n\nanti_join(funds22, funds_past, by = c(\"fund\", \"fund_name\")) %>% arrange(fund)\n\n\n\n\n  \n\n\n\nCode\nsources_past <- allrevfiles22  %>% \n  filter(fy < 2022) %>% \n  mutate(source == as.character(source)) %>% \n  group_by(source, source_name) %>% \n  summarize(count = n(), Receipts = sum(receipts, na.rm = TRUE))  %>% \n  drop_na()\n\nsources22 <- allrevfiles22  %>% \n  filter(fy == 2022) %>% \n  mutate(source == as.character(source)) %>% \n  group_by(source, source_name) %>%  \n  summarize(count = n(), Receipts = sum(receipts, na.rm = TRUE)) %>% \n  unique()\n\n# 20 revenue sources were in FY22 data that were not in past data \n\n# some could be small source name changes:\n\nanti_join(sources22, sources_past, by = c(\"source\", \"source_name\")) %>% arrange(source)\n\n\n\n\n  \n\n\n\nSources 2737 through 2756 were not found in the IOC_source file so I added them to ioc_source_updated22_AWM.xlsx. Revenue source types were found manually using the Comptroller’s website and searching for each source listed above and identifying its type. Then the ioc_source excel file was updated to include the revenue type (Completed Jan. 20 2023, AFTER the FY22 paper totals were calculated. There were very minor differences in aggregated expenditures and revenues.) ioc_source_updated22_AWM.xlsx will become the generic ioc_source.xlsx file in the future.\n\n\n1.0.3 Recoding New and Reused Funds\nNew funds will need to be manually added to the funds_ab_in excel file and determined if they should or should not be included in Fiscal Future calculations.\nFor funds that were reused once, a 9 replaces the 0 as the first digit. If reused twice, then the first two values are 10.\n\nEx. 0350 --> 9350 because its use changed.\nEx. 0367 becomes 10367 because its use has changed twice now. There was fund 0367 originally, then its use changed and it was recoded as 9367, and now it changed again so it is a 10367.\nExcel file also has alternative ways to name funds (e.g. 0397-A and 0397-B) and variables for the year that the fund stopped being used. These have not been updated consistently over the years but it is useful information when trying to find any coding mistakes from the past.\n\nNew or reused funds revenue file recoding:\n\n# if first character is a 0, replace with a 9 if its purpose has changed\n\nrev_1998_2022 <- allrevfiles22 %>%\n\n      mutate(fund = ifelse(fy < 2002 & fund %in% c(\"0730\", \"0241\", \"0350\", \"0367\", \"0381\", \"0382\", \"0526\", \"0603\", \"0734\", \"0913\", \"0379\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n  \n  mutate(fund = ifelse (fy < 2008 & fund %in% c(\"0027\", \"0033\", \"0037\", \"0058\", \"0062\", \"0066\", \"0075\", \"0083\", \"0116\", \"0119\", \"0120\", \"0122\", \"0148\", \"0149\", \"0157\", \"0158\", \"0166\", \"0194\", \"0201\", \"0209\", \"0211\", \"0217\", \"0223\", \"0231\", \"0234\", \"0253\", \"0320\", \"0503\", \"0505\", \"0512\", \"0516\", \"0531\", \"0532\", \"0533\", \"0547\", \"0563\", \"0579\", \"0591\", \"0606\", \"0616\", \"0624\", \"0659\", \"0662\", \"0665\", \"0676\", \"0710\", \n\n\"0068\", \"0076\", \"0115\", \"0119\", \"0168\", \"0182\", \"0199\", \"0241\", \"0307\", \"0506\", \"0509\", \"0513\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund = ifelse(fy < 2016 & fund %in% c(\"0263\", \"0399\", \"0409\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund =  ifelse(fy < 2017 & fund == \"0364\", str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund =  ifelse(fy < 2018 & fund %in% c(\"0818\", \"0767\", \"0671\", \"0593\", \"0578\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n\n  mutate(fund = ifelse(fy>1999 & fy < 2018 & fund == \"0231\", \"10231\", fund) ) %>%\n  \n\n  mutate(fund = ifelse(fy < 2019 & fund %in% c(\"0161\", \"0489\", \"0500\", \"0612\", \"0893\", \"0766\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund =  ifelse(fy < 2020 & fund %in% c(\"0254\", \"0304\", \"0324\", \"0610\", \"0887\", \"0908\", \"0939\", \"0968\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund =  ifelse(fy < 2021 & fund %in% c(\"0255\", \"0325\", \"0348\", \"0967\", \"0972\"), str_replace(fund, \"0\",\"9\"), fund) ) %>%\n  \n   #2022 changes\n\n  mutate(fund = ifelse(fy < 2022 & fund %in% c(\"0110\",\"0165\",\"0351\", \"0392\", \"0393\", \"0422\", \"0544\", \"0628\", \"0634\",  \"0656\", \"0672\", \"0683\", \"0723\", \"0742\", \"0743\"), str_replace(fund, \"0\",\"9\"), as.character(fund))) %>%  # replaces first 0 it finds with a 9\n\n  mutate(fund = ifelse(fy < 2022 & fund == \"0367\", \"10367\", as.character(fund)) # fund reused for 3rd time\n\n)\n\nFor 2022, new funds included The Essential Government Services fund, Electric Vehicle Rebate, Budget Stabilization fund, and more. New funds were added to the funds_ab_in.xlsx file and recoded funds were addressed in the code chunks below and updated in the same excel file.\nExpenditure recoding:\n\n\nCode\n# if first character is a 0, replace with a 9\n\nexp_1998_2022 <- allexpfiles22 %>%\n\n      mutate(fund = ifelse(fy < 2002 & fund %in% c(\"0730\", \"0241\", \"0350\", \"0367\", \"0381\", \"0382\", \"0526\", \"0603\", \"0734\", \"0913\", \"0379\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund = ifelse(fy < 2008 & fund %in% c(\"0027\", \"0033\", \"0037\", \"0058\", \"0062\", \"0066\", \"0075\", \"0083\", \"0116\", \"0119\", \"0120\", \"0122\", \"0148\", \"0149\", \"0157\", \"0158\", \"0166\", \"0194\", \"0201\", \"0209\", \"0211\", \"0217\", \"0223\", \"0231\", \"0234\", \"0253\", \"0320\", \"0503\", \"0505\", \"0512\", \"0516\", \"0531\", \"0532\", \"0533\", \"0547\", \"0563\", \"0579\", \"0591\", \"0606\", \"0616\", \"0624\", \"0659\", \"0662\", \"0665\", \"0676\", \"0710\", \n\n\"0068\", \"0076\", \"0115\", \"0119\", \"0168\", \"0182\", \"0199\", \"0241\", \"0307\", \"0506\", \"0509\", \"0513\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n  \n  mutate(fund = ifelse(fy < 2016 & fund %in% c(\"0263\", \"0399\", \"0409\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund =  ifelse(fy < 2017 & fund == \"0364\", str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund =  ifelse(fy < 2018 & fund %in% c(\"0818\", \"0767\", \"0671\", \"0593\", \"0578\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund = ifelse(fy>1999 & fy < 2018 & fund == \"0231\", \"10231\", fund) ) %>%\n  \n  mutate(fund = ifelse(fy < 2019 & fund %in% c(\"0161\", \"0489\", \"0500\", \"0612\", \"0893\", \"0766\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund =  ifelse(fy < 2020 & fund %in% c(\"0254\", \"0304\", \"0324\", \"0610\", \"0887\", \"0908\", \"0939\", \"0968\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund =  ifelse(fy < 2021 & fund %in% c(\"0255\", \"0325\", \"0348\", \"0967\", \"0972\"), str_replace(fund, \"0\",\"9\"), fund))  %>%\n  \n  #2022 changes\n  mutate(fund = ifelse(fy < 2022 & fund %in% c(\"0110\",\"0165\",\"0351\", \"0392\", \"0393\", \"0422\", \"0544\", \"0628\", \"0634\",  \"0656\", \"0672\", \"0683\",\"0723\", \"0742\", \"0743\"), str_replace(fund, \"0\",\"9\"), as.character(fund))) %>%  # replaces first 0 it finds with a 9\n\n  mutate(fund = ifelse(fy < 2022 & fund == \"0367\", \"10367\", as.character(fund)) # fund reused for 3rd time \n\n  )\n\n\nThe funds_ab_in.xlsx file contains all funds that have existed since 1998, if they still exist, indicates if fund numbers have been reused for varying purposes, and is updated yearly with new fund numbers used by the IOC.\n\n\nCode\nfunds_ab_in_2022 = readxl::read_excel(\"C:/Users/aleaw/OneDrive/Documents/PhD Fall 2021 - Spring 2022/Merriman RA/Fiscal Futures FY2022/Replication-Files/funds_ab_in_2022.xlsx\")\n\nexp_temp <- exp_1998_2022 %>% \n  arrange(fund, fy) %>%\n  filter(expenditure != 0) %>%             # keeps everything that is not zero\n# join  funds_ab_in_2021  to exp_temp\n left_join(funds_ab_in_2022, by = \"fund\")  # matches most recent fund number \n\n\n# Agency == 799 for Statutory transfers \n#  Object == 1993 is for Interfund cash transfers  \nexp_temp <- exp_temp %>% \n  mutate(transfer = ifelse(org_name == \"TRANSFERS\", 1, 0),\n         trans_agency = ifelse(org_name == \"TRANSFERS\", str_sub(obj_seq_type,1,3), trans_agency),\n         trans_type = ifelse(org_name == \"TRANSFERS\", str_sub(obj_seq_type,4,9), trans_type)\n\n         )\n\n\n\nthe initial combined years of data are saved as dataframes named exp_1998_2022 and rev_1998_2022. These are then saved as exp_temp and rev_temp while recoding variables. This is BEFORE category groups are created and cleaned below. exp_temp and rev_temp are only temporary files; do not use for aggregating totals yet!\n\nUpdate Agencies: Some agencies have merged with others or changed names over time.\n\n\nCode\n# recodes old agency numbers to consistent agency number\nexp_temp <- exp_temp %>% \n\n  mutate(agency = case_when(\n\n    (agency==\"438\"| agency==\"475\" |agency == \"505\") ~ \"440\",\n    # financial institution &  professional regulation &\n     # banks and real estate  --> coded as  financial and professional reg\n\n    agency == \"473\" ~ \"588\", # nuclear safety moved into IEMA\n\n    (agency ==\"531\" | agency ==\"577\") ~ \"532\", # coded as EPA\n\n    (agency ==\"556\" | agency == \"538\") ~ \"406\", # coded as agriculture\n\n    agency == \"560\" ~ \"592\", # IL finance authority (fire trucks and agriculture stuff)to state fire marshal\n\n    agency == \"570\" & fund == \"0011\" ~ \"494\",   # city of Chicago road fund to transportation\n    TRUE ~ (as.character(agency)))) \n\n\nFor aggregating revenue, use the rev_1998_2022 dataframe, join the funds_ab_in_2022 file to it, and then join the ioc_source_type file to the dataset. Remember: You need to update the funds_ab_in and ioc_source_type file every year!\n\n# fund info to revenue for all years\n\nrev_temp <- inner_join(rev_1998_2022, funds_ab_in_2022, by = \"fund\") %>% arrange(source)\n\n# need to update the ioc_source_type file every year! \n\nioc_source_type <- readxl::read_xlsx(\"C:/Users/aleaw/OneDrive/Documents/PhD Fall 2021 - Spring 2022/Merriman RA/Fiscal Futures FY2022/Replication-Files/ioc_source_updated22_AWM.xlsx\")\n\nrev_temp <- left_join(rev_temp, ioc_source_type, by = \"source\")\n# automatically used source, source name does not match for the join to work using source_name\n\n# recodes old agency numbers to consistent agency number\nrev_temp <- rev_temp %>% \n\n  mutate(agency = case_when(\n    (agency==\"438\"| agency==\"475\" |agency == \"505\") ~ \"440\", # financial institution &  professional regulation &\n     # banks and real estate  --> coded as  financial and professional reg\n\n    agency == \"473\" ~ \"588\", # nuclear safety moved into IEMA\n    (agency ==\"531\" | agency ==\"577\") ~ \"532\", # coded as EPA\n    (agency ==\"556\" | agency == \"538\") ~ \"406\", # coded as agriculture\n    agency == \"560\" ~ \"592\", # IL finance authority (fire trucks and agriculture stuff)to state fire marshal\n    agency == \"570\" & fund == \"0011\" ~ \"494\",   # city of Chicago road fund to transportation\n\n    TRUE ~ (as.character(agency))))\n\n\n\nCode\nwrite_csv(rev_temp, file = \"rev_temp.csv\")\n\nwrite_csv(exp_temp, file = \"exp_temp.csv\")"
  },
  {
    "objectID": "FedMoneyReceived.html#comptroller-revenue-data",
    "href": "FedMoneyReceived.html#comptroller-revenue-data",
    "title": "2  Federal COVID Money Received",
    "section": "2.1 Comptroller Revenue Data",
    "text": "2.1 Comptroller Revenue Data\nSankeyattempt2022.csv file totals $32 billion flowing into the state. $3.5 came in FY20, $12.6 billion came in FY21 and $16.1 billion in FY22.\nThese observations are based more on the IOC revenue data for revenue received instead of the covidmoneytracker.org data for revenue committed.\n\n\n\nCode\nsankeydata <- read_csv(\"sankeyattempt2022.csv\") %>% filter(StFund == \"Total\")\n\nsankeydata2 <- sankeydata %>% select(Federal, FF_Cat, StateFunds, StFund, Expenditures, value, Notes) %>%\n  filter(StFund == \"Total\") %>%\n  mutate(StateFunds = factor(StateFunds, levels = c(\"Total_received_fy20\",\"Total_received_fy21\", \"Total_received_fy22\")),\n                  Federal = as.factor(Federal),\n                  Expenditures = factor(Expenditures, levels = c(\"Community Development\", \"Transit\", \"Public Health\", \"Medicaid\", \"K-12\", \"Federal Other\")),\n         Notes = factor(Notes, levels = c(\"CARES\", \"CRRSA\", \"ARPA\", \"Other *\")))\n\nsankey4 <- sankeydata2\n\nggplot(sankey4, \n       aes(y = value, \n           axis3 = Federal, axis2 = StateFunds, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = Notes), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n  theme(legend.position = \"bottom\") + \n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  ggtitle(\"$32 billion recieved according to IOC Revenue data\")\n\n\n\n\n\nCode\nggplot(sankey4, \n       aes(y = value, \n           axis3 = Federal, axis2 = StateFunds, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Notes), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n  theme(legend.position = \"bottom\") + \n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  ggtitle(\"$32 billion recieved according to IOC Revenue data\")\n\n\n\n\n\n\n\nCode\nsankey4 %>% #group_by(StateFunds) %>% \n  summarize(sum=sum(value))\n\nsankey4 %>% group_by(Federal) %>% \n  summarize(sum=sum(value))\n\nsankey4 %>% group_by(StateFunds) %>% \n  summarize(sum=sum(value))\n\nsankey4 %>% group_by(Expenditures) %>% \n  summarize(sum=sum(value))\n\nsankey4 %>% group_by(Notes) %>% \n  summarize(sum=sum(value))\n\nsankey4 %>% group_by(StateFunds, Expenditures) %>% \n  summarize(sum=sum(value))\n\nsankey4 %>% group_by(FF_Cat) %>% \n  summarize(sum=sum(value))\n\nsankey4 %>% group_by( Notes, Federal, StateFunds, FF_Cat) %>% \n  summarize(sum=sum(value))\n\n\n\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n\n\nGraph below shows same amount in federal COVID dollars but here color indicates the fund that the money was received in\n\n\nCode\nsankeydata <- read_csv(\"sankeyattempt2022.csv\") %>% filter(StFund == \"Total\")\n\nsankey <- sankeydata %>% select(Federal, StateFunds, StFund, Expenditures, stfundname, value, Notes) %>%\n  mutate(StateFunds = factor(StateFunds, levels = c(\"Total_received_fy20\", \"Total_received_fy21\", \"Total_received_fy22\")),\n         stfundname = as.factor(stfundname),\n         Federal = as.factor(Federal),\n         \n                   Expenditures = factor(Expenditures, levels = c(\"Transit\", \"Medicaid\", \"Public Health\",  \"K-12\", \"Federal Other\", \"Community Development\")),\n         Notes = factor(Notes, levels = c( \"Other *\", \"CARES\",\"CRRSA\", \"ARPA\")))\n\n\nggplot(sankey, \n       aes(y = value, axis3 = Federal, axis2 = stfundname, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = stfundname), color = \"black\",reverse=FALSE) +\n  guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +  \n  theme(legend.position=\"bottom\") +\n\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  ggtitle(\"Expenditures using Federal Relief Funds\")\n\n\n\n\n\nHighlights legislation, fund money went into, and its purpose.\n\n\nCode\n# ggplot(sankey, \n#        aes(y = value, axis3 = Notes, axis2 = stfundname, axis1=Expenditures, label = \"stratum\")) +\n#   geom_flow(aes(fill = stfundname), color = \"black\",reverse=FALSE) +\n#   geom_stratum(reverse=FALSE)+\n# coord_flip()+\n#    scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n#   theme_void() +\n# theme(legend.position=\"bottom\") +\n#   ggtitle(\"No labels\")\n\n\nggplot(sankey, \n       aes(y = value, axis3 = Notes, axis2 = stfundname, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = stfundname), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n  theme(legend.position=\"bottom\") +\n\n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2,reverse=FALSE)\n\n\n\n\n\n\n\nCode\nsankeydata <- read_csv(\"sankeyattempt2022.csv\")\n\nsankey <- sankeydata %>% select(Federal, StateFunds, StFund, Expenditures, stfundname, value, Notes) %>%\n    filter(StFund == \"Total\") %>%\n\n  mutate(StateFunds = factor(StateFunds, levels = c(\"Total_received_fy20\", \"Total_received_fy21\", \"Total_received_fy22\")),\n         stfundname = as.factor(stfundname),\n         Federal = as.factor(Federal),\n         \n                   Expenditures = factor(Expenditures, levels = c(\"Community Development\", \"Public Health\", \"Medicaid\", \"K-12\", \"Federal Other\", \"Transit\")),\n         Notes = factor(Notes, levels = c(  \"CARES\", \"Other *\",\"CRRSA\", \"ARPA\")))\n\n\nggplot(sankey, \n       aes(y = value, \n           axis3 = Notes, axis2 = StateFunds, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = stfundname), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n  theme(legend.position=\"bottom\") +\n\n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse = FALSE)\n\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote: CARES funds were originally received and spent in Disaster Response & Recovery Fund. In FY22, unspent aid was transferred to the State CURE and then transferred again to state agencies for COVID-related expenditures. Remaining CARES funds were transferred to State CURE fund for FY22. $337 million was also transferred from the Illinois Department of Revenue into the Illinois Housing Development Authority (IHDA). (LBOC June 2021 Report).\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nRevenue from Local Cure is the Local Government Transfers. A small amount of the State CURE was also transferred to local governments ($240 million in FY2021). There was also $700 million ARPA State CURE funds transferred to local governments.\n\n\n\n\n\nCode\nsankey %>%\n  summarize(sum=sum(value))\n\nsankey %>% group_by(StateFunds) %>% \n  summarize(sum=sum(value))\n\nsankey %>% group_by(Expenditures) %>% \n  summarize(sum=sum(value))\n\nsankey %>% group_by(Notes) %>% \n  summarize(sum=sum(value))\n\nsankey %>% group_by(StateFunds, Expenditures) %>% \n  summarize(sum=sum(value))\n\n\n\n\n  \n\n  \n\n  \n\n  \n\n  \n\n\n\nggsankey info and example\n\nA little information on Sankey graphs is below:\n\nThe axis is how the observations are grouped at each step. There are multiple axes.\nStrata are the options that exist for each level. (e.g. Year received can be 2021 or 2022)\nAlluvium correspond to the fixed value of each axis variable. Proportional to how the sum of however you are grouping your data.\nFlows are the segments of the alluvia between adjacent axes."
  },
  {
    "objectID": "FedMoneyReceived.html#covid-money-tracker-data",
    "href": "FedMoneyReceived.html#covid-money-tracker-data",
    "title": "2  Federal COVID Money Received",
    "section": "2.2 COVID Money Tracker Data",
    "text": "2.2 COVID Money Tracker Data\nRead the charts from the top to the bottom. Most of the graphs below begin with either the year the money was committed or the name of the Law that provided the funds and then shows it flowing down to either who received the money or how it was spent.\nData was downloaded from COVIDMoneyTracker.org for the State of Illinois. Values reflect the amount committed and not all funds have been disbursed yet. It does not include aid for households or loans to businesses. Data file is named federalcoviddollars.xlsx in Github page used to create this website.\n\nThe graphs below focus on when the money from each Federal Act arrived and where it was received (local governments, the State government, or directly to a state department) and the spending category that it would be considered using the Fiscal Futures categorization. The State government received $11.7 billion, state departments received $31.4 billion, and local governments received $8.9 billion between FY 2020 and FY 2022. Not all funds have been distributed by the federal government, but they have been committed on the federal level and allocated on the state level.\nLocal Governments within Illinois received an additional $8.9 billion for economic recovery but we do not include funds given straight to localities in our State COVID recovery fund calculations or Fiscal Gap analysis.\nLegislation total funds (when including local government aid) were: ARPA = $25.6 Billion; CARES = $15.7 Billion; Families First = $4.5 Billion; PPP & Health Care = $2.8 Billion; Response & Relief = $3.4 Billion.\n\nAdditional labels were added using Publisher to create the image above. Preliminary graphs and summed values for the image are calculated in the code chunk below:\n\n\nCode\nsankeydata <- read_excel(\"federalcoviddollars.xlsx\")\nsankey <- sankeydata %>% \n  #select(Federal, StateFunds, StFund, Expenditures, stfundname, value, Notes) %>%\n  #  filter(StFund == \"Total\") %>%\n\n  mutate(StateFunds = factor(FY, levels = c( \"FY20\", \"FY21\", \"FY22\")),\n        Legislation2 = factor(Legislation2, levels = c( \"Other\", \"CARES\", \"CRRSA\", \"ARPA\")),\n                              Legislation1 = factor(Legislation, levels = c( \"Families First\", \"CARES\", \"PPP & Health Care\", \"Response & Relief\", \"ARPA\"))\n)\n         \n                 #  Expenditures = factor(Expenditures, levels = c(\"Community Development\", \"Public Health\", \"Medicaid\", \"K-12\", \"Federal Other\", \"Transit\")),\n      #   Notes = factor(Notes, levels = c(  \"CARES\", \"Other *\",\"CRRSA\", \"ARPA\")))\n\n\nggplot(sankey, \n       aes(y = `Dollars Received`, axis3 = FY, axis2 = `Broad Category`, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Legislation), color = \"black\", reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n     geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n    theme(legend.position = \"bottom\")+\n  ggtitle(\"$52 Million Federal COVID Relief to Illinois over 3 years\")\n\n\n\n\n\nCode\n#switches fiscal Year and Broad Category. Not as helpful. \n\n# ggplot(sankey, \n#        aes(y = `Dollars Received`, axis2 = FY, axis3 = `Broad Category`, axis1=FF_Cat2, label = \"stratum\")) +\n#   geom_flow(aes(fill = Legislation), color = \"black\", reverse=FALSE) +\n#  # guides(fill = FALSE) +   \n#   geom_stratum(reverse=FALSE)+\n# coord_flip()+\n#    scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n#   theme_void() +\n#      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n#     theme(legend.position = \"bottom\")+\n#   ggtitle(\"$52 Million Federal COVID Relief to Illinois over 3 years\")\n\n\nsankey %>% group_by(FY) %>% summarize(sum=sum(`Dollars Received`))\n\n\n\n\n  \n\n\n\nCode\nsankey %>% group_by(Legislation) %>% summarize(sum=sum(`Dollars Received`))\n\n\n\n\n  \n\n\n\nCode\nsankey %>% group_by(`Broad Category`) %>% summarize(sum=sum(`Dollars Received`))\n\n\n\n\n  \n\n\n\nCode\nsankey %>% group_by(Legislation, FF_Cat2) %>% summarize(sum=sum(`Dollars Received`))\n\n\n\n\n  \n\n\n\nCode\nsankey %>% group_by(FF_Cat2) %>% summarize(sum=sum(`Dollars Received`))\n\n\n\n\n  \n\n\n\nCode\nsankey %>% group_by(Legislation, `Broad Category`,FF_Cat2) %>% summarize(sum=sum(`Dollars Received`))\n\n\n\n\n  \n\n\n\nCode\nsankey %>% group_by(FY, FF_Cat2) %>% summarize(sum=sum(`Dollars Received`)) %>% pivot_wider(names_from=\"FY\", values_from = sum)\n\n\n\n\n  \n\n\n\nIllinois received $11.7 billion dollars from State Fiscal Recovery Funds and $31.4 billion in other federal revenue to state departments. This other federal revenue frequently came in the form of increased or new grants to many State Departments that normally receive federal funding.\n\n2.2.0.1 Totals Without Local Government Funds\nBelow is a graph showing federal stimulus money that was received in each year, the federal agency/fund that it came from, and what kind of revenue it was considered (Federal Other, transportation, or medicaid) who received the money (e.g. the State of Illinois, Department of Human Services, Local Governments, etc.). Again, these graphs show the funds that were received and their intended purpose, NOT the data on how or when it was spent.\nWhen Local Funds are included, $15.7 billion was received in FY20, $7.24 billion in FY21, and $29 billion was received in FY22 from multiple COVID response Federal Acts.\nAround $43 billion went to the state and $8.8 billion went to straight to local governments. When excluding the money that went straight to local governments, the state received $12.7 billion in FY20 (CARES Act), $7.24 billion in FY21, and $23 billion was committed in FY22 (ARP Act). This includes both State CURE funds that had more flexibility in how they were spent as well as the grants and that went to State Departments for specific purposes.\nThe code below creates same graph as above but funds that went straight to Local Governments (cities and counties) are dropped from the totals.\n\n\nCode\nsankey %>% \n  filter(FF_Cat2!= \"Excluded\") %>%\n\n  ggplot(aes(y = `Dollars Received`, axis3 = FY, axis2 = `Broad Category`, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Legislation), color = \"black\", reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n     geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n    theme(legend.position = \"bottom\")+\n  ggtitle(\"Without Local government relief:\n          State Received $12.7 Billion in FY20, $7 Billion in FY21, and $23 Billion in FY22\")\n\n\n\n\n\nCode\nsankey %>% filter(FF_Cat2!= \"Excluded\") %>%\n  ggplot(aes(y = `Dollars Received`, axis4 = FY, axis3= `Category`,  axis1=FF_Cat2\n          # , label = \"stratum\"\n           )) +\n  geom_flow(aes(fill = Legislation, label = \"flow\"), \n            color = \"black\", reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\n     geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), \n               size = 2, reverse=FALSE)+\n  coord_flip()+\n  scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n  theme(legend.position = \"bottom\")+\n  ggtitle(\"Without Local government relief:\n          State Received $12.7 Billion in FY20, $7 Billion in FY21, and $23 Billion in FY22\")\n\n\n\n\n\n\n\nCode\nsankey %>% group_by(FY)%>%summarize(TotalReceived=sum(`Dollars Received`))\n\nsankey %>% group_by(Legislation)%>%summarize(TotalReceived=sum(`Dollars Received`))\n\n\nsankey %>% group_by(Recipient)%>%summarize(TotalReceived=sum(`Dollars Received`))\n\nsankey %>% group_by(FF_Cat)%>%summarize(TotalReceived=sum(`Dollars Received`))\n\nsankey %>% group_by(Legislation, Recipient)%>%summarize(TotalReceived=sum(`Dollars Received`)) %>% pivot_wider(names_from = Legislation, values_from = TotalReceived)\n\nsankey %>% group_by(Legislation, FF_Cat)%>%summarize(TotalReceived=sum(`Dollars Received`)) %>% pivot_wider(names_from = Legislation, values_from = TotalReceived)\n\nsankey %>% group_by(FY, FF_Cat)%>%summarize(TotalReceived=sum(`Dollars Received`)) %>% pivot_wider(names_from = FY, values_from = TotalReceived)\n\nsankey %>% filter(FF_Cat2 != \"Excluded\") %>% group_by(FY)%>%summarize(TotalReceived=sum(`Dollars Received`))\n\nsankey %>% group_by(Legislation, FF_Cat2)%>%summarize(TotalReceived=sum(`Dollars Received`)) %>% pivot_wider(names_from = Legislation, values_from = TotalReceived)\n\nsankey %>% group_by(FY, FF_Cat2)%>%summarize(TotalReceived=sum(`Dollars Received`)) %>% pivot_wider(names_from = FY, values_from = TotalReceived)"
  },
  {
    "objectID": "FedMoneyReceived.html#state-expenditure-graphs",
    "href": "FedMoneyReceived.html#state-expenditure-graphs",
    "title": "2  Federal COVID Money Received",
    "section": "2.3 State Expenditure Graphs",
    "text": "2.3 State Expenditure Graphs\nFederal expenditures from CURE and other major funds . Uses the fedCUREexpenditures.xlsx file.\nThis data comes from Illinois Comptroller expenditure data, Legislative Budget Oversight Commission (LBOC) Reports, and the ARPA Annual Recovery Plan detailing the State’s use of State and Local Fiscal Recovery Funds (SLFRF) which is prepared by the Governor’s Office of Management and Budget (GOMB).\nThe graphs below do not include FY23 allocations for federal funds. Dates on top are Fiscal Year received. Dates in the middle of the graph are Fiscal Year expenditures. Remember, federal funds for COVID recovery have been received and spent in different years.\nBetween FY20 and FY22, 12.2 billion in State CURE and ESSER funds hav been spent by the state.\nSo far, over $7.6 billion of the State CURE funds (from CARES and ARP Act) have been spent. In FY22, $4.9 billion ARPA dollars were spent\n\n\nCode\ncure_exp <- read_xlsx(\"fedCUREexpenditures.xlsx\")\n\ncure_exp <- cure_exp %>%\n  # keeps data until FY22\n  filter(FY_Spent <2023) %>%\n  \n  mutate(\n         FY_Spent = factor(FY_Spent, levels = c(\"2020\", \"2021\", \"2022\", \"2023+\")),\n         FY_Received = factor(FY_Received, levels = c(\"2020\", \"2021\", \"2022\")),\n         FF_Cat = factor(FF_Cat, levels = c(\"Econ Dev\", \"Human Services\", \"K-12\", \"Local Transfers\", \"Public Health\", \"Medicaid\", \"Public Safety\", \"Lost Revenue\", \"UI Fund\", \"FY23+\")))\n\n\ncure_exp%>% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\ncure_exp %>% \n  group_by(FY_Received)%>% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\ncure_exp %>% \n  group_by(`FY_Spent`)%>% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\ncure_exp %>% \n  group_by(`Federal Funds`)%>% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\ncure_exp %>% \n  group_by(State_local2)%>% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\ncure_exp %>% \n  group_by(`FF_Cat`)%>% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\ncure_exp %>% \n  group_by(Law)%>% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\ncure_exp %>% \n  group_by(Law, FY_Spent, FF_Cat)%>% \n  summarize(Expenditures=sum(`FY Expenditures`)) %>%\n  pivot_wider(names_from = FY_Spent, values_from = Expenditures) \n\n\ncure_exp %>% \n  group_by(Law, FY_Received)%>% \n  summarize(Expenditures=sum(`FY Expenditures`)) %>%\n  pivot_wider(names_from = Law, values_from = Expenditures) %>% arrange(FY_Received)\n\ncure_exp %>% \n  group_by(Law, FY_Spent)%>% \n  summarize(Expenditures=sum(`FY Expenditures`)) %>%\n  pivot_wider(names_from = Law, values_from = Expenditures) %>% arrange(FY_Spent)\n\n\n\n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n\n\n\n\n\nCode\ncure_exp %>% \n  filter(State_local == \"State CURE\") %>%\n  ggplot(aes(y = `FY Expenditures`, axis4 = FY_Received, axis3 = `Agency`,  axis2 = FY_Spent, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n    theme(legend.position=\"bottom\")+\n\n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  labs(title = \"Expenditures using State CURE funds\", subtitle = \"Year Received by State Department, Year Spent, and how it was spent so far\", caption = \"Expenditures occured during FY21 and FY22. \n       Additional funds will continue to be spent in FY23-FY26.\")\n\n\n\n\n\nMajor uses of the State CURE funds include $2.7 billion for repaying the unemployment insurance trust fund deficit, $1 billion was transferred to general revenue to make up for lost revenue during the pandemic, $2.34 billion has gone towards economic development and recovery, $1.87 billion to human services, $1.9 billion to K-12 education.\n\n\nCode\n# Year Spent, Agency received, FF Spending Category \nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis3 = FY_Spent, axis2 = Agency, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n geom_text(stat = \"stratum\", label.strata = TRUE, reverse=FALSE) + \n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  theme_void() + \n  theme(legend.position=\"bottom\")+\n  ggtitle(\"CURE & ESSER $12.2 Billion Spent in FY21 & FY22: \n          Year Spent, Agency that Spent it & FF Spending Category\")\n\n\n\n\n\nCode\n# Switch Year Spent & Agency received, FF Spending Category \n# ggplot(cure_exp, \n#        aes(y = `FY Expenditures`, axis3 = Agency, axis2 = FY_Spent , axis1=FF_Cat, label = \"stratum\")) +\n#   geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n#   geom_stratum(reverse=FALSE)+\n#  geom_text(stat = \"stratum\", label.strata = TRUE, reverse=FALSE) + \n#   coord_flip()+\n#    scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n#         geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n#   theme_void() + \n#     theme(legend.position=\"bottom\")+\n# \n#   ggtitle(\"Same as above but Switched Axis 3 and 2: \n#           Agency received, Year Spent, FF Spending Category \")\n\n# ggplot(cure_exp, \n#        aes(y = `FY Expenditures`, axis3 = `Federal Funds`, axis2 = FY_Spent, axis1=Fund, label = \"stratum\")) +\n#   geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n#   geom_stratum(reverse=FALSE)+\n#  coord_flip()+\n#    scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n#   theme_void() + \n#         geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n#   theme(legend.position=\"bottom\")+\n# \n#   ggtitle(\"Expenditures: Federal Fund, Year Spent, and State Fund\")\n\nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis3 = `State_local2`, axis2 = Agency, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n  theme(legend.position=\"bottom\")+\n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  theme(legend.position=\"bottom\")+\n\n  labs(title = \"Expenditures: Department that Received Revenue & Purpose of Expenditure\", caption = \"State CURE, ESSER, and other grants to State Departments\")\n\n\n\n\n\nCode\n# ggplot(cure_exp, \n#        aes(y = `Agency_grouped`, axis3 = `State_local2`, axis2 = Agency, axis1=FF_Cat, label = \"stratum\")) +\n#   geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n#   geom_stratum(reverse=FALSE)+\n#  coord_flip()+\n#    scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n#   theme_void() + \n#   theme(legend.position=\"bottom\")+\n#         geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n#   theme(legend.position=\"bottom\")+\n# \n#   ggtitle(\"Same as above but y = Agency Grouped?\n#           Expenditures: Department that Received Revenue & How money was used\")\n\n# \n# ggplot(cure_exp, \n#        aes(y = `FY Expenditures`, axis3 = `State_local2`, axis2 = FY_Spent, axis1=FF_Cat, label = \"stratum\")) +\n#   geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n#   geom_stratum(reverse=FALSE)+\n#   coord_flip()+\n#    scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n#   theme_void() + \n#         geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n#   theme(legend.position = \"bottom\")+\n#   ggtitle(\"Expenditures: Funds from the State of Illinois or State Departments, \n#           Year Spent, and FF Expenditure Purpose\")\n\n\nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis3 = `State_local2`, axis2 = FY_Spent, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  theme(legend.position = \"bottom\")+\n  labs(title = \"Expenditures: Funds from the State of Illinois or State Departments, Year Spent, \n          & FF Expenditure Purpose\", caption = \"Using FF_Cat2 variable with Public Health and Safety Combined\")\n\n\n\n\n\nCode\n# ggplot(cure_exp, \n#        aes(y = `FY Expenditures`, axis3 = `State_local2`, axis2 = Fund, axis1=FF_Cat, label = \"stratum\")) +\n#   geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n#   geom_stratum(reverse=FALSE)+\n#   coord_flip()+\n#    scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n#   theme_void() + \n#         geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n#   theme(legend.position = \"bottom\")+\n#   ggtitle(\"Expenditures: Funds from the State of Illinois or State Departments, \n#           State Fund Name, and FF Expenditure Category\")\n\n\nThe graph below shows the year the money was received, the federal fund that it came from, the year that it was spent, and then how the money was used.\n\n\nCode\n#4 levels with labels\nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis4 = `FY_Received`,  axis3 = `Federal Funds`, axis2 = FY_Spent, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n    theme(legend.position=\"bottom\")+\n\n  ggtitle(\"Expenditures So far: Year Received, Federal Fund, Year Spent,\n          & How Money was Used\")\n\n\n\n\n\n\n$2.7 Billion spent in FY21 (from CARES)+ $9.5 billion spent in FY22 (remainder of CARES money, some of ARPA funds).\n\n\n2.3.1 State CURE Expenditures with FY2023 and beyond allocations\nGraphs below include how money has been spent in FY21 and FY22 with unspent funds labeled as FY2023+.\nThis image focuses on only the funds that came through the State and Local Fiscal Recovery Fund and a couple additional funds that came through different agencies but were received by the State of Illinois. Other Federal Revenue largely indicates the ESSER funds that were received by ISBE and were spent on K-12 education.\n\n$3.54 Billion received in FY20 for State Fiscal Recovery Fund (SFRF)+ $11.8 billion received in FY22 = $15.3 billion total expenditures and allocations included in this image.\nAround $10.8 billion has gone into the State CURE fund (Cornavirus Relief Funds (CRF) and SFRF into the State CURE fund) and another $4.5 billion was received by State Departments (mostly ISBE for K-12 )\nSo far, over $13 billion has been spent.\n\n$2.7 billion was spent in FY21 and $8.5 Billion was spent in FY22.\nThe remaining $2 Billion State CURE funds have been fully allocated and some have been spent already in FY23 ($500 million transferred to General Revenue for “Lost Revenue” during COVID disruption, remaining dollars on programs and services).\n\n\n\n\nCode\ncure_exp <- read_xlsx(\"fedCUREexpenditures.xlsx\")\n\ncure_exp <- cure_exp %>%\n #   filter(FY_Spent <2023) %>%\n\n  mutate(`Federal Funds` = factor(`Federal Funds`, levels = c(\"CRF\", \"SLFRF\", \"Other Fed Rev\")),\n         FY_Spent = factor(FY_Spent, levels = c(\"2020\", \"2021\", \"2022\", \"2023+\")),\n         FY_Received = factor(FY_Received, levels = c(\"2020\", \"2021\", \"2022\")),\n         FF_Cat = factor(FF_Cat, levels = c(\"Econ Dev\", \"Human Services\", \"K-12\", \"Local Transfers\", \"Public Health\", \"Medicaid\", \"Public Safety\", \"UI Fund\", \"Lost Revenue\", \"FY23+\"))\n        \n         )\n\n\n#5 levels with labels\nggplot(cure_exp, \n       aes(y = `FY Expenditures`,  axis6 = `Federal Funds`, axis5=State_local2, axis4 = `FY_Received`, axis3 = Agency, axis2 = FY_Spent, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n  theme(legend.position = \"bottom\")+\n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) + ggtitle(\"$15.3 Billion in Expenditures and Allocations\")\n\n\n\n\n\nCode\n#5 levels with labels\n\n\n# State CURE funds only\ncure_exp %>% filter(State_local2 == \"State\") %>%\nggplot(aes(y = `FY Expenditures`, axis4 = `FY_Received`,  axis3 = Agency, axis2 = FY_Spent, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n  theme(legend.position = \"bottom\")+\n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) + ggtitle(\"State CURE Only: $10.8 Billion in Expenditures and Allocations\")\n\n\n\n\n\nCode\n#4 levels with labels\nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis4 = `FY_Received`,  axis3 = `Federal Funds`, axis2 = FY_Spent, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n# geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), reverse=FALSE) + \n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) + ggtitle(\"$15.3 Billion in Expenditures and Allocations\")\n\n\n\n\n\nCode\nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis4 = `FY_Received`,  axis3 = `State_local2`, axis2 = FY_Spent, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) \n\n\n\n\n\nCode\nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis3 = `State_local2`, axis2 = FY_Spent, axis1=FF_Cat, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)\n\n\n\n\n\nCode\nggplot(cure_exp, \n       aes(y = `FY Expenditures`, axis3 = `State_local2`, axis2 = FY_Spent, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n# geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), reverse=FALSE) + \n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)\n\n\n\n\n\n\ncure_exp %>% group_by(FY_Received)%>% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n\n  \n\n\ncure_exp %>% group_by(`Federal Funds`)%>% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n\n  \n\n\ncure_exp %>% group_by(`FY_Spent`)%>% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n\n  \n\n\ncure_exp %>% group_by(`FF_Cat`)%>% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n\n  \n\n\ncure_exp %>% group_by(Law)%>% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n\n  \n\n\ncure_exp %>% \n  group_by(Law, FY_Received)%>% \n  summarize(Expenditures=sum(`FY Expenditures`)) %>%\n  pivot_wider(names_from = Law, values_from = Expenditures) %>% \n  arrange(FY_Received)\n\n\n\n  \n\n\ncure_exp %>% \n  group_by(Law, FY_Spent)%>% \n  summarize(Expenditures=sum(`FY Expenditures`)) %>%\n  pivot_wider(names_from = Law, values_from = Expenditures) %>% \n  arrange(FY_Spent)\n\n\n\n  \n\n\ncure_exp %>% summarize(Sum=sum(`FY Expenditures`))\n\n\n\n  \n\n\n\n\nNote: Increased Matching Grant and Medicare Continuous Coverage Requirement dollars all count as Federal Medicaid Revenue."
  },
  {
    "objectID": "FedMoneyReceived.html#revenue-expenditures-before-and-during-covid-response",
    "href": "FedMoneyReceived.html#revenue-expenditures-before-and-during-covid-response",
    "title": "2  Federal COVID Money Received",
    "section": "2.4 Revenue & Expenditures Before and During COVID Response",
    "text": "2.4 Revenue & Expenditures Before and During COVID Response\nLooking at Federal Revenue received right before and during the pandemic:\nAll revenue sources within “Federal - Other” source.\n\n\nCode\nrev_temp %>% \n  filter(rev_type == \"57\" & fy >2018) %>% \n  group_by(fund_name, source_name_AWM,  fy) %>% \n  summarize(receipts =sum(receipts)) %>% \n  arrange(fy, -receipts) %>% \n  pivot_wider(names_from = fy, values_from = receipts)\n\n\n\n\n  \n\n\n\nCode\nfed_rev_compare <- rev_temp %>% filter((rev_type == \"57\" | rev_type == \"58\" | rev_type == \"59\") & (fy == 2022 | fy==2021 | fy==2020 | fy == 2019)) %>%  arrange(-receipts)\n\nfed_rev_compare\n\n\n\n\n  \n\n\n\nCode\n# write_csv(fed_rev_compare, \"comparefedrev.csv\")\n\n\nrev_temp %>% filter(source_name_AWM == \"FEDERAL STIMULUS PACKAGE\") %>% group_by(fy, fund_name) %>% summarize(receipts =sum(receipts)) %>% arrange(-fy)\n\n\n\n\n  \n\n\n\nCode\nrev_temp %>% filter(fy > 2018 & source_name_AWM == \"FEDERAL STIMULUS PACKAGE\") %>% group_by(fund_name, fy) %>% summarize(receipts =sum(receipts)) %>% arrange(-receipts)\n\n\n\n\n  \n\n\n\nCode\nrev_temp %>% filter(rev_type == \"57\" & fy > 2018 & fund_name == \"SBE FEDERAL DEPT OF EDUCATION\") %>% group_by(source_name_AWM , fund_name, fy) %>% summarize(receipts =sum(receipts)) %>% arrange(-receipts)\n\n\n\n\n  \n\n\n\n\n\nCode\nexp_temp <- read_csv(\"exp_temp.csv\")\n\nexp_temp %>% filter(fy >2019 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\" | fund_name == \"SBE FEDERAL DEPT OF EDUCATION\" | fund_name == \"DISASTER RESPONSE AND RECOVERY\" | fund_name == \"ESSENTIAL GOVT SERV SUPPORT\" )) %>% group_by(fy, agency_name, wh_approp_name, fund_name) %>% \n  summarize(sum=sum(expenditure),\n            appropriated = sum(appn_net_xfer)) %>% \n  arrange(-appropriated)\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(fy >2019 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\" | fund_name == \"SBE FEDERAL DEPT OF EDUCATION\" | fund_name == \"DISASTER RESPONSE AND RECOVERY\" | fund_name == \"ESSENTIAL GOVT SERV SUPPORT\" )) %>% group_by(fy, wh_approp_name, fund_name) %>% \n  summarize(sum=sum(expenditure),\n            appropriated = sum(appn_net_xfer)) %>% \n  arrange(-appropriated)\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(fy >2019 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\" | fund_name == \"SBE FEDERAL DEPT OF EDUCATION\" | fund_name == \"DISASTER RESPONSE AND RECOVERY\" | fund_name == \"ESSENTIAL GOVT SERV SUPPORT\" )) %>% group_by(fund_name, fy, agency_name) %>% \n  summarize(sum=sum(expenditure),\n            appropriated = sum(appn_net_xfer)) %>% \n  arrange(-appropriated)\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(fy == 2022 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(org_name, agency_name, object, wh_approp_name, fund_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(fy == 2022 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(agency_name, object, wh_approp_name, fund_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(fy == 2022 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(fund_name, object, org_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(fy == 2022 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(fund_name, agency_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(fy == 2022 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(agency_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(fy == 2021 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %>% group_by(wh_approp_name, fund_name) %>% summarize(sum=sum(expenditure)) %>% arrange(-sum)"
  },
  {
    "objectID": "LocalTransfers.html",
    "href": "LocalTransfers.html",
    "title": "3  Local Transfers",
    "section": "",
    "text": "Separate transfers to local from parent agencies that come from DOR(492) or Transportation (494). Treats muni revenue transfers as expenditures, not negative revenue.\nThe share of certain taxes levied state-wide at a common rate and then transferred to local governments. (Purely local-option taxes levied by specific local governments with the state acting as collection agent are NOT included.)\nThe six corresponding revenue items are:\n\nLocal share of Personal Income Tax\n\nIndividual Income Tax Pass-Through New 2021 (source 2582).\n\nLocal share of General Sales Tax\nPersonal Property Replacement Tax on Business Income\nPersonal Property Replacement Tax on Public Utilities\nLocal share of Motor Fuel Tax\nTransportation Renewal Fund 0952\n\nUntil Dec 18. 2022, Local CURE was being aggregated into Revenue totals since the agency was the Department of Revenue. However the $371 million expenditure is for “LOC GOVT ARPA” and the revenue source that is Local CURE is also $371 million. Since it cancels out and is just passed through the state government, I am changing changing the fund_ab_in file so that in_ff=0 for the Local CURE fund. It also inflates the department of revenue expenditures in a misleading way when the expense is actually a transfer to local governments.\n\nDropping Local CURE fund from analysis results in a $371 million decrease in the department of Revenue (where the Local Government ARPA transfer money). The appropriation for it was over $740 million so some will probably be rolled over to FY23 too.\nIn the FY21 New and Reused Funds word document, 0325 Local CURE is described as “Created as a federal trust fund. The fund is established to receive transfers from either the disaster response and recovery fund or the state cure fund of federal funds received by the state. These transfers, subject to appropriation, will provide for the administration and payment of grants and expense reimbursements to units of local government. Revenues should be under Federal Other and expenditures under Commerce and Economic Opportunity.” - Changed to Exclude.\n\n\n\nCode\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(formatR)\nlibrary(lubridate)\nlibrary(smooth)\nlibrary(forecast)\nlibrary(scales)\nlibrary(kableExtra)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(quantmod)\nlibrary(geofacet)\nlibrary(janitor)\n\n\nknitr::opts_chunk$set(warning = FALSE, message = FALSE)\n\nexp_temp <- read_csv(\"exp_temp.csv\")\nrev_temp <- read_csv(\"rev_temp.csv\")\n\n\n\n\nCode\nexp_temp <- exp_temp %>% \n  mutate(\n    agency = case_when(\n      fund==\"0515\" & object==\"4470\" & type==\"08\" ~ \"971\", # income tax to local governments\n      \n      fund==\"0515\" & object==\"4491\" & type==\"08\" & sequence==\"00\" ~ \"971\", # object is shared revenue payments\n      \n      fund==\"0802\" & object==\"4491\" ~ \"972\", #pprt transfer\n      \n      fund==\"0515\" & object==\"4491\" & type==\"08\" & sequence==\"01\" ~ \"976\", #gst to local\n      \n      fund==\"0627\" & object==\"4472\"~ \"976\" , # public transportation fund but no observations exist\n      \n      fund==\"0648\" & object==\"4472\" ~ \"976\", # downstate public transportation, but doesn't exist\n      \n      fund==\"0515\" & object==\"4470\" & type==\"00\" ~ \"976\", # object 4470 is grants to local governments\n      \n      object==\"4491\" & (fund==\"0188\"|fund==\"0189\") ~ \"976\",\n      \n      fund==\"0187\" & object==\"4470\" ~ \"976\",\n      \n      fund==\"0186\" & object==\"4470\" ~ \"976\",\n      \n      object==\"4491\" & (fund==\"0413\"|fund==\"0414\"|fund==\"0415\")  ~ \"975\", #mft to local\n      fund == \"0952\"~ \"975\", # Added Sept 29 2022 AWM. Transportation Renewal MFT\n      TRUE ~ as.character(agency)),\n    \n    agency_name = case_when(\n      agency == \"971\"~ \"INCOME TAX 1/10 TO LOCAL\",\n      agency == \"972\" ~ \"PPRT TRANSFER TO LOCAL\",\n      agency == \"975\" ~ \"MFT TO LOCAL\",\n      agency == \"976\" ~ \"GST TO LOCAL\",\n      TRUE~as.character(agency_name))) %>% \n  mutate(group = ifelse(agency>\"970\" & agency < \"977\", as.character(agency), \"\"))\n\n\ntransfers_long <- exp_temp %>% \n  filter(group == \"971\" |group == \"972\" | group == \"975\" | group == \"976\")\n\n\n\n\nCode\ntransfers_long %>% \n  group_by(fy, group ) %>%\n  summarize(sum_expenditure = sum(expenditure)/1000000) %>%\n  pivot_wider(names_from = \"group\", values_from = \"sum_expenditure\", names_prefix = \"exp_\" )\n\n\n\n\n  \n\n\n\nCode\ntransfers_long %>% \n  group_by(agency_name, group, fy) %>% \n  summarize(expenditure = sum(expenditure, na.rm=TRUE) )%>% \n  ggplot() + \n  geom_line(aes(x=fy, y = expenditure, color=agency_name)) + \n  labs(title = \"Transfers to Local Governments\", caption = \"Data Source: Illinois Office of the Comptroller\")\n\n\n\n\n\nLarge increases in local transfers were driven by large increases in overall tax revenue collected by the state."
  },
  {
    "objectID": "Debt.html",
    "href": "Debt.html",
    "title": "4  Debt Service Discussion",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(formatR)\nlibrary(lubridate)\nlibrary(smooth)\nlibrary(forecast)\nlibrary(scales)\nlibrary(kableExtra)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(quantmod)\nlibrary(geofacet)\nlibrary(janitor)\n\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\n\nexp_temp <- read_csv(\"exp_temp.csv\") %>% \n  filter(agency != \"799\") \n\nrev_temp <- read_csv(\"rev_temp.csv\") %>% \n  filter(agency != \"799\")\n\n\nDebt Service expenditures include interest payment on both short-term and long-term debt. We do not include escrow or principal payments. Bond proceeds are not considered a revenue for the state.\nMethodological Change, Sept. 30 2022: We are no longer including short term principal payments as a cost; only interest on borrowing is a cost. Pre FY22 and the FY21 correction, we did include an escrow payment and principle payments as costs but not bond proceeds as revenues. This caused expenditures to be inflated because we were essentially counting debt twice - the principle payment and whatever the money was spent on in other expenditure categories, which was incorrect.\n\n4.0.1 Coding Details\nExpenditure Debt Objects:\n\n8811 is for principle payments EXCLUDE\n\nGeneral principle payments: obj_seq_type == 88110008\nShort term borrowing principle: obj_seq_type == 88110108\n\n8813 interest payments INCLUDE AS COST\n\nGeneral Obligation Bond Interest: obj_seq_type == 88130000 & 88130008\nInterest on short-term borrowing: 88130108\n\n8841 is for escrow payments EXCLUDE\n\nEscrow payment: obj_seq_type == 88410008\n\n8800 is for all capital projects debt service (e.g. Build Illinois Bonds, Civic Center) INCLUDE AS COST\n\nNote: debt principle and interest are both included in capital projects because they are combined in the data observations; bond proceeds are not considered a revenue source. Can’t include capital projects interest as easily as the GO bonds.\nBuild IL Bonds, capital projects principal AND interest (object ==8800)\n\nTollway fund 0455 EXCLUDE in debt cost\n\nEither filter out Tollway obj_seq_type == 88000055 or filter out fund == 0455 to remove tollway fund items from capital project debt service\n\n\n\n4.0.1.1 State Principal and Interest\nFiltering for interest on short term borrowing and GO bonds (88130008, 88130000, and 88130108) and GO bond principal amounts (88110008). Object == 8813 is for all debt service interest but obj_seq_type is used to specify short term borrowing versus regular debt service. An Interest to Principal ratio is also calculated in the table below.\nLooking only at general obligation principal payments and interest payments:\n\n\nCode\n# GO bond principal and GO bond interest\n\nGObond_debt <- exp_temp %>% \n  filter(obj_seq_type == \"88110008\" |obj_seq_type == \"88130000\" | obj_seq_type == \"88130008\") %>% \n  group_by(fy, obj_seq_type) %>% \n  summarize(sum = sum(expenditure, na.rm=FALSE)) %>% \n  pivot_wider(names_from = obj_seq_type, values_from = sum) %>% \n  mutate(principal = `88110008`,\n         interest = sum(`88130008`+`88130000`, na.rm = FALSE),\n         ratio = (as.numeric(interest)/as.numeric(principal)))\n\nGObond_debt %>% \n  select(principal, interest, ratio) %>%\n  mutate(across(principal:interest, ~format(., big.mark= \",\", scientific = F)))\n\n\n\n\n  \n\n\n\nCode\n# GObond_debt %>% ggplot() + \n#   geom_line(aes(x=fy, y=principal, color = \"Principal\"))+ \n#   geom_line(aes(x=fy, y=interest, color = \"Interest\")) + \n#   labs(title = \"General Obligation principal and interest payments\")\n\n\n\nGObond_debt %>% \n  ggplot() +   \n    geom_col(aes(x=fy, y=interest/1000000, fill = \"Interest\")) + \n    geom_col(aes(x=fy, y=principal/1000000, fill = \"Principal\"))+ \n    labs(title = \"Debt Service\", \n         subtitle = \"General Obligation Principal and Interest Payments\")\n\n\n\n\n\nLooking only at short term borrowing principal and interest payments:\n\n\nCode\n# short term borrowing, first observation is in 2004?\n\nshort_debt <- exp_temp %>% \n  filter(obj_seq_type == 88110108 |obj_seq_type == 88130108) %>% \n  group_by(fy, obj_seq_type) %>% \n  summarize(sum = sum(expenditure, na.rm=FALSE)) %>% \n  pivot_wider(names_from = obj_seq_type, values_from = sum) %>% \n  mutate(principal = `88110108`,\n         interest = `88130108`,\n         ratio = (as.numeric(interest)/as.numeric(principal)))\n\nshort_debt %>% select(principal, interest, ratio) %>%\n  mutate(across(principal:interest, ~format(., big.mark= \",\",  scientific = F)))\n\n\n\n\n  \n\n\n\nCode\nshort_debt %>% ggplot() + \n  geom_col(aes(x=fy, y=principal/1000000000, fill = \"Principal\"))+ \n  geom_col(aes(x=fy, y=interest/1000000000, fill = \"Interest\")) + \n  labs(title = \"Debt Service\", subtitle = \"Short Term Borrowing: Principal and Interest Payments\", y=\"Billions of Dollars\")\n\n\n\n\n\n\nWhen including short term borrowing and normal debt service together, the debt ratio seems more c anonsistent d the total interest and principal payments over the years are smoothed out.\n\nDebt service for Capital projects (object==8800) is examined below. Tollway debt service is EXCLUDED from these values. The ratio calculated in the table below is interest/principal.\n\n\nCode\ncapitalprojects <- exp_temp %>% \n  filter(object == \"8800\" & fund != \"0455\") # capital debt service except tollway\n\nall_debt <- exp_temp %>%     # all principal, interest, and debt service except Tollway\n  filter(fund != \"0455\" & (object == \"8811\" |object == \"8813\" | object == \"8800\") )%>% \n  group_by(fy, object) %>% \n  summarize(sum = sum(expenditure, na.rm=TRUE)) %>% \n  pivot_wider(names_from = object, values_from = sum) %>% \n  mutate(principal = `8811`,\n         interest = `8813`,\n         CapitalProjects = `8800`,\n         ratio = (as.numeric(interest)/as.numeric(principal)))\n\nall_debt %>% \n  select(principal, interest, CapitalProjects, ratio) %>%\n  mutate(across(principal:CapitalProjects, ~format(., big.mark= \",\", scientific = F)))\n\n\n\n\n  \n\n\n\nCode\nall_debt %>% \n  ggplot() + \n    geom_line(aes(x=fy, y=principal/1000000, color = \"Principal\"))+ \n    geom_line(aes(x=fy, y=interest/1000000, color = \"Interest\"))+\n    geom_line(aes(x=fy, y = CapitalProjects / 1000000, color = \"Capital Projects\"))+\n    labs(y = \"Debt ($Millions)\",\n         title = \"Illinois Principal and Interest payments\", \n         subtitle = \"Principal and interest from short term borrowing and GO Bonds debt service\", \n         caption = \"Capital projects does not include Illinois tollway debt service.\n         Capital projects data include interest and principal values as one value and is graphed separately.\")\n\n\n\n\n\n\n\n4.0.1.2 \nFor additional context on bond proceeds coming in compared to the debt service being paid, here is a very simple graph of all bond proceeds. Bond proceeds are not considered a revenue source in the Fiscal Futures model. We do not dive into the different types of proceeds but that could be an interesting topic by itself.\n\n\nCode\nrev_temp %>% \n  filter(rev_type == \"72\")\n\n\n\n\n  \n\n\n\nCode\nbond_proceeds <- rev_temp %>% \n  filter(rev_type == \"72\") %>% #bond proceeds\n#  filter(agency == \"370\" & source == \"0571\") %>%     \n  group_by(fy, fund_cat_name.y) %>% \n  summarize(sum = sum(receipts/1000000000, na.rm=FALSE))\n\nrev_temp %>% filter(rev_type == \"72\") %>% ggplot() + geom_col(aes(x=fy, y=receipts)) + labs(title = \"All Bond Proceeds\")\n\n\n\n\n\nCode\nbond_proceeds %>% ggplot() + \n  geom_line(aes(x=fy, y=sum, color=fund_cat_name.y)) + \n  labs(title = \"Bond Proceeds, Revenue Type = 72\", y=\"Billions of Dollars\")\n\n\n\n\n\n\n\n4.0.1.3 Tollway Debt, Revenue, and Expenditures\nA note on what is considered Transportation vs. Tollway vs. Capital Projects:\n\nTransportation costs is made up of the road fund (0011) , capital administrative costs, and maintenance costs for the agency=494, Department of Transportation.\nTollway expenditures include maintenance and operation, principle and interest payments occurring from fund 0455 and agency = 577.\nCapital improvement has a lot of projects that use bond financed funds for schools, sports facilities, etc. Agencies 511, 554, 574, and 598 are coded together as group 946, capital improvement (Capital Development Board, Sports Facilities Development Authority, Metro Pier and Exposition Authority, and Upper River Development Authority which is no longer used). IOC uses object 8800.\n\nCoding Notes: Filtering by Tollway agency 577 expenditures = SAME as filtering by fund == 0455 expenditures\n\nTotal Tollway expenditure = Debt service costs + maintenance & operation costs\n\nPrincipal and interest amounts calculated for the state exclude the Illinois Tollway debt service and debt service for capital projects (mostly because principal and interest are included as one item in the data). Examples of capital projects include the IL Civic Center and Build Illinois Bonds. Tollway principal and interest IS included in the Illinois Tollway expenditures.\nThe object tollway includes all Tollway expenditures (capital improvements, principal and interest payments, operations, etc).\n\n\nCode\n# exp_temp %>% \n#   filter(fund == \"0455\") %>%       # tollway fund\n#   group_by(fy) %>% \n#   summarize(sum = sum(expenditure)) %>% \n#   arrange(-fy)\n\nalltollway_exp <- exp_temp %>% \n  filter(fund == \"0455\") %>% # all tollway expenditures, including debt service\n  group_by(fy) %>% \n  summarize(expenditure = sum(expenditure))\nalltollway_exp\n\n\n\n\n  \n\n\n\nCode\ntollway_exp <- exp_temp %>% #expenditures without debt service\n  filter(fund == \"0455\" & object != \"8800\") %>% \n  group_by(fy) %>% \n  summarize(expenditure = sum(expenditure))\n\n#tollway debt principal and interest\ntollwaydebt <- exp_temp %>%\n  filter(object == \"8800\" & fund == \"0455\") %>% \n  group_by(fy) %>% \n  summarize(sum=sum(expenditure)) \n\n\ncapitalproject_debtservice <- exp_temp %>%\n  filter(object == \"8800\") # ALL Capital projects debt service including tollway\n\n# look at Illinois tollway bond proceeds and debt service: \n# rev_temp %>% filter(fund == \"0455\") # examine revenue to fund 0455\n\n\nalltollway_rev <- rev_temp %>% \n  filter(fund == \"0455\") %>%  # includes bond proceeds\n  group_by(fy) %>% \n  summarize(sum = sum(receipts)) %>% \n  arrange(-fy)\n\ntollway_rev <- rev_temp %>% #tollway revenue without bond proceeds\n  filter(fund == \"0455\" & source != \"0571\") %>% \n  group_by(fy) %>% \n  summarize(sum = sum(receipts, na.rm = TRUE))\n\n\n\n# tollway bond proceeds\ntollway_bondproc <- rev_temp %>% \n  filter(fund == \"0455\" & source == \"0571\" ) %>% \n  group_by(fy) %>% \n  summarize(sum = sum(receipts, na.rm = TRUE))\n\n#alltollway %>%  ggplot() + geom_line(aes(x=fy, y=sum)) + labs(title = \"Fund 0455 - All Tollway Revenue\", caption = \"Data from IOC Revenue Files. Fund 0455 is the IL State Tollway Revenue\") \n\n#tollway_bondproc %>% ggplot() + geom_line(aes(x=fy, y=sum)) + labs(title = \"Fund 0455 - Tollway Revenue: Tollway Bond Proceeds\", caption = \"Data from IOC Revenue Files. Fund 0455 is the IL State Tollway Revenue\")\n\n  \n\n#ggplot() + geom_line(data=tollway_bondproc, aes(x=fy, y=sum)) + labs(title = \"Fund 0455 - Tollway Revenue: Tollway Bond Proceeds\", caption = \"Data from IOC Revenue Files. Fund 0455 is the IL State Tollway Revenue\")\n\n#tollwaydebt %>% ggplot() + geom_line(aes(x=fy, y=sum)) + labs(title = \"Tollway Debt Service\", caption = \"Debt service includes principal and interest for the Illinois Tollway. Object = 8800 and fund = 0455\")\n\n\n\n\n## Tollway agency 577 expenditures = SAME as filtering by tollway fund == 0455 ##\n\n# tollway<-exp_temp %>% filter(agency == \"557\")\n\n# exp_temp %>% filter(agency == \"557\") %>% group_by(fy) %>% summarize(sum = sum(expenditure)) %>% arrange(-fy)\n\n\n\nggplot()+\n  geom_col(data=tollway_bondproc, aes(x=fy, y=sum)) +\n  geom_line(data= tollwaydebt, aes(x=fy, y = sum, color = 'Debt Service'))+ \n  geom_line(data= tollway_exp, aes(x=fy, y = expenditure, color = 'Tollway Expenditures'))+ \n  geom_line(data= tollway_rev, aes(x=fy, y = sum, color = \"Tollway Revenue\"))+ \n  scale_color_manual(values = c(\n    'Bond Proceeds' = 'darkgray',\n    'Debt Service' = 'red',\n    'Tollway Expenditures' = 'orange',\n    'Tollway Revenue' = 'light green')) +\n  labs(title=\"Tollway bond procreeds, debt service, revenue, and expenditures.\", \n       caption = \"Tollway revenue + bond proceeds should be roughly equal to tollway expenditures + debt service.\", \n       y = \"Dollars\")\n\n\n\n\n\nCode\nggplot()+\n  geom_line(data=alltollway_exp, aes(x=fy, y=expenditure/1000000000, color = \"All Tollway Revenue\")) +\n  geom_line(data= alltollway_rev, aes(x=fy, y = sum/1000000000, color = 'All Tollway Expenditures'))+ \n  scale_color_manual(values = c(\n    'All Tollway Revenue' = 'darkgray',\n    'All Tollway Expenditures' = 'red')) +\n  theme(legend.position = \"bottom\")+\n  labs(title=\" All revenues (Tolls + bond proceeds) and all expenditures (operations, capital improvements, & debt service.)\", \n       caption = \"Tollway revenue + bond proceeds should be roughly equal to tollway expenditures + debt service.\n       Capital improvements and the cost of principal payments may be double counting those costs.\n       (The cost of the project and then the cost of debt service).\", \n       y = \"Billions of Dollars\")\n\n\n\n\n\n\n\n4.0.1.4 \n\n\nCode\nall_debt %>%  # all debt does NOT include the tollway expenditures\n  ggplot() + \n    geom_line(aes(x=fy, y=principal/1000000, color = \"Principal\"))+ \n    geom_line(aes(x=fy, y=interest/1000000, color = \"Interest\"))+\n    geom_line(aes(x=fy, y = CapitalProjects / 1000000, color = \"Capital Projects Debt Service\"))+\n    geom_line(data = tollwaydebt, aes( x=fy, y=sum/1000000, color = \"Tollway Debt Service\"))+\n  theme(legend.position = \"bottom\") +\n    labs(y = \"Debt ($Millions)\", title = \"Short term borrowing and GO Bonds\",\n         subtitle = \"Principal and Interest payments\", \n         caption = \"Capital projects (object 8800) does not include Illinois tollway debt service (fund 0455).\n         Tollway debt service is graphed separately.\n         \") \n\n\n\n\n\nCode\nall_debt %>% \n  ggplot() + \n    geom_line(aes(x=fy, y=(principal+interest+CapitalProjects)/1000000, color = \"All Principal & Interest\"))+ \n    #geom_line(aes(x=fy, y=interest/1000000, color = \"Interest\"))+\n  #  geom_line(aes(x=fy, y = CapitalProjects / 1000000, color = \"Capital Projects Debt Service\"))+\n    geom_line(data = tollwaydebt, aes( x=fy, y=sum/1000000, color = \"Tollway Debt Service\"))+\n    theme(legend.position = \"bottom\") +\n    labs(y = \"Debt ($Millions)\", title = \"Illinois Debt Service Expenditure\",\n         subtitle = \"All Principal and Interest payments\", caption = \"All principal and interest includes short-term borrowing, GO bonds, and capital projects debt service \n         EXCEPT the Illinois Tollway debt service. Illinois tollway debt service is graphed separately.\")"
  },
  {
    "objectID": "Pensions.html",
    "href": "Pensions.html",
    "title": "5  Pensions",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(formatR)\nlibrary(lubridate)\nlibrary(smooth)\nlibrary(scales)\nlibrary(kableExtra)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(janitor)\n\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\n\n\nFor yearly expenditure calculations, the state contributions to the pension funds (object = 4431) should be the expenditure included for pensions. If trying to look at the bigger fiscal health picture and include unfunded liabilities and in/out flows, then items like purchase of investments and POB spikes in trends that occurred from policy changes should be analyzed and discussed in a separate section. Again, State contributions TO the pension funds are the expenditures BUT an additional graph/discussion on the employer contributions, employee contributions, and benefits paid out should be included and considered for additional context on Illinois’ situation.\nPension expenditures referenced in the analysis are based on state payments to the following pension systems:\n\nTeachers Retirement System (TRS)\nNew POB bond in 2019: Accelerated Bond Fund paid benefits in advance as lump sum\nState Employee Retirement System (SERS)\nState University Retirement System (SURS)\nJudges Retirement System (JRS)\nGeneral Assembly Retirement System (GARS)\n\nEmployer contributions for pensions are excluded from analysis to avoid double counting the cost of pensions. Expenditures with object 4430 for pensions, benefits, and annuities appears in items from funds 0473, 0477, 0479, 0481, (TRS, JRS, SERS, GARS), 0755, 0786, 0787, 0788, 0789, 0799 (deferred compensation plan, GAR excess benefit, JRS excess benefit, SER excess benefit, TRS excess benefit, state university retirement system) are NOT included in the analysis. All are coded with in_ff=0 in the fund_ab_in.xlsx file of funds.\nMost of these funds were found by either using CTRL-F with pension related words or scrolling through code options on the comptroller’s website.\n\n\nCode\nexp_temp <- read_csv(\"exp_temp.csv\") %>% filter(agency != \"799\")\nrev_temp <- read_csv(\"rev_temp.csv\") %>% filter(agency!= \"799\")\n\n\n# check what is being included in pensions\n\n# funds related to pension contributions\npension_funds <- c(\"0472\", \"0473\", \"0477\", \"0479\", \"0481\", \"0755\", \"0786\", \"0787\", \"0788\", \"0789\", \"0799\")\n\npension_check <- exp_temp %>% \n  mutate(pension = case_when( \n # object == \"4430\" & fund == \"0825\" ~ \"Object 4430 - Pension Buyout/Benefits Paid Early\",\n    (object==\"4430\") ~ \"Object 4430 - Benefits Paid to Employees; EXCLUDED\", # pensions, annuities, benefits\n    (object==\"4431\") ~ \"Object 4431 - State Contributions; INCLUDED\", # 4431 = state payments into pension fund\n        (obj_seq_type > \"11590000\" & obj_seq_type < \"11660000\")  ~ \"Object 1160-1165 Employer Contributions to Pension Fund; EXCLUDED\",\n    # objects 1159 to 1166 are all considered Retirement by Comptroller \n    \n            TRUE ~ \"0\")) %>%  # All other observations coded as 0 for non-pension items\n  \n  # recodes specific instances of code anomalies from past years:\n  mutate(pension = case_when(\n    (object==\"1298\" & fund %in% pension_funds ) ~ \"Object 1298 - Purchase of Investments; DROPPED\", \n\n    \n      # pension stabilization fund in 2022 \n # object == \"1900\" & fund == \"0319\" ~ \"Fund 0319-Pension Stabilization\", \n    object == \"1900\" & fund %in% pension_funds ~ \"Fund 0319 - Pension Stabilization\", \n\n  \n  object == \"4900\" & fund %in% pension_funds ~ \"Object 4900 - Awards/Grants; Weird 2010-2011 values\",\n  \n    TRUE ~ as.character(pension)) ) %>% \n  filter(pension != \"0\" )\n\npension_check %>% group_by(fy, pension) %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %>%\n  ggplot(aes(x=fy, y = expenditure/1000000000, color = pension)) + \n  geom_line() + \n\n  labs (title = \"Pension Fund Payments In and Retirement Benefits Out\", \n  caption = \"Object 4430 is retirement benefits paid to employees. \n  Object 4431 includes state payments INTO pension Fund.\n  Object 1298 is excluded except for years 2010 and 2011 due to POBs.\",\n  y= \"Billions of Dollars\")+\n    theme(legend.position = \"bottom\")+\n  guides(color = guide_legend(nrow=3))\n\n\n\n\n\nPension contributions from employees and employers are not included as revenue sources but are useful for understanding the money going into the funds and the money flowing out of the funds. Identifying and graphing employee and employer contributions, as well as benefits paid to retired employees and state contributions was important for checking the items that should and should not be included in the analysis.\n\n\n\n\nCode\n# rev_type = 51 is for retirement/pension contributions from both employers and employees.\n\n# current year employee revenue source = 0573, contributions by employee == 572 (stops at 2011)\n\n## revenue side: ##\nretirement_contributions <- rev_temp %>% \n  filter(rev_type == \"51\") %>% group_by(fy) %>% summarize(contributions = sum(receipts))\n\nemployer_contributions <- rev_temp %>% \n  filter(rev_type == \"51\" & source == \"0577\") %>% group_by(fy) %>% summarize(contributions = sum(receipts))\n\nemployee_contributions <- rev_temp %>% \n  filter(rev_type == \"51\" & (source == \"0572\" | source == \"0573\") ) %>% \n  group_by(fy) %>% summarize(contributions = sum(receipts))\n\n\n## expenditure side ### \nbenefits_paid <- pension_check %>% filter(object == \"4430\") %>%\n  group_by(fy) %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE))\n\nstate_contrib <- pension_check %>% filter(object == \"4431\") %>%\n  group_by(fy) %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE))\n\n\n\nrev_temp %>% \n  filter(rev_type == \"51\") %>% # all retirement contributions\n  group_by(fy, source) %>% \n  summarise(sum = sum(receipts, na.rm = TRUE)) %>%\n  ggplot() +\n  geom_line(aes(x=fy, y = sum, color=source)) + labs(title=\"Retirement Contribution Sources, ALL rev_source == 51\", \n       caption = \"Source 0573, 0572 is for employee contributions. 0577 is Contributions by employer.\")\n\n\n\n\n\nAdditional pension info:\nFor the $10 billion in 2004, they borrowed money and invested it in pension portfolio and hoped that the returns would be greater than the interest on the debt. If returns>interest, then they increased the pension funds and it was a good idea. Otherwise a short term band-aid causes even more problems later. This added a significant amount to the unfunded pension liabilities. In 2010 and 2011, POBs served as a type of general borrowing for the state by borrowing against what was owed to the pension systems and using that revenue that should have funded pensions to instead subsidize the cost of providing core services. Illinois borrowed money (POBs) and used it to pay for government services. A temporary way to fill a budget gap for that 2010 that then costs more in the long run due to increased unfunded liabilities and interest on the borrowed money. - “Basket Case” by Dye 2015 but summarized much more casually by Alea WM\nIn 2019 lawmakers offered a pension buyout plan where members could opt-out of their future benefits for a lump sum. However, few people participated in the buyout plan and very little savings have occurred so far. The buyout plan has been extended to 2026 in hopes that more people participate in it. Description of Pension Obligation Acceleration Bond at this link. Proceeds of bonds go into pension obligation acceleration fund (which are not included as a revenue source) and the fund is only used to make accelerated pension benefit payments. The pension stabilization fund (0319) is money put into the pension funds to help pay for unfunded liabilities from past poor budgeting decisions.\n\n5.0.1 Data coding details\n\nState pension contributions are largely captured with object=4431. (These are the State expenditures included in analysis)\n\nincludes 8 billion payment in 2004 that creates large peak in expenditure graph\nObject 4431 does not capture recent pension stabilization fund which is fund = 0319, object = 1900 and has $300 million investment in FY2022.\n\nFund=0475 is the Municipal Retirement Fund - Not included because state just helps collect and disperse local pension funds. IMRF is most funded pension fund in Illinois. Fund ends in 2015. All were considered purchase of investments.\nIOC objects 1160-1165 are for all retirement expenditures for employers. These are not included in the analysis as pension costs.\n\nobject = 1167 and 1168 is for Employer pension contributions but is not used by IOC yet as of FY2022\n\nSome expenditures with object=4430 (benefits paid to retirees) were paid for with Pension obligation bond funds (fund == 0825).\nIn past years, some POB funded expenditures were moved to revenue side. Code logic was unclear. We are no longer doing this as of FY2021.\nOther types of pension expenditures to consider when looking at pension funds: Pension obligation acceleration bond, state pension obligation bond reimbursements, pension pickup, accelerated pension buy-out (bond financed funds)\nobject = 1298 is for Purchase of Investments and is excluded from analysis. In past analyses, there were a couple of exceptions during 2010 and 2011.\n\nPurchase of Investments captures the pension obligation bonds issued in 2010-2011.\n\nobject = 1900 for pension stabilization is under lump sums\nobject = 4900 is awards and grants lump sum"
  },
  {
    "objectID": "Healthcare.html",
    "href": "Healthcare.html",
    "title": "6  State Employee Healthcare Discussion",
    "section": "",
    "text": "State Employee Health Care = Sum of expenditures for “health care coverage as elected by members per state employees group insurance act.” The payments are made from the Health Insurance Reserve Fund. Employee contributions are not considered a revenue source or an expenditure in our analysis.\nFunding for the State Employees Group Insurance plan originates from two funds. The Health Insurance Reserve Fund (HIRF) and the Group Insurance Premium Fund (GIPF). Contributions and payment for Health coverage benefits are deposited INTO HIRF and contributions for life insurance are deposited into the GIPF.\nHIRF is the fund mainly used to administer the group insurance program. Funding for HIRF comes from several different revenue sources: the General Revenue Fund (GRF), Road Fund, reimbursements, university funds, and misc funds. Source: CGFA Report.\n\n6.0.1 Coding details\nIn FY2013, the Local Government Health Insurance fund was transferred to the department of Central Management Services (agency changes from 478 to 416 in data.)\nEmployer group insurance contributions for health insurance are excluded to avoid double counting the cost of healthcare provision. All employer group insurance contributions are coded as object = 1180. BUT the last two fiscal years (FY21 and FY22) were coded as 1900 instead of 1180 for lump sums instead of employer contributions. This caused an ~$2 billion miscalculation when writing the FY21 paper that was caught before publishing.\n\nFund = 0907 = Health Insurance Reserve Fund, in_ff = 1\nFund = 0457 is “Group Insurance Premium Fund”, in_ff = 1\nFund = 0193 is “Local govt health insurance reserve”, in=ff = 0\nfund = 0477 is “Community College Health Insurance”, in=ff = 0.\n\nhad large amount in early years\n\nFund = 9939 is “group self-insurers’ insolv”, in_ff = 1\nFund = 0940 is Self-Insurers security, in_ff = 0\nFund = 0739 is Group Workers Comp Pool Insol, in_ff = 1\n\neehc = 0 means it is NOT a state healthcare cost but it is an employer contribution of some type to some fund\neehc = 1 means it is a state employee healthcare cost and it is an employer contribution to health insurance\n\n\nIf observation is a group insurance contribution, then the expenditure amount is set to $0 (essentially dropped from analysis).\n\n\nCode\nexp_temp <- read_csv(\"exp_temp.csv\")\nrev_temp <- read_csv(\"rev_temp.csv\")\n\n\nhealth_ins_reserve <- exp_temp %>% \n  filter(fund == \"0907\") %>%  \n  group_by(fy) %>% \n  summarize(fund_0907 = sum(expenditure)) \n\nhealth_ins_reserve %>% \n  ggplot(aes(x=fy, y=fund_0907)) + \n  geom_col() + \n  labs(title=\"Health Insurance Reserve\", subtitle = \"Sum of expenditures from fund 907\")\n\n\n\n\n\nCode\n# object 1180 is inconsistently coded over time form the IOC \n\n# object 1180 should be employer contributions to healthcare group insurance\n\nemployer_contributions <- exp_temp %>% \n  filter(object == \"1180\") %>% \n  group_by(fy) %>% \n  summarize(object1180 = sum(expenditure)) \n\nemployer_contributions%>% \n  ggplot(aes(x=fy, y=object1180)) + \n  geom_col() + \n  labs(title=\"Employer Contributions to Healthcare Group Insurance, IOC Object 1180\")\n\n\n\n\n\nCode\nemployer_contributions2 <- exp_temp %>% \n  filter(object == \"1180\" & fund==\"0001\") %>% \n  group_by(fy) %>% \n  summarize(object1180 = sum(expenditure)) \n\nemployer_contributions2 %>% \n  ggplot(aes(x=fy, y=object1180)) + \n  geom_col() + \n  labs(title=\"Employer Contributions to Healthcare Group Insurance\", \n       subtitle = \"IOC Object 1180 from Fund 001\")\n\n\n\n\n\nCode\n# examine combined group insurance totals per year\n\ngroup_ins2 <- exp_temp %>% \n  mutate(eehc = ifelse(\n    # group insurance contributions for 1998-2005 and 2013-present\n    # CMS took over health insurance in 2013\n   fund == \"0001\" & (object == \"1180\" | object ==\"1900\") & agency == \"416\" & appr_org==\"20\", 1, 0) )%>% \n  mutate(eehc = ifelse(\n    # group insurance contributions for 2006-2012\n    # health insurance was in healthcare and family services, agency 478 for a few years\n    fund == \"0001\" & object == \"1180\" & agency == \"478\" & appr_org==\"80\", 1, eehc) )%>%\n  filter(eehc == 1) %>% \n    group_by(fy) %>% \n    summarize(dropped_group_premiums = sum(expenditure, na.rm=TRUE))\n\ngroup_ins2 %>% ggplot(aes(x=fy, y=dropped_group_premiums)) + \n  geom_col() + \n  labs(title=\"Employer Healthcare Group Insurance Contributions\", \n       subtitle= \" - Dropped from analysis to avoid double counting healthcare expenditures\", \n       caption = \"Objects 1180 and 1900 from fund 0001. See code for additional coding details.\")\n\n\n\n\n\n\n\n6.0.2 Health Insurance Premiums - Revenue Side\nEmployee insurance premiums for healthcare are a revenue source for the state in the IOC data but are NOT included in the Fiscal Futures analysis as a revenue or in fiscal gap calculations.\nSource #’s:\n\n0120 = ins prem-option life\n0120 = ins prem-optional life/univ\n0347 = optional health - HMO\n0348 = optional health - dental\n0349 = optional health - univ/local SI\n0350 = optional health - univ/local\n0351 = optional health - retirement\n0352 = optional health - retirement SI\n0353 = optional health - retire/dental\n0354 = optional health - retirement hmo\n2199-2209 = various HMOs, dental, health plans from Health Insurance Reserve (fund)\n\n\n\nCode\nhealth_insurance_fund_rev<- rev_temp %>% \n  filter(fund==\"0907\") %>% # everything that goes to fund 0907\n    group_by(fy) %>%\n  summarize(health_ins_rev = sum(receipts)) \n\n\nhealth_insurance_fund_rev %>% \n  ggplot(aes(x=fy, y = health_ins_rev)) + \n  geom_col() + labs( title = \"Health insurance fund - All revenue, Fund 0907\")\n\n\n\n\n\nCode\n#Old Stata step: collect optional insurance premiums to fund 0907 for use in eehc expenditure  \nemployee_health_premiums <- rev_temp %>% \n  mutate(employee_premiums = ifelse(\n    fund==\"0907\" & (source==\"0120\"| source==\"0121\"| (source>\"0345\" & source<\"0357\")|(source>\"2199\" & source<\"2209\")), 1, 0)) %>%\n  filter(employee_premiums == 1)\n\n# optional insurance premiums (a term from old Stata Code) = employee insurance premiums\nemp_premium <- employee_health_premiums %>%\n  group_by(fy) %>%\n  summarize(employee_premiums_sum = sum(receipts))\n\n  \n\nemp_premium %>% \n  ggplot(aes(x=fy, y = employee_premiums_sum)) + \n  geom_col() + \n  labs( title = \"Employee health insurance premiums\")\n\n\n\n\n\n\n\nCode\n# contributions and benefits paid comparison\nggplot()+\n  #  geom_line(data=group_ins, aes(x=fy, y=object1180, color='Group Insurance1')) +\n      geom_line(data=health_insurance_fund_rev, aes(x=fy, y=health_ins_rev, color='Health Insurance Fund - All Revenue')) +\n geom_line(data = emp_premium, aes(x=fy, y = employee_premiums_sum, color = 'Revenue from Employee Premiums')) +\n    geom_line(data=health_ins_reserve, aes(x=fy, y=fund_0907, color='Cost of Provision')) +\n    geom_line(data=employer_contributions, aes(x=fy, y=object1180, color='Group Insurance-Object1180')) +\n\n #   geom_line(data=employer_contributions2, aes(x=fy, y=object1180, color='Employer Contributions-General Fund')) +\n  geom_line(data=group_ins2, aes(x=fy, y=dropped_group_premiums, color='Group Insurance - 1180 & 1900')) +\n\n  #geom_line(data= healthcare_costs, aes(x=fy, y = cost_of_provision, color = 'Healthcare Costs'))+ \nguides(fill=guide_legend(nrow=2,byrow=TRUE))+\n  scale_color_manual(values = c(\n    'Cost of Provision' = 'darkblue',\n    'Health Insurance Fund - All Revenue' = 'light green',\n    'Revenue from Employee Premiums' = 'dark green',\n    'Group Insurance - 1180 & 1900' = 'blue',\n    'Group Insurance-Object1180' = 'light blue'\n   #     'Employer Contributions-General Fund' = 'light blue'\n)) +\n  theme(legend.position=\"bottom\") +\n  labs(title=\"Healthcare costs and group insurance contributions\", \n       caption = \"Healthcare costs and group insurance contributions\", \n       y = \"Dollars\", x = \"\")\n\n\n\n\n\nAfter removing a few of those lines, we are left with the overall cost providing healthcare and the total amount of money that flows into the Health Insurance Fund.\n\n\nCode\n# contributions and benefits paid comparison\nggplot()+\n  #  geom_line(data=group_ins, aes(x=fy, y=object1180, color='Group Insurance1')) +\n      geom_line(data=health_insurance_fund_rev, aes(x=fy, y=health_ins_rev, color='Health Insurance Fund - All Revenue')) +\n# geom_line(data = emp_premium, aes(x=fy, y = employee_premiums_sum, color = 'Revenue from Employee Premiums')) +\n    geom_line(data=health_ins_reserve, aes(x=fy, y=fund_0907, color='Cost of Provision')) +\n  #  geom_line(data=employer_contributions, aes(x=fy, y=object1180, color='Group Insurance-Object1180')) +\n #   geom_line(data=employer_contributions2, aes(x=fy, y=object1180, color='Employer Contributions-General Fund')) +\n  #geom_line(data=group_ins2, aes(x=fy, y=dropped_group_premiums, color='Group Insurance - 1180 & 1900')) +\n\n  #geom_line(data= healthcare_costs, aes(x=fy, y = cost_of_provision, color = 'Healthcare Costs'))+ \n\n  scale_color_manual(values = c(\n    'Cost of Provision' = 'darkblue',\n    'Health Insurance Fund - All Revenue' = 'light green'\n  #  'Revenue from Employee Premiums' = 'dark green',\n  #  'Group Insurance - 1180 & 1900' = 'blue',\n  #  'Group Insurance-Object1180' = 'light blue'\n   #     'Employer Contributions-General Fund' = 'light blue'\n)) +\n  theme(legend.position=\"bottom\") +\n  labs(title=\"Healthcare costs and health insurance fund revenue\", \n       caption = \"Healthcare costs and total revenue that flowed into the Health Insurance Fund\", \n       y = \"Dollars\", x = \"\" )"
  },
  {
    "objectID": "FederalRevenue.html",
    "href": "FederalRevenue.html",
    "title": "7  Federal Revenue",
    "section": "",
    "text": "The Fiscal Futures Model divides federal funds (IOC revenue type = 57) into Medicaid, Transportation, and All Other Federal Funds. “All Other” federal revenue can include: Health and Human Services Grants, Federal Stimulus Package, Department of Education Grants, Department of Transportation Grants, Department of Agriculture Grants, TANF Grants, and Department of Labor Grants.\nFederal Medicaid: DHFS receives money for Medicaid that is deposited into the General Revenue Fund. There are also Special State Funds used for Medicaid that receive specific revenues (e.g. Healthcare Provider Taxes) which are matched with Federal Funds. The federal receipts in these special funds are aggregated and added to the federal receipts in the GRF that are received by DHFS.\nRevenue Sources:\n\n618 = Health and Human Services (not used)\n660 = HHS/Hospital Participation\n676 = Medical Assistance\n692 = Medical Assistance\n1552 = DHHS/ FFP-Medicaid Rehab Option\n2306 = Enhanced Fed Fin PART-ARRA\n2076 = IDPH-HHS/CMS\n2364 = Department of Insurance (not used)\nRevenue Source=1530 is labeled Medicaid Matching in IOC Sources list but it isn’t used? 2140 is Matching Grant Monies but is also not used?\nOther potential medicaid sources from CTRL-Fing “med” in revenue sources: Sources: 2104 = Medicare Part D & 675 = Medical Administration\n\nThe Department of Healthcare and Family Services (DHFS) receives federal monies for Medicaid that are deposited into the General Revenue Fund. In addition, a number of special state funds are used for Medicaid. These funds receive specific revenues –e.g., Healthcare Provider Taxes—which are then matched with federal monies at approximately 50 percent. There are differences in the proportion of federal vs. state monies in the various funds, but the key is that there is a significant federal component to the receipts in the funds. The federal receipts in these special funds are aggregated and added to the federal receipts in the GRF that are received by DHFS.\nFederal Transportation: If Agency is 494 and considered Federal Revenue, then it is recoded to its own category of “Federal Transportation”.\n\n\n\nFederal revenue broken down into Transportation, Medicaid, and Other:\n\n\nCode\nrev_temp <- rev_temp %>% \n  mutate(\n    rev_type = ifelse(rev_type==\"57\" & agency==\"478\" & (source==\"0618\"|source==\"2364\"|source==\"0660\"|source==\"1552\"| source==\"2306\"| source==\"2076\"|source==\"0676\"|source==\"0692\"), \"58\", rev_type),\n    rev_type_name = ifelse(rev_type==\"58\", \"Federal Medicaid Reimbursements\", rev_type_name),\n    rev_type = ifelse(rev_type==\"57\" & agency==\"494\", \"59\", rev_type),\n    rev_type_name = ifelse(rev_type==\"59\", \"Federal Transportation\", rev_type_name),\n    rev_type_name = ifelse(rev_type==\"57\", \"Federal - Other\", rev_type_name),\n    rev_type = ifelse(rev_type==\"6\", \"06\", rev_type),\n    rev_type = ifelse(rev_type==\"9\", \"09\", rev_type)) \n\nrev_temp %>% \n  filter(rev_type == \"58\" | rev_type == \"59\" | rev_type == \"57\") %>% \n  group_by(fy, rev_type, rev_type_name) %>% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000) %>% \n  ggplot(aes(x=fy, y=receipts,color=rev_type_name)) +\n    geom_recessions(xformay = \"numeric\",text = FALSE)+\n\n  geom_line(aes(x=fy, y=receipts,color=rev_type_name)) +\n      theme_bw() +\n  scale_y_continuous(labels = comma)+\n  labs(title = \"Federal to State Transfers\", \n       caption = \"These values include stimulus funds after the Great Recession and the COVID pandemic response.\",\n       y = \"Millions of Dollars\", x = \"\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  )\n\n\n\n\n\nCode\nrev_temp %>% \n  filter(rev_type == \"58\" | rev_type == \"59\" | rev_type == \"57\") %>% \n  filter(source_name_AWM != \"FEDERAL STIMULUS PACKAGE\" & source_name_AWM != \"STATE CURE\") %>%\n  group_by(fy, rev_type, rev_type_name) %>% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000) %>% \n  ggplot() +\n  geom_line(aes(x=fy, y=receipts,color=rev_type_name)) +\n      theme_bw() +\n  scale_y_continuous(labels = comma)+\n  labs(title = \"Federal to State Transfers\", \n       caption = \"These values include stimulus funds after the Great Recession and the COVID pandemic response.\",\n       y = \"Millions of Dollars\", x = \"\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  )\n\n\n\n\n\n\nAll federal revenue summed together:\n\n\nCode\nfedrev<- rev_temp %>% \n  filter(rev_type == \"58\" | rev_type == \"59\" | rev_type == \"57\") \n\nfedrev %>% \n  group_by(fy) %>% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000) %>% \n  ggplot() +\n  geom_line(aes(x=fy, y=receipts)) +\n      theme_bw() +\n  scale_y_continuous(labels = comma)+\n  labs(title = \"All Federal Revenue\", \n       y = \"Millions of Dollars\", x = \"\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  )+\n    scale_y_continuous(limits = c(0,45000))\n\n\n\n\n\n\n\nCode\nfedrev %>% \n  filter(source_name_AWM != \"FEDERAL STIMULUS PACKAGE\") %>%\n  group_by(fy) %>% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000) %>% \n  ggplot() +\n  geom_line(aes(x=fy, y=receipts)) +\n      theme_bw() +\n  scale_y_continuous(labels = comma)+\n  labs(title = \"All Federal EXCEPT Federal Stimulus Package\", \n       y = \"Millions of Dollars\", x = \"\",\n       caption = \"Note: Dropping Federal Stimulus Package revenue only removes the $3.5 billion from FY20, $0.3 billion from FY21, and \n       $8.5 billion from FY22. There is still over $12 billion more in Federal Revenue compared to FY19.\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  ) +\n  scale_y_continuous(limits = c(0,45000))"
  },
  {
    "objectID": "Medicaid.html#federal-medicaid-reimbursements-and-medicaid-costs",
    "href": "Medicaid.html#federal-medicaid-reimbursements-and-medicaid-costs",
    "title": "8  Medicaid",
    "section": "8.1 Federal Medicaid Reimbursements and Medicaid Costs",
    "text": "8.1 Federal Medicaid Reimbursements and Medicaid Costs\n\n\nCode\nmedicaid_cost <- exp_temp %>% \n  filter(agency==\"478\" & (appr_org==\"01\" | appr_org == \"65\" | appr_org==\"88\") & (object==\"4900\" | object==\"4400\")) %>% \n  group_by(fy) %>% \n  summarize(sum=sum(expenditure))\n\nmed_reimburse <- rev_temp %>% \n  filter(rev_type==\"57\" & agency==\"478\" & (source==\"0618\"|source==\"2364\"|source==\"0660\"|source==\"1552\"| source==\"2306\"| source==\"2076\"|source==\"0676\"|source==\"0692\")) %>% \n  group_by(fy) %>% \n  summarize(sum=sum(receipts))\n\n\n\nggplot()+\n  geom_line(data=medicaid_cost, aes(x=fy, y=sum), color = \"red\") + \n  geom_line(data=med_reimburse, aes(x=fy, y = sum), color=\"black\") + \n  labs(title = \"Medicaid reimbursements and Medicaid expenditures\", \n       caption = \"Medicaid expenditures include funds provided to medical providers. \")\n\n\n\n\n\nMedicaid.That portion of the Healthcare and Family Services (or Public Aid in earlier years, agency code 478) budget for Medical (appr_organization code 65) for awards and grants (object codes 4400 and 4900).\n\nState CURE revenue will remain in the Medicaid category due to the nature of it being federal funds providing public health services and funding to locations that provide public services.\n\n\nUses same appropriation name of “HEALTHCARE PROVIDER RELIEF” and fund == 0793 and obj_seq_type == 49000000. So can defend the “mistake” of including healthcare provider relief as Medicaid expenditure.\n\nFederal Medical Assistance Program (FMAP): in 1965. The FMAP formula compares the state per-capita income to the national per-capita income. There is no cap on the dollar amount that the federal government pays, so the more that a state spends the more that it receives. a maximum of 83%. States with a higher per-capita income receive lower FMAP funding but no less than 50%, and the states that have a lower per-capita income receive higher FMAP funding. Those that need more, get more."
  },
  {
    "objectID": "Everything.html",
    "href": "Everything.html",
    "title": "9  All Code together",
    "section": "",
    "text": "10 Graphs and Tables\nCreate total revenues and total expenditures only:\nGraphs made from aggregated_totals_long dataframe.\nExpenditure and revenue amounts in billions of dollars:\nExpenditure and revenues when focusing on largest categories and combining others into “All Other Expenditures(Revenues)”:\nChanges in Categories - 2021 to 2022\nIf only sustainable revenues are included in the model, then the federal dollars from the pandemic response (CARES, CRSSA,& ARPA)should be excluded from the calculation of the fiscal gap.\nThe Fiscal Futures model focuses on sustainable revenue sources. To understand our fiscal gap and outlook, we need to exclude these one time revenues. GOMB has emphasized that they have allocated COVID dollars to one time expenditures (unemployment trust fund, budget stabilization fund, etc.). The fiscal gap, graphs,and CAGRs have been recalculated in the [Drop COVID Dollars] section below.\nChange plots:\nCompare with and without federal COVID dollars:\nRevenue amounts in millions of dollars:\nCreating the excel file with multiple tables and versions of the data:"
  },
  {
    "objectID": "Everything.html#modify-expenditure-file",
    "href": "Everything.html#modify-expenditure-file",
    "title": "9  All Code together",
    "section": "9.1 Modify Expenditure File",
    "text": "9.1 Modify Expenditure File\n\n9.1.1 Tax refunds\nAggregate expenditures: Save tax refunds as negative revenue. Code refunds to match the rev_type codes (02=income taxes, 03 = corporate income taxes, 06=sales tax, 09=motor fuel tax, 24=insurance taxes and fees, 35 = all other tax refunds).\n\n\nCode\n## negative revenue becomes tax refunds\n\ntax_refund_long <- exp_temp %>%           # fund != \"0401\" # removes State Trust Funds\n  filter(fund != \"0401\" & (object==\"9910\"|object==\"9921\"|object==\"9923\"|object==\"9925\")) %>%\n  # keeps these objects which represent revenue, insurance, treasurer,and financial and professional reg tax refunds\n  mutate(refund = case_when(\n    fund==\"0278\" & sequence == \"00\" ~ \"02\", # for income tax refund\n    fund==\"0278\" & sequence == \"01\" ~ \"03\", # tax administration and enforcement and tax operations become corporate income tax refund\n     fund == \"0278\" & sequence == \"02\" ~ \"02\",\n    object==\"9921\" ~ \"21\",                # inheritance tax and estate tax refund appropriation\n    object==\"9923\" ~ \"09\",                # motor fuel tax refunds\n    obj_seq_type == \"99250055\" ~ \"06\",    # sales tax refund\n    fund==\"0378\" & object==\"9925\" ~ \"24\", # insurance privilege tax refund\n    fund==\"0001\" & object==\"9925\" ~ \"35\", # all other taxes\n      T ~ \"CHECK\"))                       # if none of the items above apply to the observations, then code them as CHECK \n\n    \nexp_temp <- left_join(exp_temp, tax_refund_long) %>%\n  mutate(refund = ifelse(is.na(refund),\"not refund\", as.character(refund)))\n\ntax_refund <- tax_refund_long %>% \n  group_by(refund, fy)%>%\n  summarize(refund_amount = sum(expenditure, na.rm = TRUE)/1000000) %>%\n  pivot_wider(names_from = refund, values_from = refund_amount, names_prefix = \"ref_\") %>%\n  mutate_all(~replace_na(.,0)) %>%\n  arrange(fy)\n\ntax_refund %>% \n  pivot_longer( ref_02:ref_35, names_to = \"Refund Type\", values_to = \"Amount\") %>%\n  ggplot()+\n  geom_line(aes(x=fy,y=Amount, group = `Refund Type`, color = `Refund Type`))+\n  labs(title = \"Refund Types\", \n       caption = \"Refunds are excluded from Expenditure totals and instead subtracted from Revenue totals\") + \n  labs(title = \"Tax refunds\", \n       caption = \"Rev_type codes: 02=income taxes, 03=corporate income taxes, 06=sales tax, 09=motor fuel tax, \n       24=insurance taxes and fees, 35 = all other tax refunds.\" )\n\n\n\n\n\nCode\n# remove the items we recoded in tax_refund_long\nexp_temp <- exp_temp %>% filter(refund == \"not refund\")\n\n\ntax_refund amounts are removed from expenditure totals and subtracted from revenue totals (since they were tax refunds).\n\n\n9.1.2 Pension Expenditures\nState pension contributions are largely captured with object=4431. (State payments into pension fund). State payments to the following pension systems:\n\nTeachers Retirement System (TRS)\nNew POB bond in 2019: Accelerated Bond Fund paid benefits in advance as lump sum\nState Employee Retirement System (SERS)\nState University Retirement System (SURS)\nJudges Retirement System (JRS)\nGeneral Assembly Retirement System (GARS)\n\nModify exp_temp and move all state pension contributions to their own group (901). For more information on the variables included or excluded, please see the @Pensions chapter.\n\n\nCode\nexp_temp <-  exp_temp %>% \n  arrange(fund) %>%\n  mutate(pension = case_when( \n    (object==\"4431\") ~ 1, # 4431 = easy to find pension payments INTO fund\n    \n    # (object>\"1159\" & object<\"1166\") & fund != \"0183\" & fund != \"0193\"   ~ 2, \n    # objects 1159 to 1166 are all considered Retirement by Comptroller, \n    # Excluded - employer contributions from agencies/organizations/etc.\n    \n    (object==\"1298\" &  # Purchase of Investments, Normally excluded\n       (fy==2010 | fy==2011) & \n       (fund==\"0477\" | fund==\"0479\" | fund==\"0481\")) ~ 3, #judges retirement OUT of fund\n    # state borrowed money from pension funds to pay for core services during 2010 and 2011. \n    # used to fill budget gap and push problems to the future. \n    \n    fund == \"0319\" ~ 4, # pension stabilization fund\n    TRUE ~ 0) )\n\ntable(exp_temp$pension) \n\n\n\n     0      1      3      4 \n167875    228      6      5 \n\n\nCode\nexp_temp %>% \n  filter(pension != 0) %>%\n  mutate(pension = as.factor(pension))%>%\n  group_by(fy, pension) %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %>%\n  ggplot(aes(x=fy, y = expenditure, group=pension)) + \n  geom_col(aes(fill = pension)) + \n\n  labs (title = \"Pension expenditures\", \n  caption = \"1 = State contributions INTO pension funds. \n  3 = Purchase of Investments anomoly in 2010 and 2011. \n  4 = pension stabilization fund\")+\n    theme(legend.position = \"bottom\")\n\n\n\n\n\n\n\nCode\n# special accounting of pension obligation bond (POB)-funded contributions to JRS, SERS, GARS, TRS \n\nexp_temp <- exp_temp %>% \n  # change object for 2010 and 2011, retirement expenditures were bond proceeds and would have been excluded\n  mutate(object = ifelse((pension >0 & in_ff == \"0\"), \"4431\", object)) %>% \n  # changes weird teacher & judge retirement system  pensions object to normal pension object 4431\n  mutate(pension =  ifelse(pension >0 & in_ff == \"0\", 6, pension)) %>% # coded as 6 if it was supposed to be excluded. \n  mutate(in_ff = ifelse(pension>0, \"1\", in_ff))\n\ntable(exp_temp$pension) \n\n\n\n     0      1      4      6 \n167875    226      5      8 \n\n\nCode\n# all other pensions objects  codes get agency code 901 for State Pension Contributions\nexp_temp <- exp_temp %>% \n  mutate(agency = ifelse(pension>0, \"901\", as.character(agency)),\n         agency_name = ifelse(agency == \"901\", \"State Pension Contributions\", as.character(agency_name)))\n\nexp_temp %>% \n filter(pension > 0) %>%  \n  mutate(pension = as.factor(pension)) %>%\n  group_by(fy, pension) %>% \n  summarize(expenditure = sum(expenditure, na.rm=TRUE)) %>%\n  ggplot(aes(x=fy, y=expenditure, color = pension)) +\n  geom_line() + \n  labs (title = \"Pension Expenditures\", \n  caption = \"\")\n\n\n\n\n\nCode\nexp_temp %>% \n filter(pension > 0) %>%  \n  group_by(fy) %>% \n  summarize(expenditure = sum(expenditure, na.rm=TRUE)) %>%\n  ggplot(aes(x=fy, y=expenditure)) +\n  geom_line() + \n  labs (title = \"Pension Expenditures\")\n\n\n\n\n\n\n\n9.1.3 Drop Interfund transfers\nDrop all cash transfers between funds, statutory transfers, and purchases of investments from expenditure data.\n\nobject == 1993 is for interfund cash transfers\nagency == 799 is for statutory transfers\nobject == 1298 is for purchase of investments and is not spending EXCEPT for costs in 2010 and 2011 (and were recoded already to object == “4431”). Over 168,000 observations remain.\n\n153,889 observations on 1/23/2022?\n\n\n\n\nCode\ntransfers_drop <- exp_temp %>% filter(\n  agency == \"799\" | # statutory transfers\n           object == \"1993\" |  # interfund cash transfers\n           object == \"1298\") # purchase of investments\ntransfers_drop # items being dropped, \n\n\n\n\n  \n\n\n\nCode\n# always check to make sure you aren't accidently dropping something of interest.\n\nexp_temp <- anti_join(exp_temp, transfers_drop)\nexp_temp\n\n\n\n\n  \n\n\n\n\n\n9.1.4 State employee healthcare costs\nCoding healthcare costs was quite difficult. Over the years, State employee healthcare has been within Central Management Bureau of Benefits and Healthcare & Family Services.\nIf observation is a group insurance contribution, then the expenditure amount is set to $0 (essentially dropped from analysis).\nAgency 416 had group insurance contributions for 1998-2005 and 2013-present. Agency 478 had group insurance contributions from 2006-2012.\nFY2021 and FY2022 contributions coded with object = 1900 (lump sum) for some reason??\n\n\nCode\n#if observation is a group insurance contribution, then the expenditure amount is set to $0 (essentially dropped from analysis)\n\n# pretend eehc is named group_insurance_contribution or something like that\n# eehc coded as zero implies that it is group insurance\n# if eehc=0, then expenditures are coded as zero for group insurance to avoid double counting costs\n\n\nexp_temp <- exp_temp %>% \n  mutate(eehc = ifelse(\n    # group insurance contributions for 1998-2005 and 2013-present\n   fund == \"0001\" & (object == \"1180\" | object ==\"1900\") & agency == \"416\" & appr_org==\"20\", 0, 1) )%>% \n  \n  mutate(eehc = ifelse(\n    # group insurance contributions for 2006-2012\n    fund == \"0001\" & object == \"1180\" & agency == \"478\" \n    & appr_org==\"80\", 0, eehc) )%>%\n    \n   # group insurance contributions from road fund\n  # coded with 1900 for some reason??\n    mutate(eehc = ifelse(\n      fund == \"0011\" & object == \"1900\" & \n        agency == \"416\" & appr_org==\"20\", 0, eehc) ) %>%\n  \n  mutate(expenditure = ifelse(eehc==\"0\", 0, expenditure)) %>%\n  \n  mutate(agency = case_when(   # turns specific items into State Employee Healthcare (agency=904)\n      fund==\"0907\" & (agency==\"416\" & appr_org==\"20\") ~ \"904\",   # central management Bureau of benefits using health insurance reserve \n      fund==\"0907\" & (agency==\"478\" & appr_org==\"80\") ~ \"904\",   # agency = 478: healthcare & family services using health insurance reserve - stopped using this in 2012\n      TRUE ~ as.character(agency))) %>%\n  mutate(agency_name = ifelse(\n    agency == \"904\", \"STATE EMPLOYEE HEALTHCARE\", as.character(agency_name)),\n         in_ff = ifelse( agency == \"904\", 1, in_ff),\n         group = ifelse(agency == \"904\", \"904\", as.character(agency)))  \n# creates group variable\n\n# Default group = agency number\n\nhealthcare_costs <- exp_temp %>% filter(group == \"904\")\n\nhealthcare_costs\n\n\n\n\n  \n\n\n\nCode\nexp_temp %>% filter(group == \"904\") %>% group_by(fy) %>% \n  summarise(healthcare_cost = sum(expenditure, na.rm = TRUE)) %>% \n  ggplot() +geom_line(aes(x=fy, y=healthcare_cost)) + labs(title=\"State Employee Healthcare Costs - Included in Fiscal Futures Model\", caption = \"Fund 0907 for agencies responsible for health insurance reserve (DHFS & CMS)\")\n\n\n\n\n\nCode\n#exp_temp <- anti_join(exp_temp, healthcare_costs) %>% mutate(expenditure = ifelse(object == \"1180\", 0, expenditure))\n\n#healthcare_costs_yearly <- healthcare_costs %>% group_by(fy, group) %>% summarise(healthcare_cost = sum(expenditure, na.rm = TRUE)/1000000) %>% select(-group)\n\n\n\n\n9.1.5 Local Transfers\nSeparate transfers to local from parent agencies that come from DOR(492) or Transportation (494). Treats muni revenue transfers as expenditures, not negative revenue.\nThe share of certain taxes levied state-wide at a common rate and then transferred to local governments. (Purely local-option taxes levied by specific local governments with the state acting as collection agent are NOT included.)\nThe six corresponding revenue items are:\n\nLocal share of Personal Income Tax\n\nIndividual Income Tax Pass-Through New 2021 (source 2582).\n\nLocal share of General Sales Tax\nPersonal Property Replacement Tax on Business Income\nPersonal Property Replacement Tax on Public Utilities\nLocal share of Motor Fuel Tax - Transportation Renewal Fund 0952\n\nUntil Dec 18. 2022, Local CURE was being aggregated into Revenue totals since the agency was the Department of Revenue. However the $371 million expenditure is for “LOC GOVT ARPA” and the revenue source that is Local CURE is also $371 million. Since it cancels out and is just passed through the state government, I am changing changing the fund_ab_in file so that in_ff=0 for the Local CURE fund. It also inflates the department of revenue expenditures in a misleading way when the expense is actually a transfer to local governments.\n\nDropping Local CURE fund from analysis results in a $371 million decrease in the department of Revenue (where the Local Government ARPA transfer money). The appropriation for it was over $740 million so some will probably be rolled over to FY23 too.\n\nIn the FY21 New and Reused Funds word document, 0325 Local CURE is described as “Created as a federal trust fund. The fund is established to receive transfers from either the disaster response and recovery fund or the state cure fund of federal funds received by the state. These transfers, subject to appropriation, will provide for the administration and payment of grants and expense reimbursements to units of local government. Revenues should be under Federal Other and expenditures under Commerce and Economic Opportunity.” - I propose changing it to exclude for both.\n\n\n\nCode\nexp_temp <- exp_temp %>% mutate(\n  agency = case_when(fund==\"0515\" & object==\"4470\" & type==\"08\" ~ \"971\", # income tax to local governments\n                     fund==\"0515\" & object==\"4491\" & type==\"08\" & sequence==\"00\" ~ \"971\", # object is shared revenue payments\n                     fund==\"0802\" & object==\"4491\" ~ \"972\", #pprt transfer\n                     fund==\"0515\" & object==\"4491\" & type==\"08\" & sequence==\"01\" ~ \"976\", #gst to local\n                     fund==\"0627\" & object==\"4472\"~ \"976\" , # public transportation fund but no observations exist\n                     fund==\"0648\" & object==\"4472\" ~ \"976\", # downstate public transportation, but doesn't exist\n                     fund==\"0515\" & object==\"4470\" & type==\"00\" ~ \"976\", # object 4470 is grants to local governments\n                    object==\"4491\" & (fund==\"0188\"|fund==\"0189\") ~ \"976\",\n                     fund==\"0187\" & object==\"4470\" ~ \"976\",\n                     fund==\"0186\" & object==\"4470\" ~ \"976\",\n                    object==\"4491\" & (fund==\"0413\"|fund==\"0414\"|fund==\"0415\")  ~ \"975\", #mft to local\n                  fund == \"0952\"~ \"975\", # Added Sept 29 2022 AWM. Transportation Renewal MFT\n                    TRUE ~ as.character(agency)),\n  \n  agency_name = case_when(agency == \"971\"~ \"INCOME TAX 1/10 TO LOCAL\",\n                          agency == \"972\" ~ \"PPRT TRANSFER TO LOCAL\",\n                          agency == \"975\" ~ \"MFT TO LOCAL\",\n                          agency == \"976\" ~ \"GST TO LOCAL\",\n                          TRUE~as.character(agency_name)),\n  group = ifelse(agency>\"970\" & agency < \"977\", as.character(agency), as.character(group)))\n\n\n\n\nCode\ntransfers_long <- exp_temp %>% \n  filter(group == \"971\" |group == \"972\" | group == \"975\" | group == \"976\")\n\ntransfers_long %>% \n  group_by(agency_name, group, fy) %>% \n  summarize(expenditure = sum(expenditure, na.rm=TRUE) )%>% \n  ggplot() + geom_line(aes(x=fy, y = expenditure, color=agency_name)) + labs(title = \"Transfers to Local Governments\", caption = \"Data Source: Illinois Office of the Comptroller\")\n\n\n\n\n\nCode\ntransfers <- transfers_long %>%\n  group_by(fy, group ) %>%\n  summarize(sum_expenditure = sum(expenditure)/1000000) %>%\n  pivot_wider(names_from = \"group\", values_from = \"sum_expenditure\", names_prefix = \"exp_\" )\n\nexp_temp <- anti_join(exp_temp, transfers_long)\n\n\ndropped_inff_0 <- exp_temp %>% filter(in_ff == 0)\n\nexp_temp <- exp_temp %>% filter(in_ff == 1) # drops in_ff = 0 funds AFTER dealing with net-revenue above\n\n\nThe Local Transfers from the Personal Property Replacement Tax (fund 802) increased over $2 billion from corporate income taxes alone. Personal property replacement taxes (PPRT) are revenues collected by the state of Illinois and paid to local governments to replace money that was lost by local governments when their powers to impose personal property taxes on corporations, partnerships, and other business entities were taken away.\n\n\n9.1.6 Debt Service\nDebt Service expenditures include interest payment on both short-term and long-term debt. We do not include escrow or principal payments.\nDecision from Sept 30 2022: We are no longer including short term principal payments as a cost; only interest on borrowing is a cost. Pre FY22 and the FY21 correction, we did include an escrow payment and principle payments as costs but not bond proceeds as revenues. This caused expenditures to be inflated because we were essentially counting debt twice - the principle payment and whatever the money was spent on in other expenditure categories, which was incorrect.\n\n\nCode\ndebt_drop <- exp_temp %>% \n  filter(object == \"8841\" |  object == \"8811\")  \n# escrow  OR  principle\n\n#debt_drop %>% group_by(fy) %>% summarize(sum = sum(expenditure)) %>% arrange(-fy)\n\n\ndebt_keep <- exp_temp %>% \n  filter(fund != \"0455\" & (object == \"8813\" | object == \"8800\" )) \n# examine the debt costs we want to include\n\n#debt_keep %>% group_by(fy) %>% summarize(sum = sum(expenditure)) %>% arrange(-fy) \n\n\nexp_temp <- anti_join(exp_temp, debt_drop) \nexp_temp <- anti_join(exp_temp, debt_keep)\n\ndebt_keep <- debt_keep %>%\n  mutate(\n    agency = ifelse(fund != \"0455\" & (object == \"8813\" | object == \"8800\"), \"903\", as.character(agency)),\n    group = ifelse(fund != \"0455\" & (object == \"8813\" | object == \"8800\"), \"903\", as.character(group)),\n    in_ff = ifelse(group == \"903\", 1, as.character(in_ff)))\n\ndebt_keep_yearly <- debt_keep %>% group_by(fy, group) %>% summarize(debt_cost = sum(expenditure,na.rm=TRUE)/1000000) %>% select(-group)\n\n\n\n\n9.1.7 Medicaid\nMedicaid. That portion of the Healthcare and Family Services (or Public Aid in earlier years, agency code 478) budget for Medical (appr_organization code 65) for awards and grants (object codes 4400 and 4900).\n\nState CURE will remain in the Medicaid expenditure category due to the nature of it being federal funds providing public health services and funding to locations that provide public services.\n\n\nUses same appropriation name of “HEALTHCARE PROVIDER RELIEF” and fund == 0793 and obj_seq_type == 49000000. So can defend the “mistake” of including healthcare provider relief as Medicaid expenditure.\n\n\n\n9.1.8 Add Other Fiscal Future group codes\n\n\nCode\nexp_temp <- exp_temp %>%\n  #mutate(agency = as.numeric(agency) ) %>%\n  # arrange(agency)%>%\n  mutate(\n    group = case_when(\n      agency>\"100\"& agency<\"200\" ~ \"910\", # legislative\n      \n      agency == \"528\"  | (agency>\"200\" & agency<\"300\") ~ \"920\", # judicial\n      pension>0  ~ \"901\", # pensions\n      (agency>\"309\" & agency<\"400\") ~ \"930\",    # elected officers\n      \n      agency == \"586\" ~ \"959\", # create new K-12 group\n\n      agency==\"402\" | agency==\"418\" | agency==\"478\" | agency==\"444\" | agency==\"482\" ~ as.character(agency), # aging, CFS, HFS, human services, public health\n      T ~ as.character(group))\n    ) %>%      \n\n  \n  mutate(group = case_when(\n    agency==\"478\" & (appr_org==\"01\" | appr_org == \"65\" | appr_org==\"88\") & (object==\"4900\" | object==\"4400\") ~ \"945\", # separates CHIP from health and human services and saves it as Medicaid\n    \n    agency == \"586\" & fund == \"0355\" ~ \"945\",  # 586 (Board of Edu) has special education which is part of medicaid\n    \n    # OLD CODE: agency == \"586\" & appr_org == \"18\" ~ \"945\", # Spec. Edu Medicaid Matching\n    \n    agency==\"425\" | agency==\"466\" | agency==\"546\" | agency==\"569\" | agency==\"578\" | agency==\"583\" | agency==\"591\" | agency==\"592\" | agency==\"493\" | agency==\"588\" ~ \"941\", # public safety & Corrections\n    \n    agency==\"420\" | agency==\"494\" |  agency==\"406\" | agency==\"557\" ~ as.character(agency), # econ devt & infra, tollway\n    \n    agency==\"511\" | agency==\"554\" | agency==\"574\" | agency==\"598\" ~ \"946\",  # Capital improvement\n    \n    agency==\"422\" | agency==\"532\" ~ as.character(agency), # environment & nat. resources\n    \n    agency==\"440\" | agency==\"446\" | agency==\"524\" | agency==\"563\"  ~ \"944\", # business regulation\n    \n    agency==\"492\" ~ \"492\", # revenue\n    \n    agency == \"416\" ~ \"416\", # central management services\n    agency==\"448\" & fy > 2016 ~ \"416\", #add DoIT to central management \n    \n    T ~ as.character(group))) %>%\n  \n  \n  mutate(group = case_when(\n    # agency==\"684\" | agency==\"691\"  ~ as.character(agency), # moved under higher education in next line. 11/28/2022 AWM\n    \n    agency==\"692\" | agency==\"695\" | agency == \"684\" |agency == \"691\" | (agency>\"599\" & agency<\"677\") ~ \"960\", # higher education\n    \n    agency==\"427\"  ~ as.character(agency), # employment security\n    \n    agency==\"507\"|  agency==\"442\" | agency==\"445\" | agency==\"452\" |agency==\"458\" | agency==\"497\" ~ \"948\", # other departments\n    \n    # other boards & Commissions\n    agency==\"503\" | agency==\"509\" | agency==\"510\" | agency==\"565\" |agency==\"517\" | agency==\"525\" | agency==\"526\" | agency==\"529\" | agency==\"537\" | agency==\"541\" | agency==\"542\" | agency==\"548\" |  agency==\"555\" | agency==\"558\" | agency==\"559\" | agency==\"562\" | agency==\"564\" | agency==\"568\" | agency==\"579\" | agency==\"580\" | agency==\"587\" | agency==\"590\" | agency==\"527\" | agency==\"585\" | agency==\"567\" | agency==\"571\" | agency==\"575\" | agency==\"540\" | agency==\"576\" | agency==\"564\" | agency==\"534\" | agency==\"520\" | agency==\"506\" | agency == \"533\" ~ \"949\", \n    \n    # non-pension expenditures of retirement funds moved to \"Other Departments\"\n    # should have removed pension expenditures already from exp_temp in Pensions step above\n    agency==\"131\" | agency==\"275\" | agency==\"589\" |agency==\"593\"|agency==\"594\"|agency==\"693\" ~ \"948\",\n    \n    T ~ as.character(group))) %>%\n\n  mutate(group_name = \n           case_when(\n             group == \"416\" ~ \"Central Management\",\n             group == \"478\" ~ \"Healthcare and Family Services\",\n             group == \"482\" ~ \"Public Health\",\n             group == \"900\" ~ \"NOT IN FRAME\",\n             group == \"901\" ~ \"STATE PENSION CONTRIBUTION\",\n             group == \"903\" ~ \"DEBT SERVICE\",\n             group == \"910\" ~ \"LEGISLATIVE\"  ,\n             group == \"920\" ~ \"JUDICIAL\" ,\n             group == \"930\" ~ \"ELECTED OFFICERS\" , \n             group == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             group == \"941\" ~ \"PUBLIC SAFETY\" ,\n             group == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n             group == \"943\" ~ \"CENTRAL SERVICES\",\n             group == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             group == \"945\" ~ \"MEDICAID\" ,\n             group == \"946\" ~ \"CAPITAL IMPROVEMENT\" , \n             group == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n             group == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             group == \"959\" ~ \"K-12 EDUCATION\" ,\n             group == \"960\" ~ \"UNIVERSITY EDUCATION\" ,\n             group == agency ~ as.character(group),\n             TRUE ~ \"Check name\"),\n         year = fy)\n\nexp_temp %>% filter(group_name == \"Check name\")\n\n\n\n\n  \n\n\n\nCode\n#write_csv(exp_temp, \"all_expenditures_recoded.csv\")\n\n\n\n\n\n\n\n\nImportant\n\n\n\nAll expenditures recoded but not aggregated: Allows for inspection of individual expenditures within larger categories. This stage of the data is extremely useful for investigating how individual items have been coded before they are aggregated into larger categories."
  },
  {
    "objectID": "Everything.html#modify-revenue-data",
    "href": "Everything.html#modify-revenue-data",
    "title": "9  All Code together",
    "section": "9.2 Modify Revenue data",
    "text": "9.2 Modify Revenue data\nRevenue Categories NOT included in Fiscal Futures:\n- 32. Garnishment-Levies. (State is fiduciary, not beneficiary.)\n- 45. Student Fees-Universities. (Excluded from state-level budget.)\n- 51. Retirement Contributions (of individuals and non-state entities).\n- 66. Proceeds, Investment Maturities. (Not sustainable flow.)\n- 72. Bond Issue Proceeds. (Not sustainable flow.)\n- 75. Inter-Agency Receipts.\n- 79. Cook County Intergovernmental Transfers. (State is not beneficiary.)\n- 98. Prior Year Refunds.\n- 99. Statutory Transfers.\nAll Other Sources\nExpanded to include the following smaller sources:\n- 30. Horse Racing Taxes & Fees.\n- 60. Other Grants and Contracts.\n- 63. Investment Income.\nFor aggregating revenue, use the rev_1998_2022 dataframe, join the funds_ab_in_2022 file to it, and then join the ioc_source_type file to the dataset. Remember: You need to update the funds_ab_in and ioc_source_type file every year!\n\n\nCode\n# recodes old agency numbers to consistent agency number\nrev_temp <- rev_temp %>% \n  mutate(agency = case_when(\n    (agency==\"438\"| agency==\"475\" |agency == \"505\") ~ \"440\",\n    # financial institution &  professional regulation &\n     # banks and real estate  --> coded as  financial and professional reg\n    agency == \"473\" ~ \"588\", # nuclear safety moved into IEMA\n    (agency ==\"531\" | agency ==\"577\") ~ \"532\", # coded as EPA\n    (agency ==\"556\" | agency == \"538\") ~ \"406\", # coded as agriculture\n    agency == \"560\" ~ \"592\", # IL finance authority (fire trucks and agriculture stuff)to state fire marshal\n    agency == \"570\" & fund == \"0011\" ~ \"494\",   # city of Chicago road fund to transportation\n    TRUE ~ (as.character(agency)))) \n\n\n\n9.2.1 Federal to State Transfers\nFor an deeper look at federal revenue to Illinois, Chapter 2.\n\n\nCode\n#rev_temp <- rev_temp %>% filter(in_ff==1)\n\nrev_temp <- rev_temp %>% \n  mutate(\n    rev_type = ifelse(rev_type==\"57\" & agency==\"478\" & (source==\"0618\"|source==\"2364\"|source==\"0660\"|source==\"1552\"| source==\"2306\"| source==\"2076\"|source==\"0676\"|source==\"0692\"), \"58\", rev_type),\n    rev_type_name = ifelse(rev_type==\"58\", \"Federal Medicaid Reimbursements\", rev_type_name),\n    rev_type = ifelse(rev_type==\"57\" & agency==\"494\", \"59\", rev_type),\n    rev_type_name = ifelse(rev_type==\"59\", \"Federal Transportation\", rev_type_name),\n    rev_type_name = ifelse(rev_type==\"57\", \"Federal - Other\", rev_type_name),\n    rev_type = ifelse(rev_type==\"6\", \"06\", rev_type),\n    rev_type = ifelse(rev_type==\"9\", \"09\", rev_type)) \n\nrev_temp %>% \n  filter(rev_type == \"58\" | rev_type == \"59\" | rev_type == \"57\") %>% \n  group_by(fy, rev_type, rev_type_name) %>% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000) %>% \n  ggplot() +\n      geom_recessions(xformay = \"numeric\",text = FALSE)+\n  geom_line(aes(x=fy, y=receipts,color=rev_type_name)) +\n      theme_bw() +\n  scale_y_continuous(labels = comma)+\n  labs(title = \"Federal to State Transfers\", \n       y = \"Millions of Dollars\", x = \"\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  )\n\n\n\n\n\nDropping State CURE Revenue\nThe Fiscal Futures model focuses on sustainable revenue sources. To understand our fiscal gap and outlook, we need to exclude these one time revenues. GOMB has emphasized that they have allocated COVID dollars to one time expenditures (unemployment trust fund, budget stabilization fund, etc.). The fiscal gap, graphs,and CAGRs have been recalculated in the [Drop COVID Dollars] section below.\n\nNOTE: The code chunk below only drops revenue sources with the source name of “Federal Stimulus Package” (which is the State and Local CURE revenue). Additional federal money went into other funds during the beginning of pandemic. Many departments saw increased grants and received other funds (e.g. ESSER funds)\n\n\n\nCode\nrev_temp <- rev_temp %>% mutate(covid_dollars = ifelse(source_name_AWM == \"FEDERAL STIMULUS PACKAGE\",1,0))\n\n\n\n\n9.2.2 Health Insurance Premiums from Employees\nInsurance premiums for employees is coded below but it is NOT used in the fiscal futures model. Employee and employer premiums are considered rev_51 and dropped from analysis in later step.\n\n0120 = ins prem-option life\n0120 = ins prem-optional life/univ\n0347 = optional health - HMO\n0348 = optional health - dental\n0349 = optional health - univ/local SI\n0350 = optional health - univ/local\n0351 = optional health - retirement\n0352 = optional health - retirement SI\n0353 = optional health - retire/dental\n0354 = optional health - retirement hmo\n2199-2209 = various HMOs, dental, health plans from Health Insurance Reserve (fund)\n\n\n\nCode\n#collect optional insurance premiums to fund 0907 for use in eehc expenditure  \nrev_temp <- rev_temp %>% \n  mutate(\n    #variable not used in aggregates, but could be interesting for other purposes\n    employee_premiums = ifelse(fund==\"0907\" & (source==\"0120\"| source==\"0121\"| (source>\"0345\" & source<\"0357\")|(source>\"2199\" & source<\"2209\")), 1, 0),\n    \n    # adds more rev_type codes\n    rev_type = case_when(\n      fund ==\"0427\" ~ \"12\", # pub utility tax\n      fund == \"0742\" | fund == \"0473\" ~ \"24\", # insurance and fees\n      fund == \"0976\" ~ \"36\",# receipts from rev producing\n      fund == \"0392\" |fund == \"0723\" ~ \"39\", # licenses and fees\n      fund == \"0656\" ~ \"78\", #all other rev sources\n      TRUE ~ as.character(rev_type)))\n# if not mentioned, then rev_type as it was\n\n\n\n# # optional insurance premiums = employee insurance premiums\n\n# emp_premium <- rev_temp %>%\n#   group_by(fy, employee_premiums) %>%\n#   summarize(employee_premiums_sum = sum(receipts)/1000000) %>%\n#   filter(employee_premiums == 1) %>%\n#   rename(year = fy) %>% \n#   select(-employee_premiums)\n\nemp_premium_long <- rev_temp %>%  filter(employee_premiums == 1)\n# 381 observations have employee premiums == 1\n\n\n# drops employee premiums from revenue\n# rev_temp <- rev_temp %>% filter(employee_premiums != 1)\n# should be dropped in next step since rev_type = 51\n\n\nNote: In FY21, employee premiums were subtracted from state healthcare costs on the expenditure side to calculate a “Net Healthcare Cost” but that methodology has been discontinued. Totals were practically unchanged: revenue from employee premiums is also very small.\n\n\n9.2.3 Transfers in and Out:\nFunds that hold and disperse local taxes or fees are dropped from the analysis. Then other excluded revenue types are also dropped.\nDrops Blank, Student Fees, Retirement contributions, proceeds/investments, bond issue proceeds, interagency receipts, cook IGT, Prior year refunds:\n\n\nCode\nrev_temp <- rev_temp %>% \n  filter(in_ff == 1) %>% \n  mutate(local = ifelse(is.na(local), 0, local)) %>% # drops all revenue observations that were coded as \"local == 1\"\n  filter(local != 1)\n\n# 1175 doesnt exist?\nin_from_out <- c(\"0847\", \"0867\", \"1175\", \"1176\", \"1177\", \"1178\", \"1181\", \"1182\", \"1582\", \"1592\", \"1745\", \"1982\", \"2174\", \"2264\")\n\n# what does this actually include:\n# all are items with rev_type = 75 originally. \nin_out_df <- rev_temp %>%\n  mutate(infromout = ifelse(source %in% in_from_out, 1, 0)) %>%\n  filter(infromout == 1)\n\nrev_temp <- rev_temp %>% \n  mutate(rev_type_new = ifelse(source %in% in_from_out, \"76\", rev_type))\n# if source contains any of the codes in in_from_out, code them as 76 (all other rev).\n# I end up excluding rev_76 in later steps\n\n\n\n\nCode\n# revenue types to drop\ndrop_type <- c(\"32\", \"45\", \"51\", \n               \"66\", \"72\", \"75\", \"79\", \"98\")\n\n# drops Blank, Student Fees, Retirement contributions, proceeds/investments,\n# bond issue proceeds, interagency receipts, cook IGT, Prior year refunds.\n\n\nrev_temp <- rev_temp %>% filter(!rev_type_new %in% drop_type)\n# keep observations that do not have a revenue type mentioned in drop_type\n\ntable(rev_temp$rev_type_new)\n\n\n\n   02    03    06    09    12    15    18    21    24    27    30    31    33 \n  161   124   828   127   575   258    45  1420   450    76   659   124   130 \n   35    36    39    42    48    54    57    58    59    60    63    76    78 \n  660  5152  9047  2755    31  1239  6450   620   226   103  5081   154 11262 \n   99 \n  963 \n\n\nCode\nrev_temp %>% \n  group_by(fy, rev_type_new) %>% \n  summarize(total_reciepts = sum(receipts)/1000000) %>%\n  pivot_wider(names_from = rev_type_new, values_from = total_reciepts, names_prefix = \"rev_\") \n\n\n\n\n  \n\n\n\nCode\n# combines smallest 4  categories to to \"Other\"\n# they were the 4 smallest in past years, are they still the 4 smallest? \n\nrev_temp <- rev_temp %>%  \n mutate(rev_type_new = ifelse(rev_type==\"30\" | rev_type==\"60\" | rev_type==\"63\" | rev_type==\"76\", \"78\", rev_type_new))\n\n\n#table(rev_temp$rev_type_new)  # check work\n\n\n\nrm(rev_1998_2022)\nrm(exp_1998_2022)\n\n\n#write.csv(exp_temp, \"exp_fy22_recoded_12192022.csv\")\n#write.csv(rev_temp, \"rev_fy22_recoded_12192022.csv\")"
  },
  {
    "objectID": "Everything.html#pivoting-and-merging",
    "href": "Everything.html#pivoting-and-merging",
    "title": "9  All Code together",
    "section": "9.3 Pivoting and Merging",
    "text": "9.3 Pivoting and Merging\n\nLocal Government Transfers (exp_970) should be on the expenditure side\n\n\n9.3.1 Revenues\nI chose to drop rev_76 for Transfers in and Out because I do not understand why that step occurs in the previously used Stata code. Rev_76 was created and included in rev_78 for All Other Revenues in old Stata code for years before FY21 but that method has been discontinued for FY22. Including vs excluding rev_76 does not change the overall interpretation of the fiscal gap.\n\n\nCode\nff_rev <- rev_temp %>% \n  group_by(rev_type_new, fy) %>% \n  summarize(sum_receipts = sum(receipts, na.rm=TRUE)/1000000 ) %>%\n  pivot_wider(names_from = \"rev_type_new\", values_from = \"sum_receipts\", names_prefix = \"rev_\")\n\nff_rev<- left_join(ff_rev, tax_refund)\n\n#ff_rev <- left_join(ff_rev, pension2_fy22, by=c(\"fy\" = \"year\"))\n\n#ff_rev <- left_join(ff_rev, eehc2_amt) \nff_rev <- mutate_all(ff_rev, ~replace_na(.,0))\n\n\nff_rev <- ff_rev %>%\n  mutate(rev_02 = rev_02 - ref_02,\n         rev_03 = rev_03 - ref_03,\n         rev_06 = rev_06 - ref_06,\n         rev_09 = rev_09 - ref_09,\n         rev_21 = rev_21 - ref_21,\n         rev_24 = rev_24 - ref_24,\n         rev_35 = rev_35 - ref_35\n\n      #   rev_78new = rev_78 #+ pension_amt #+ eehc\n         ) %>% \n  select(-c(ref_02:ref_35, rev_99, rev_NA, rev_76#, pension_amt , rev_76,\n          #  , eehc\n            ))\n\nff_rev\n\n\n\n\n  \n\n\n\nSince I already pivot_wider()ed the table in the previous code chunk, I now change each column’s name by using rename() to set new variable names. Ideally the final dataframe would have both the variable name and the variable label but I have not done that yet.\n\n\nCode\naggregate_rev_labels <- ff_rev %>%\n  rename(\"INDIVIDUAL INCOME TAXES, gross of local, net of refunds\" = rev_02,\n         \"CORPORATE INCOME TAXES, gross of PPRT, net of refunds\" = rev_03,\n         \"SALES TAXES, gross of local share\" = rev_06 ,\n         \"MOTOR FUEL TAX, gross of local share, net of refunds\" = rev_09 ,\n         \"PUBLIC UTILITY TAXES, gross of PPRT\" = rev_12,\n         \"CIGARETTE TAXES\" = rev_15 ,\n         \"LIQUOR GALLONAGE TAXES\" = rev_18,\n         \"INHERITANCE TAX\" = rev_21,\n         \"INSURANCE TAXES&FEES&LICENSES, net of refunds\" = rev_24 ,\n         \"CORP FRANCHISE TAXES & FEES\" = rev_27,\n       # \"HORSE RACING TAXES & FEES\" = rev_30,  # in Other\n         \"MEDICAL PROVIDER ASSESSMENTS\" = rev_31 ,\n         # \"GARNISHMENT-LEVIES \" = rev_32 , # dropped\n         \"LOTTERY RECEIPTS\" = rev_33 ,\n         \"OTHER TAXES\" = rev_35,\n         \"RECEIPTS FROM REVENUE PRODUCNG\" = rev_36, \n         \"LICENSES, FEES & REGISTRATIONS\" = rev_39 ,\n         \"MOTOR VEHICLE AND OPERATORS\" = rev_42 ,\n         #  \"STUDENT FEES-UNIVERSITIES\" = rev_45,   # dropped\n         \"RIVERBOAT WAGERING TAXES\" = rev_48 ,\n         # \"RETIREMENT CONTRIBUTIONS \" = rev_51, # dropped\n         \"GIFTS AND BEQUESTS\" = rev_54, \n         \"FEDERAL OTHER\" = rev_57 ,\n         \"FEDERAL MEDICAID\" = rev_58, \n         \"FEDERAL TRANSPORTATION\" = rev_59 ,\n         #\"OTHER GRANTS AND CONTRACTS\" = rev_60, #other\n       # \"INVESTMENT INCOME\" = rev_63, # other\n         # \"PROCEEDS,INVESTMENT MATURITIES\" = rev_66 , #dropped\n         # \"BOND ISSUE PROCEEDS\" = rev_72,  #dropped\n         # \"INTER-AGENCY RECEIPTS\" = rev_75,  #dropped\n      #  \"TRANSFER IN FROM OUT FUNDS\" = rev_76,  #other\n         \"ALL OTHER SOURCES\" = rev_78,\n         # \"COOK COUNTY IGT\" = rev_79, #dropped\n         # \"PRIOR YEAR REFUNDS\" = rev_98 #dropped\n  ) \n\naggregate_rev_labels\n\n\n\n\n  \n\n\n\n\n\n9.3.2 Expenditures\nCreate exp_970 for all local government transfers (exp_971 + exp_972 + exp_975 + exp_976).\nCreate state employee healthcare costs that reflects the health costs minus the optional insurance premiums that came in (904_new=904−med_option_amt_recent). Do not do this. This was done for FY21 only and will not be done again. Small differences in overall Fiscal Gap from methodology change.\n\n\nCode\nff_exp <- exp_temp %>% \n  group_by(fy, group) %>% \n  summarize(sum_expenditures = sum(expenditure, na.rm=TRUE)/1000000 ) %>%\n  pivot_wider(names_from = \"group\", values_from = \"sum_expenditures\", names_prefix = \"exp_\")%>%\n  \n    left_join(debt_keep_yearly) %>%\n  mutate(exp_903 = debt_cost) %>%\n\n  #  left_join(healthcare_costs_yearly) %>%\n\n  # join state employee healthcare and subtract employee premiums\n  # left_join(emp_premium, by = c(\"fy\" = \"year\")) %>%\n#  mutate(exp_904_new = (`healthcare_cost` - `employee_premiums_sum`)) %>% # state employee healthcare premiums\n  \n # left_join(retirement_contributions) %>%\n  #    mutate(exp_901_new = exp_901 - contributions/1000000) %>% #employee pension contributions\n\n\n  # join local transfers and create exp_970\n  left_join(transfers) %>%\n  mutate(exp_970 = exp_971 + exp_972  + exp_975 + exp_976)\n\nff_exp<- ff_exp %>% \n  select(-c(debt_cost, exp_971:exp_976)) # drop unwanted columns\n\nff_exp"
  },
  {
    "objectID": "Everything.html#change-from-previous-year",
    "href": "Everything.html#change-from-previous-year",
    "title": "9  All Code together",
    "section": "10.1 Change from Previous Year",
    "text": "10.1 Change from Previous Year\nEach year, you will need to update the CAGR formulas! Change the filter() year.\ncalc_cagr is a function created for calculating the CAGRs for different spans of time.\n\n\nCode\nexp_totals <- ff_exp %>% rowwise() %>% mutate(exp_TOTALS = sum(across(exp_402:exp_970)))\nrev_totals <- ff_rev %>%    rowwise() %>% \n  mutate(rev_TOTALS = sum(across(rev_02:rev_78)))\n\n\n\nrev_long <- pivot_longer(rev_totals, rev_02:rev_TOTALS, names_to = c(\"type\",\"Category\"), values_to = \"Dollars\", names_sep = \"_\") %>% \n  rename(Year = fy) %>%\n  mutate(Category_name = case_when(\n    Category == \"02\" ~ \"INDIVIDUAL INCOME TAXES\" ,\n    Category == \"03\" ~ \"CORPORATE INCOME TAXES\" ,\n    Category == \"06\" ~ \"SALES TAXES\" ,\n    Category == \"09\" ~ \"MOTOR FUEL TAX\" ,\n    Category == \"12\" ~ \"PUBLIC UTILITY TAXES\" ,\n    Category == \"15\" ~ \"CIGARETTE TAXES\" ,\n    Category == \"18\" ~ \"LIQUOR GALLONAGE TAXES\" ,\n    Category == \"21\" ~ \"INHERITANCE TAX\" ,\n    Category == \"24\" ~ \"INSURANCE TAXES&FEES&LICENSES\" ,\n    Category == \"27\" ~ \"CORP FRANCHISE TAXES & FEES\" ,\n    Category == \"30\" ~ \"HORSE RACING TAXES & FEES\",  # in Other\n    Category == \"31\" ~ \"MEDICAL PROVIDER ASSESSMENTS\" ,\n    Category == \"32\" ~ \"GARNISHMENT-LEVIES\" , # dropped\n    Category == \"33\" ~  \"LOTTERY RECEIPTS\" ,\n    Category == \"35\" ~  \"OTHER TAXES\" ,\n    Category == \"36\" ~  \"RECEIPTS FROM REVENUE PRODUCING\", \n    Category == \"39\" ~  \"LICENSES, FEES & REGISTRATIONS\" ,\n    Category == \"42\" ~  \"MOTOR VEHICLE AND OPERATORS\" ,\n    Category == \"45\" ~  \"STUDENT FEES-UNIVERSITIES\",   # dropped\n    Category == \"48\" ~  \"RIVERBOAT WAGERING TAXES\" ,\n    Category == \"51\" ~  \"RETIREMENT CONTRIBUTIONS\" , # dropped\n    Category == \"54\" ~ \"GIFTS AND BEQUESTS\", \n    Category == \"57\" ~  \"FEDERAL OTHER\" ,\n    Category == \"58\" ~  \"FEDERAL MEDICAID\", \n    Category == \"59\" ~  \"FEDERAL TRANSPORTATION\" ,\n    Category == \"60\" ~  \"OTHER GRANTS AND CONTRACTS\", #other\n    Category == \"63\" ~  \"INVESTMENT INCOME\", # other\n    Category == \"66\" ~ \"PROCEEDS,INVESTMENT MATURITIES\" , #dropped\n    Category == \"72\" ~ \"BOND ISSUE PROCEEDS\",  #dropped\n    Category == \"75\" ~  \"INTER-AGENCY RECEIPTS \",  #dropped\n    Category == \"76\" ~  \"TRANSFER IN FROM OUT FUNDS\",  #other\n    Category == \"78\" ~  \"ALL OTHER SOURCES\" ,\n    Category == \"79\" ~   \"COOK COUNTY IGT\", #dropped\n    Category == \"98\" ~  \"PRIOR YEAR REFUNDS\", #dropped\nCategory == \"TOTALS\" ~ \"Total\"\n\n  ) ) %>% \n  select(-type, -Category) %>%  # drop extra columns type and Category number\n  group_by(Year, Category_name) %>%\n  summarise(Dollars= round(sum(Dollars),digits=2)) %>% \n  mutate(Category_name = str_to_title(Category_name))\n\n# creates wide version of table where each revenue source is a column\nrevenue_wide2 <- rev_long %>% pivot_wider(names_from = Category_name, \n              values_from = Dollars) %>%\n#  relocate(\"Other Revenue Sources **\", .after = last_col()) %>%\n  relocate(\"Total\", .after =  last_col())\n\n\n\n\nCode\nexp_long <- pivot_longer(exp_totals, exp_402:exp_TOTALS , names_to = c(\"type\", \"Category\"), values_to = \"Dollars\", names_sep = \"_\") %>% \n  rename(Year = fy ) %>% \n  mutate(Category_name = \n           case_when(\n            Category == \"402\" ~ \"AGING\" ,\n            Category == \"406\" ~ \"AGRICULTURE\", \n             Category == \"416\" ~ \"Central Management\",\n            Category == \"418\" ~ \"CHILDREN AND FAMILY SERVICES\", \n             Category == \"420\" ~ \"Community Development\",\n            Category == \"422\" ~ \"NATURAL RESOURCES\" ,\n             Category == \"426\" ~ \"CORRECTIONS\",\n            Category == \"427\" ~ \"EMPLOYMENT SECURITY\" ,\n             Category == \"444\" ~ \"Human Services\" ,\n           Category == \"478\" ~ \"HEALTHCARE & FAM SER NET OF MEDICAID\", \n            Category == \"482\" ~ \"PUBLIC HEALTH\", \n            Category == \"492\" ~ \"REVENUE\", \n             Category == \"494\" ~ \"Transportation\" ,\n             Category == \"532\" ~ \"ENVIRONMENTAL PROTECT AGENCY\" ,\n             Category == \"557\" ~ \"Tollway\" ,\n             Category == \"684\" ~ \"IL COMMUNITY COLLEGE BOARD\", \n             Category == \"691\" ~ \"IL STUDENT ASSISTANCE COMM\" ,\n             Category == \"900\" ~ \"NOT IN FRAME\",\n             Category == \"901\" ~ \"State Pension Contribution\",\n             Category == \"903\" ~ \"Debt Service\",\n             Category == \"904\" ~ \"State Employee Healthcare\",\n             Category == \"910\" ~ \"LEGISLATIVE\"  ,\n             Category == \"920\" ~ \"JUDICIAL\" ,\n             Category == \"930\" ~ \"ELECTED OFFICERS\" , \n             Category == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             Category == \"941\" ~ \"Public Safety\" ,\n             Category == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n             Category == \"943\" ~ \"CENTRAL SERVICES\",\n             Category == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             Category == \"945\" ~ \"Medicaid\" ,\n             Category == \"946\" ~ \"Capital Improvement\" , \n             Category == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n             Category == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             Category == \"959\" ~ \"K-12 Education\" ,\n             Category == \"960\" ~ \"UNIVERSITY EDUCATION\",\n             Category == \"970\" ~ \"Local Govt Revenue Sharing\",\n          Category == \"TOTALS\" ~ \"Total\") #,T ~ \"All Other Expenditures **\")\n           ) %>% \n  select(-type, -Category) %>% \n  group_by(Year, Category_name) %>% \n  summarise(Dollars= round(sum(Dollars),digits=2)) %>% \n  mutate(Category_name = str_to_title(Category_name))\n\nexpenditure_wide2 <- exp_long%>% \n  pivot_wider(names_from = Category_name, \n              values_from = Dollars) %>%\n  #relocate(\"All Other Expenditures **\", .after = last_col()) %>%\n  relocate(\"Total\", .after =  last_col())\n\n\n# function for calculating the CAGR\ncalc_cagr <- function(df, n) {\n  df <- exp_long %>%\n    #select(-type) %>%\n    arrange(Category_name, Year) %>%\n    group_by(Category_name) %>%\n    mutate(cagr = ((`Dollars` / lag(`Dollars`, n)) ^ (1 / n)) - 1)\n\n  return(df)\n}\n\n# This works for one variable at a time\ncagr_24 <- calc_cagr(exp_long, 24) %>% \n  # group_by(Category) %>%\n  summarize(cagr_24 = round(sum(cagr*100, na.rm = TRUE), 2))\n\ncagr23_precovid <- exp_long %>%\n  filter(Year <= 2019) %>%\n  calc_cagr(21) %>% \n  summarize(cagr_21 = round(sum(cagr*100, na.rm = TRUE), 2))\n\n\n\ncagr_10 <- calc_cagr(exp_long, 10) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_10 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_5 <- calc_cagr(exp_long, 5) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_5 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_3 <- calc_cagr(exp_long, 3) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_3 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_2 <- calc_cagr(exp_long, 2) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_2 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_1 <- calc_cagr(exp_long, 1) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_1 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\nCAGR_expenditures_summary_tot <- data.frame(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_24 ) %>% \n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %>% \n  rename(\"Expenditure Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10,\"24 Year CAGR\" = cagr_24 )\n\nmove_to_last <- function(df, n) df[c(setdiff(seq_len(nrow(df)), n), n), ]\n\nCAGR_expenditures_summary_tot <- move_to_last(CAGR_expenditures_summary_tot, 29) \n\n#CAGR_expenditures_summary_tot <-   select(CAGR_expenditures_summary_tot, -1) \n\nCAGR_expenditures_summary_tot%>%   \n  kbl(caption = \"CAGR Calculations for All Expenditure Categories\" , row.names=FALSE) %>% \n     kable_classic() \n\n\n\n\nCAGR Calculations for All Expenditure Categories\n \n  \n    Expenditure Category \n    1 Year CAGR \n    2 Year CAGR \n    3 Year CAGR \n    5 Year CAGR \n    10 Year CAGR \n    24 Year CAGR \n  \n \n\n  \n    Aging \n    6.35 \n    6.87 \n    7.18 \n    -0.65 \n    4.33 \n    7.49 \n  \n  \n    Agriculture \n    43.05 \n    15.59 \n    8.10 \n    6.53 \n    3.25 \n    1.19 \n  \n  \n    Bus & Profession Regulation \n    9.53 \n    6.39 \n    3.66 \n    1.97 \n    -1.55 \n    1.48 \n  \n  \n    Capital Improvement \n    -6.53 \n    17.27 \n    18.12 \n    10.65 \n    -3.63 \n    2.15 \n  \n  \n    Central Management \n    2.05 \n    1.06 \n    8.53 \n    1.18 \n    4.71 \n    4.46 \n  \n  \n    Children And Family Services \n    3.98 \n    4.60 \n    5.53 \n    4.71 \n    1.30 \n    0.17 \n  \n  \n    Community Development \n    -15.16 \n    51.43 \n    35.14 \n    16.98 \n    3.31 \n    4.77 \n  \n  \n    Corrections \n    1.52 \n    3.16 \n    1.13 \n    5.12 \n    2.48 \n    2.13 \n  \n  \n    Debt Service \n    -0.83 \n    1.59 \n    -0.70 \n    1.65 \n    1.19 \n    6.11 \n  \n  \n    Elected Officers \n    7.38 \n    7.22 \n    3.48 \n    6.78 \n    4.29 \n    3.88 \n  \n  \n    Employment Security \n    -2.77 \n    16.01 \n    12.87 \n    10.41 \n    1.65 \n    2.37 \n  \n  \n    Environmental Protect Agency \n    -1.98 \n    -4.09 \n    -7.73 \n    -6.49 \n    0.12 \n    3.21 \n  \n  \n    Healthcare & Fam Ser Net Of Medicaid \n    2.95 \n    7.37 \n    -6.65 \n    0.81 \n    -2.87 \n    5.45 \n  \n  \n    Human Services \n    15.30 \n    12.23 \n    10.33 \n    6.90 \n    3.66 \n    2.75 \n  \n  \n    Judicial \n    4.20 \n    6.41 \n    9.15 \n    5.11 \n    3.40 \n    2.99 \n  \n  \n    K-12 Education \n    14.51 \n    11.07 \n    9.44 \n    7.39 \n    4.53 \n    4.30 \n  \n  \n    Legislative \n    24.13 \n    13.97 \n    12.12 \n    8.15 \n    2.76 \n    3.35 \n  \n  \n    Local Govt Revenue Sharing \n    44.48 \n    26.75 \n    16.73 \n    9.93 \n    6.42 \n    4.66 \n  \n  \n    Medicaid \n    10.11 \n    13.93 \n    15.00 \n    10.14 \n    8.99 \n    7.25 \n  \n  \n    Natural Resources \n    3.90 \n    4.22 \n    2.19 \n    5.39 \n    2.85 \n    1.76 \n  \n  \n    Other Boards & Commissions \n    2.96 \n    10.05 \n    3.68 \n    3.20 \n    -2.54 \n    4.23 \n  \n  \n    Other Departments \n    1.94 \n    4.84 \n    8.22 \n    5.63 \n    7.06 \n    9.10 \n  \n  \n    Public Health \n    -0.16 \n    29.65 \n    29.12 \n    20.32 \n    8.71 \n    7.63 \n  \n  \n    Public Safety \n    -9.74 \n    10.35 \n    21.41 \n    17.00 \n    8.62 \n    6.11 \n  \n  \n    Revenue \n    11.96 \n    29.18 \n    46.38 \n    30.84 \n    14.11 \n    6.43 \n  \n  \n    State Employee Healthcare \n    4.47 \n    0.47 \n    -1.52 \n    -1.95 \n    2.49 \n    6.08 \n  \n  \n    State Pension Contribution \n    15.42 \n    10.80 \n    9.67 \n    9.26 \n    9.38 \n    10.76 \n  \n  \n    Tollway \n    7.21 \n    4.76 \n    6.32 \n    3.60 \n    11.66 \n    7.54 \n  \n  \n    Transportation \n    -18.40 \n    3.31 \n    8.10 \n    0.84 \n    -0.24 \n    3.35 \n  \n  \n    University Education \n    4.72 \n    2.44 \n    3.92 \n    -0.72 \n    -0.76 \n    0.44 \n  \n  \n    Total \n    9.72 \n    11.73 \n    11.04 \n    7.27 \n    5.46 \n    5.05 \n  \n\n\n\n\n\n\n\nCode\ncalc_cagr <- function(df, n) {\n  df <- rev_long %>%\n    arrange(Category_name, Year) %>%\n    group_by(Category_name) %>%\n    mutate(cagr = ((Dollars / lag(Dollars, n)) ^ (1 / n)) - 1)\n\n  return(df)\n}\n\n# This works for one variable at a time\ncagr_24 <- calc_cagr(rev_long, 24) %>% \n     # group_by(Category) %>%\n  summarize(cagr_24 = round(sum(cagr*100, na.rm = TRUE), 2))\n\ncagr_10 <- calc_cagr(rev_long, 10) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_10 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_5 <- calc_cagr(rev_long, 5) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_5 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_3 <- calc_cagr(rev_long, 3) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_3 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_2 <- calc_cagr(rev_long, 2) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_2 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\n cagr_1 <- calc_cagr(rev_long, 1) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_1 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\nCAGR_revenue_summary_tot <- data.frame(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_24) %>%   \n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %>% \n  rename(\"Revenue Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10,\"24 Year CAGR\" = cagr_24 )\n\nCAGR_revenue_summary_tot <- move_to_last(CAGR_revenue_summary_tot,1)\nCAGR_revenue_summary_tot <- move_to_last(CAGR_revenue_summary_tot,22)\n\nCAGR_revenue_summary_tot %>% \n  kbl(caption = \"CAGR Calculations for All Revenue Sources\", row.names = FALSE) %>% \n     kable_classic() \n\n\n\n\nCAGR Calculations for All Revenue Sources\n \n  \n    Revenue Category \n    1 Year CAGR \n    2 Year CAGR \n    3 Year CAGR \n    5 Year CAGR \n    10 Year CAGR \n    24 Year CAGR \n  \n \n\n  \n    Cigarette Taxes \n    -8.25 \n    -0.54 \n    3.02 \n    1.49 \n    3.33 \n    2.51 \n  \n  \n    Corp Franchise Taxes & Fees \n    -32.40 \n    1.22 \n    -4.37 \n    0.85 \n    1.18 \n    2.55 \n  \n  \n    Corporate Income Taxes \n    76.66 \n    72.77 \n    38.19 \n    32.31 \n    13.59 \n    7.70 \n  \n  \n    Federal Medicaid \n    8.48 \n    17.30 \n    16.43 \n    12.76 \n    11.30 \n    7.52 \n  \n  \n    Federal Other \n    110.44 \n    41.31 \n    48.30 \n    26.71 \n    11.69 \n    7.09 \n  \n  \n    Federal Transportation \n    -22.95 \n    1.39 \n    10.40 \n    -2.73 \n    -0.06 \n    3.33 \n  \n  \n    Gifts And Bequests \n    23.76 \n    42.12 \n    18.49 \n    10.46 \n    10.65 \n    11.43 \n  \n  \n    Individual Income Taxes \n    12.60 \n    16.35 \n    9.25 \n    15.22 \n    5.36 \n    5.68 \n  \n  \n    Inheritance Tax \n    35.98 \n    48.20 \n    16.36 \n    18.47 \n    10.12 \n    3.74 \n  \n  \n    Insurance Taxes&Fees&Licenses \n    -3.42 \n    12.76 \n    5.20 \n    2.79 \n    3.20 \n    6.56 \n  \n  \n    Licenses, Fees & Registrations \n    -4.32 \n    15.28 \n    16.98 \n    9.34 \n    6.27 \n    7.89 \n  \n  \n    Liquor Gallonage Taxes \n    2.53 \n    2.81 \n    2.49 \n    1.69 \n    1.37 \n    7.45 \n  \n  \n    Lottery Receipts \n    -6.17 \n    9.62 \n    1.63 \n    2.27 \n    0.90 \n    2.15 \n  \n  \n    Medical Provider Assessments \n    -1.98 \n    3.67 \n    16.26 \n    11.80 \n    8.33 \n    8.36 \n  \n  \n    Motor Fuel Tax \n    6.12 \n    4.36 \n    23.16 \n    13.42 \n    6.98 \n    2.78 \n  \n  \n    Motor Vehicle And Operators \n    -5.59 \n    4.66 \n    -0.04 \n    0.15 \n    0.64 \n    3.21 \n  \n  \n    Other Taxes \n    63.89 \n    32.74 \n    17.36 \n    13.92 \n    17.13 \n    7.87 \n  \n  \n    Public Utility Taxes \n    3.09 \n    -0.43 \n    -1.43 \n    0.22 \n    -0.48 \n    0.70 \n  \n  \n    Receipts From Revenue Producing \n    3.01 \n    4.78 \n    -2.68 \n    1.45 \n    3.49 \n    5.07 \n  \n  \n    Riverboat Wagering Taxes \n    80.77 \n    -1.03 \n    -8.90 \n    -6.18 \n    -4.20 \n    1.75 \n  \n  \n    Sales Taxes \n    11.29 \n    12.22 \n    7.40 \n    6.27 \n    4.43 \n    3.23 \n  \n  \n    All Other Sources \n    37.70 \n    12.92 \n    13.64 \n    8.08 \n    6.29 \n    4.54 \n  \n  \n    Total \n    23.12 \n    20.27 \n    16.14 \n    13.00 \n    7.23 \n    5.50 \n  \n\n\n\n\n\nCode\nrm(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_24)\n\n\n\n\nCode\nrevenue_change2 <- rev_long %>%\n  #select(-c(Category)) %>%\n  filter(Year > 2020) %>%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %>%\n  mutate(\n    \"FY 2022 ($ billions)\" = round(Dollars_2022/1000, digits = 1),\n    \"FY 2021 ($ billions)\" = round(Dollars_2021/1000, digits = 1),\n\n#    \"Change from 2021 to 2022\" = round(Dollars_2022 - Dollars_2021, digits = 2),\n         \"1-Year Change\" = round(((Dollars_2022 -Dollars_2021)/Dollars_2021*100), digits = 2)) %>%\n  left_join(CAGR_revenue_summary_tot, by = c(\"Category_name\" = \"Revenue Category\")) %>% \n    arrange(-`FY 2022 ($ billions)`)%>%\n  #select(-c(Dollars_2021, Dollars_2021, `1 Year CAGR`:`10 Year CAGR`)) %>%\n  rename( \"24-Year CAGR\" = `24 Year CAGR`, \n          \"Revenue Category\" = Category_name ) %>%\n  select(-c(Dollars_2021, Dollars_2022, `1 Year CAGR`:`10 Year CAGR`)) \n\n\nrevenue_change2 <- move_to_last(revenue_change2,8)\nrevenue_change2 <- move_to_last(revenue_change2,1)\n\nrevenue_change2 %>% \n  kbl(caption = \"Table 1. Yearly Change in Revenue\", row.names = FALSE) %>% \n   kable_classic() %>%\n    row_spec(23, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nTable 1. Yearly Change in Revenue\n \n  \n    Revenue Category \n    FY 2022 ($ billions) \n    FY 2021 ($ billions) \n    1-Year Change \n    24-Year CAGR \n  \n \n\n  \n    Individual Income Taxes \n    23.8 \n    21.2 \n    12.60 \n    5.68 \n  \n  \n    Federal Other \n    19.4 \n    9.2 \n    110.44 \n    7.09 \n  \n  \n    Federal Medicaid \n    19.0 \n    17.6 \n    8.48 \n    7.52 \n  \n  \n    Sales Taxes \n    15.4 \n    13.9 \n    11.29 \n    3.23 \n  \n  \n    Corporate Income Taxes \n    9.7 \n    5.5 \n    76.66 \n    7.70 \n  \n  \n    Medical Provider Assessments \n    3.7 \n    3.8 \n    -1.98 \n    8.36 \n  \n  \n    Motor Fuel Tax \n    2.5 \n    2.4 \n    6.12 \n    2.78 \n  \n  \n    Receipts From Revenue Producing \n    2.4 \n    2.3 \n    3.01 \n    5.07 \n  \n  \n    Gifts And Bequests \n    1.9 \n    1.5 \n    23.76 \n    11.43 \n  \n  \n    Licenses, Fees & Registrations \n    1.9 \n    2.0 \n    -4.32 \n    7.89 \n  \n  \n    Federal Transportation \n    1.8 \n    2.4 \n    -22.95 \n    3.33 \n  \n  \n    Motor Vehicle And Operators \n    1.6 \n    1.7 \n    -5.59 \n    3.21 \n  \n  \n    Lottery Receipts \n    1.4 \n    1.5 \n    -6.17 \n    2.15 \n  \n  \n    Other Taxes \n    1.4 \n    0.9 \n    63.89 \n    7.87 \n  \n  \n    Public Utility Taxes \n    1.4 \n    1.4 \n    3.09 \n    0.70 \n  \n  \n    Cigarette Taxes \n    0.8 \n    0.9 \n    -8.25 \n    2.51 \n  \n  \n    Inheritance Tax \n    0.6 \n    0.4 \n    35.98 \n    3.74 \n  \n  \n    Insurance Taxes&Fees&Licenses \n    0.6 \n    0.6 \n    -3.42 \n    6.56 \n  \n  \n    Liquor Gallonage Taxes \n    0.3 \n    0.3 \n    2.53 \n    7.45 \n  \n  \n    Riverboat Wagering Taxes \n    0.3 \n    0.2 \n    80.77 \n    1.75 \n  \n  \n    Corp Franchise Taxes & Fees \n    0.2 \n    0.3 \n    -32.40 \n    2.55 \n  \n  \n    All Other Sources \n    2.7 \n    2.0 \n    37.70 \n    4.54 \n  \n  \n    Total \n    113.0 \n    91.8 \n    23.12 \n    5.50 \n  \n\n\n\n\n\nCode\nexpenditure_change2 <- exp_long %>%\n  #select(-c(type,Category)) %>%\n  filter(Year > 2020) %>%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %>%\n  mutate(\n    \"FY 2022 ($ billions)\" = round(Dollars_2022/1000, digits = 1),\n    \"FY 2021 ($ billions)\" = round(Dollars_2021/1000, digits = 1),\n\n  #  \"Change from 2021 to 2022\" = Dollars_2022 - Dollars_2021,\n         \"1-Year Change\" = round((Dollars_2022 -Dollars_2021)/Dollars_2021*100, digits = 2) )%>%\n  left_join(CAGR_expenditures_summary_tot, by = c(\"Category_name\" = \"Expenditure Category\")) %>% \n  arrange(-`FY 2022 ($ billions)`)%>%\n  select(-c(Dollars_2022, Dollars_2021, `1 Year CAGR`:`10 Year CAGR`)) %>%\n  rename( \"24-Year CAGR\" = `24 Year CAGR`, \n          \"Expenditure Category\" = Category_name )\n\nexpenditure_change2 <- move_to_last(expenditure_change2, 1)\n\nexpenditure_change2 %>% \n  kbl(caption = \"Table 2. Yearly Change in Expenditures\", row.names = FALSE) %>% \n  kable_classic() %>%\n    row_spec(31, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nTable 2. Yearly Change in Expenditures\n \n  \n    Expenditure Category \n    FY 2022 ($ billions) \n    FY 2021 ($ billions) \n    1-Year Change \n    24-Year CAGR \n  \n \n\n  \n    Medicaid \n    28.9 \n    26.3 \n    10.11 \n    7.25 \n  \n  \n    K-12 Education \n    13.9 \n    12.2 \n    14.51 \n    4.30 \n  \n  \n    Local Govt Revenue Sharing \n    10.4 \n    7.2 \n    44.48 \n    4.66 \n  \n  \n    Human Services \n    7.6 \n    6.6 \n    15.30 \n    2.75 \n  \n  \n    State Pension Contribution \n    6.5 \n    5.6 \n    15.42 \n    10.76 \n  \n  \n    Other Departments \n    4.9 \n    4.8 \n    1.94 \n    9.10 \n  \n  \n    Transportation \n    4.4 \n    5.3 \n    -18.40 \n    3.35 \n  \n  \n    State Employee Healthcare \n    3.0 \n    2.9 \n    4.47 \n    6.08 \n  \n  \n    University Education \n    2.3 \n    2.2 \n    4.72 \n    0.44 \n  \n  \n    Tollway \n    2.1 \n    2.0 \n    7.21 \n    7.54 \n  \n  \n    Debt Service \n    2.0 \n    2.0 \n    -0.83 \n    6.11 \n  \n  \n    Revenue \n    1.9 \n    1.7 \n    11.96 \n    6.43 \n  \n  \n    Public Safety \n    1.8 \n    2.0 \n    -9.74 \n    6.11 \n  \n  \n    Corrections \n    1.6 \n    1.6 \n    1.52 \n    2.13 \n  \n  \n    Children And Family Services \n    1.4 \n    1.3 \n    3.98 \n    0.17 \n  \n  \n    Community Development \n    1.4 \n    1.7 \n    -15.16 \n    4.77 \n  \n  \n    Aging \n    1.2 \n    1.1 \n    6.35 \n    7.49 \n  \n  \n    Central Management \n    1.2 \n    1.2 \n    2.05 \n    4.46 \n  \n  \n    Elected Officers \n    1.0 \n    1.0 \n    7.38 \n    3.88 \n  \n  \n    Public Health \n    0.9 \n    0.9 \n    -0.16 \n    7.63 \n  \n  \n    Environmental Protect Agency \n    0.7 \n    0.7 \n    -1.98 \n    3.21 \n  \n  \n    Judicial \n    0.5 \n    0.5 \n    4.20 \n    2.99 \n  \n  \n    Capital Improvement \n    0.4 \n    0.5 \n    -6.53 \n    2.15 \n  \n  \n    Healthcare & Fam Ser Net Of Medicaid \n    0.4 \n    0.4 \n    2.95 \n    5.45 \n  \n  \n    Employment Security \n    0.3 \n    0.3 \n    -2.77 \n    2.37 \n  \n  \n    Natural Resources \n    0.3 \n    0.3 \n    3.90 \n    1.76 \n  \n  \n    Other Boards & Commissions \n    0.3 \n    0.2 \n    2.96 \n    4.23 \n  \n  \n    Bus & Profession Regulation \n    0.2 \n    0.2 \n    9.53 \n    1.48 \n  \n  \n    Agriculture \n    0.1 \n    0.1 \n    43.05 \n    1.19 \n  \n  \n    Legislative \n    0.1 \n    0.1 \n    24.13 \n    3.35 \n  \n  \n    Total \n    101.8 \n    92.8 \n    9.72 \n    5.05"
  },
  {
    "objectID": "Everything.html#summary-tables---largest-categories",
    "href": "Everything.html#summary-tables---largest-categories",
    "title": "9  All Code together",
    "section": "10.2 Summary Tables - Largest Categories",
    "text": "10.2 Summary Tables - Largest Categories\nThe 10 largest revenue sources and 13 largest expenditure sources remain separate categories and all other smaller sources/expenditures are combined into “All Other _____”. These condensed tables are typically used in the Fiscal Futures articles. They were manually created in past years but this hopefully automates the process a bit until final formatting stages.\n\ntake ff_rev and ff_exp data frames, which were in wide format, pivot them longer and mutate the Category_name variable to nicer labels. Keep largest categories separate and aggregate the rest.\n\n\n\nCode\nexp_totals <- ff_exp %>% rowwise() %>% mutate(exp_TOTALS = sum(across(exp_402:exp_970))) # creates total column too\n\nrev_totals <- ff_rev %>% rowwise() %>%  mutate(rev_TOTALS = sum(across(rev_02:rev_78)))\n\nrev_long_majorcats <- pivot_longer(rev_totals, rev_02:rev_TOTALS, names_to = c(\"type\",\"Category\"), values_to = \"Dollars\", names_sep = \"_\") %>% \n  rename(Year = fy) %>%\n  mutate(Category_name = case_when(\n    Category == \"02\" ~ \"Income Tax\" ,\n    Category == \"03\" ~ \"Corporate Income Tax\" ,\n    Category == \"06\" ~ \"Sales Tax\" ,\n    Category == \"09\" ~ \"Motor Fuel Taxes\" ,\n #   Category == \"12\" ~ \"PUBLIC UTILITY TAXES, gross of PPRT\" ,\n  #  Category == \"15\" ~ \"CIGARETTE TAXES\" ,\n #   Category == \"18\" ~ \"LIQUOR GALLONAGE TAXES\" ,\n #  Category == \"21\" ~ \"INHERITANCE TAX\" ,\n  #  Category == \"24\" ~ \"INSURANCE TAXES&FEES&LICENSES, net of refunds \" ,\n   # Category == \"27\" ~ \"CORP FRANCHISE TAXES & FEES\" ,\n #   Category == \"30\" ~ \"HORSE RACING TAXES & FEES\",  # in Other\n    Category == \"31\" ~ \"Medical Provider Assessments\" ,\n  #  Category == \"32\" ~ \"GARNISHMENT-LEVIES\" , # dropped\n  #  Category == \"33\" ~  \"LOTTERY RECEIPTS\" ,\n   # Category == \"35\" ~  \"OTHER TAXES\" ,\n    Category == \"36\" ~  \"Receipts from Revenue Producing\", \n    Category == \"39\" ~  \"Licenses, Fees, Registration\" ,\n   # Category == \"42\" ~  \"MOTOR VEHICLE AND OPERATORS\" ,\n#    Category == \"45\" ~  \"STUDENT FEES-UNIVERSITIES\",   # dropped\n#    Category == \"48\" ~  \"RIVERBOAT WAGERING TAXES\" ,\n  #  Category == \"51\" ~  \"RETIREMENT CONTRIBUTIONS\" , # dropped\n   # Category == \"54\" ~ \"GIFTS AND BEQUESTS\", \n    Category == \"57\" ~  \"Federal Other\" ,\n    Category == \"58\" ~  \"Federal Medicaid Reimbursements\", \n    Category == \"59\" ~  \"Federal Transportation\" ,\n #   Category == \"60\" ~  \"OTHER GRANTS AND CONTRACTS\", #other\n#    Category == \"63\" ~  \"INVESTMENT INCOME\", # other\n #   Category == \"66\" ~ \"PROCEEDS,INVESTMENT MATURITIES\" , #dropped\n #   Category == \"72\" ~ \"BOND ISSUE PROCEEDS\",  #dropped\n #   Category == \"75\" ~  \"INTER-AGENCY RECEIPTS \",  #dropped\n #   Category == \"76\" ~  \"TRANSFER IN FROM OUT FUNDS\",  #other\n   # Category == \"78new\" ~  \"ALL OTHER SOURCES\" ,\n   # Category == \"79\" ~   \"COOK COUNTY IGT\", #dropped\n #   Category == \"98\" ~  \"PRIOR YEAR REFUNDS\", #dropped\n                \nCategory == \"TOTALS\" ~ \"Total Revenue\",\nT ~ \"All Other Sources **\" # any other Category number that was not specifically referenced is cobined into Other Revenue Sources\n\n  ) ) %>% \n  select(-type, -Category) %>%  # drop extra columns type and Category number\n  group_by(Year, Category_name) %>%\n  summarise(Dollars= round(sum(Dollars),digits=2)) \n\n# revenue_wide # not actually in wide format yet. \n# has 10 largest rev sources separate and combined all others to Other in long data format. \n\n\n# creates wide version of table where each revenue source is a column\nrevenue_wide_majorcats <- rev_long_majorcats %>% pivot_wider(names_from = Category_name, \n              values_from = Dollars) %>%\n  relocate(\"All Other Sources **\", .after = last_col()) %>%\n  relocate(\"Total Revenue\", .after =  last_col())\n\n\nexp_long_majorcats <- pivot_longer(exp_totals, exp_402:exp_TOTALS , names_to = c(\"type\", \"Category\"), values_to = \"Dollars\", names_sep = \"_\") %>% \n  rename(Year = fy ) %>% \n  mutate(Category_name = \n           case_when(\n            # Category == \"402\" ~ \"AGING\" ,\n           #  Category == \"406\" ~ \"AGRICULTURE\", \n             Category == \"416\" ~ \"Central Management\",\n            # Category == \"418\" ~ \"CHILDREN AND FAMILY SERVICES\", \n             Category == \"420\" ~ \"Community Development\",\n           #  Category == \"422\" ~ \"NATURAL RESOURCES\" ,\n            # Category == \"426\" ~ \"CORRECTIONS\",\n           #  Category == \"427\" ~ \"EMPLOYMENT SECURITY\" ,\n             Category == \"444\" ~ \"Human Services\" ,\n           #  Category == \"478\" ~ \"HEALTHCARE & FAM SER NET OF MEDICAID\", \n           #  Category == \"482\" ~ \"PUBLIC HEALTH\", \n           #  Category == \"492\" ~ \"REVENUE\", \n             Category == \"494\" ~ \"Transportation\" ,\n           #  Category == \"532\" ~ \"ENVIRONMENTAL PROTECT AGENCY\" ,\n             Category == \"557\" ~ \"Tollway\" ,\n           #  Category == \"684\" ~ \"IL COMMUNITY COLLEGE BOARD\", \n            # Category == \"691\" ~ \"IL STUDENT ASSISTANCE COMM\" ,\n           #  Category == \"900\" ~ \"NOT IN FRAME\",\n             Category == \"901\" ~ \"State Pension Contribution\",\n             Category == \"903\" ~ \"Debt Service\",\n             Category == \"904\" ~ \"State Employee Healthcare\",\n           #  Category == \"910\" ~ \"LEGISLATIVE\"  ,\n          #   Category == \"920\" ~ \"JUDICIAL\" ,\n          #   Category == \"930\" ~ \"ELECTED OFFICERS\" , \n            # Category == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             Category == \"941\" ~ \"Public Safety\" ,\n           #  Category == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n           #  Category == \"943\" ~ \"CENTRAL SERVICES\",\n           #  Category == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             Category == \"945\" ~ \"Medicaid\" ,\n             Category == \"946\" ~ \"Capital Improvement\" , \n           #  Category == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n            # Category == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             Category == \"959\" ~ \"K-12 Education\" ,\n           #  Category == \"960\" ~ \"UNIVERSITY EDUCATION\",\n             Category == \"970\" ~ \"Local Govt Revenue Sharing\",\n          Category == \"TOTALS\" ~ \"Total Expenditures\",\n             T ~ \"All Other Expenditures **\")\n           ) %>% \n  select(-type, -Category) %>% \n  group_by(Year, Category_name) %>% \n  summarise(Dollars= round(sum(Dollars),digits=2))\n\nexpenditure_wide_majorcats <- exp_long_majorcats %>% \n  pivot_wider(names_from = Category_name, \n              values_from = Dollars) %>%\n  relocate(\"All Other Expenditures **\", .after = last_col()) %>%\n  relocate(\"Total Expenditures\", .after =  last_col())\n\n\n# CAGR values for largest expenditure categories and combined All Other Expenditures\n\n# function for calculating the CAGR\ncalc_cagr <- function(df, n) {\n  df <- exp_long_majorcats %>%\n    #select(-type) %>%\n    arrange(Category_name, Year) %>%\n    group_by(Category_name) %>%\n    mutate(cagr = ((`Dollars` / lag(`Dollars`, n)) ^ (1 / n)) - 1)\n\n  return(df)\n}\n\n# This works for one variable at a time\ncagr_24 <- calc_cagr(exp_long_majorcats, 24) %>% \n  # group_by(Category) %>%\n  summarize(cagr_24 = round(sum(cagr*100, na.rm = TRUE), 2))\n\ncagr23_precovid <- exp_long_majorcats %>%\n  filter(Year <= 2019) %>%\n  calc_cagr(21) %>% \n  summarize(cagr_21 = round(sum(cagr*100, na.rm = TRUE), 2))\n\n\n\ncagr_10 <- calc_cagr(exp_long_majorcats, 10) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_10 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_5 <- calc_cagr(exp_long_majorcats, 5) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_5 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_3 <- calc_cagr(exp_long_majorcats, 3) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_3 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_2 <- calc_cagr(exp_long_majorcats, 2) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_2 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_1 <- calc_cagr(exp_long_majorcats, 1) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_1 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\nCAGR_expenditures_majorcats_tot <- data.frame(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_24 ) %>% \n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %>% \n  rename(\"Expenditure Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10,\"24 Year CAGR\" = cagr_24 )\n\nmove_to_last <- function(df, n) df[c(setdiff(seq_len(nrow(df)), n), n), ]\n\nCAGR_expenditures_majorcats_tot <- move_to_last(CAGR_expenditures_majorcats_tot, 1)\nCAGR_expenditures_majorcats_tot <- move_to_last(CAGR_expenditures_majorcats_tot, 13) \n\n\nCAGR_expenditures_majorcats_tot%>%   \n  kbl(caption = \"CAGR Calculations for Largest Expenditure Categories\" , row.names=FALSE) %>% \n     kable_classic() \n\n\n\n\nCAGR Calculations for Largest Expenditure Categories\n \n  \n    Expenditure Category \n    1 Year CAGR \n    2 Year CAGR \n    3 Year CAGR \n    5 Year CAGR \n    10 Year CAGR \n    24 Year CAGR \n  \n \n\n  \n    Capital Improvement \n    -6.53 \n    17.27 \n    18.12 \n    10.65 \n    -3.63 \n    2.15 \n  \n  \n    Central Management \n    2.05 \n    1.06 \n    8.53 \n    1.18 \n    4.71 \n    4.46 \n  \n  \n    Community Development \n    -15.16 \n    51.43 \n    35.14 \n    16.98 \n    3.31 \n    4.77 \n  \n  \n    Debt Service \n    -0.83 \n    1.59 \n    -0.70 \n    1.65 \n    1.19 \n    6.11 \n  \n  \n    Human Services \n    15.30 \n    12.23 \n    10.33 \n    6.90 \n    3.66 \n    2.75 \n  \n  \n    K-12 Education \n    14.51 \n    11.07 \n    9.44 \n    7.39 \n    4.53 \n    4.30 \n  \n  \n    Local Govt Revenue Sharing \n    44.48 \n    26.75 \n    16.73 \n    9.93 \n    6.42 \n    4.66 \n  \n  \n    Medicaid \n    10.11 \n    13.93 \n    15.00 \n    10.14 \n    8.99 \n    7.25 \n  \n  \n    Public Safety \n    -9.74 \n    10.35 \n    21.41 \n    17.00 \n    8.62 \n    6.11 \n  \n  \n    State Employee Healthcare \n    4.47 \n    0.47 \n    -1.52 \n    -1.95 \n    2.49 \n    6.08 \n  \n  \n    State Pension Contribution \n    15.42 \n    10.80 \n    9.67 \n    9.26 \n    9.38 \n    10.76 \n  \n  \n    Tollway \n    7.21 \n    4.76 \n    6.32 \n    3.60 \n    11.66 \n    7.54 \n  \n  \n    Transportation \n    -18.40 \n    3.31 \n    8.10 \n    0.84 \n    -0.24 \n    3.35 \n  \n  \n    All Other Expenditures ** \n    4.13 \n    7.59 \n    7.95 \n    5.28 \n    3.69 \n    3.68 \n  \n  \n    Total Expenditures \n    9.72 \n    11.73 \n    11.04 \n    7.27 \n    5.46 \n    5.05 \n  \n\n\n\n\n\nCode\n# Yearly change for Top 13 largest expenditure categories\nexpenditure_change_majorcats <- exp_long_majorcats %>%\n  filter(Year > 2020) %>%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %>%\n  mutate(\"FY 2022 ($ Billions)\" = round(Dollars_2022/1000, digits = 1),\n         \"FY 2021 ($ Billions)\" = round(Dollars_2021/1000, digits = 1),\n         \"1-Year Change\" = percent((Dollars_2022 -Dollars_2021)/Dollars_2021, accuracy = .1) )  %>%\n  left_join(CAGR_expenditures_majorcats_tot, by = c(\"Category_name\" = \"Expenditure Category\")) %>% \n  arrange(-`FY 2022 ($ Billions)`)%>%\n  mutate(`24 Year CAGR` = percent(`24 Year CAGR`/100, accuracy=.1)) %>%\n  select(-c(Dollars_2022, Dollars_2021, `1 Year CAGR`:`10 Year CAGR`)) %>%\n  rename( \"24-Year CAGR\" = `24 Year CAGR`, \n          \"Expenditure Category\" = Category_name )\n\nexpenditure_change_majorcats <- move_to_last(expenditure_change_majorcats, 3) \n\nexpenditure_change_majorcats <- move_to_last(expenditure_change_majorcats, 1)\n\nexpenditure_change_majorcats %>% \n  kbl(caption = \"Yearly Change in Expenditures\", row.names = FALSE, align = \"l\") %>% \n  kable_classic() %>%\n    row_spec(15, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nYearly Change in Expenditures\n \n  \n    Expenditure Category \n    FY 2022 ($ Billions) \n    FY 2021 ($ Billions) \n    1-Year Change \n    24-Year CAGR \n  \n \n\n  \n    Medicaid \n    28.9 \n    26.3 \n    10.1% \n    7.2% \n  \n  \n    K-12 Education \n    13.9 \n    12.2 \n    14.5% \n    4.3% \n  \n  \n    Local Govt Revenue Sharing \n    10.4 \n    7.2 \n    44.5% \n    4.7% \n  \n  \n    Human Services \n    7.6 \n    6.6 \n    15.3% \n    2.8% \n  \n  \n    State Pension Contribution \n    6.5 \n    5.6 \n    15.4% \n    10.8% \n  \n  \n    Transportation \n    4.4 \n    5.3 \n    -18.4% \n    3.4% \n  \n  \n    State Employee Healthcare \n    3.0 \n    2.9 \n    4.5% \n    6.1% \n  \n  \n    Tollway \n    2.1 \n    2.0 \n    7.2% \n    7.5% \n  \n  \n    Debt Service \n    2.0 \n    2.0 \n    -0.8% \n    6.1% \n  \n  \n    Public Safety \n    1.8 \n    2.0 \n    -9.7% \n    6.1% \n  \n  \n    Community Development \n    1.4 \n    1.7 \n    -15.2% \n    4.8% \n  \n  \n    Central Management \n    1.2 \n    1.2 \n    2.0% \n    4.5% \n  \n  \n    Capital Improvement \n    0.4 \n    0.5 \n    -6.5% \n    2.1% \n  \n  \n    All Other Expenditures ** \n    18.2 \n    17.5 \n    4.1% \n    3.7% \n  \n  \n    Total Expenditures \n    101.8 \n    92.8 \n    9.7% \n    5.0% \n  \n\n\n\n\n\nTop 10 revenue sources CAGRs and Yearly Change Tables:\n\n\nCode\n##### Top 10 revenue CAGRs: ####\n\n\ncalc_cagr <- function(df, n) {\n  df <- rev_long_majorcats %>%\n    arrange(Category_name, Year) %>%\n    group_by(Category_name) %>%\n    mutate(cagr = ((Dollars / lag(Dollars, n)) ^ (1 / n)) - 1)\n\n  return(df)\n}\n\n# This works for one variable at a time\ncagr_24 <- calc_cagr(rev_long_majorcats, 24) %>% \n     # group_by(Category) %>%\n  summarize(cagr_24 = round(sum(cagr*100, na.rm = TRUE), 2))\n\ncagr_10 <- calc_cagr(rev_long_majorcats, 10) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_10 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_5 <- calc_cagr(rev_long_majorcats, 5) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_5 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_3 <- calc_cagr(rev_long_majorcats, 3) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_3 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_2 <- calc_cagr(rev_long_majorcats, 2) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_2 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\n cagr_1 <- calc_cagr(rev_long_majorcats, 1) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_1 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\nCAGR_revenue_majorcats_tot <- data.frame(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_24) %>%   \n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %>% \n  rename(\"Revenue Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10,\"24 Year CAGR\" = cagr_24 )\n\nCAGR_revenue_majorcats_tot <- move_to_last(CAGR_revenue_majorcats_tot,1)\nCAGR_revenue_majorcats_tot <- move_to_last(CAGR_revenue_majorcats_tot,11)\n\nCAGR_revenue_majorcats_tot %>% \n  kbl(caption = \"CAGR Calculations for Largest Revenue Sources\", row.names = FALSE) %>% \n     kable_classic() \n\n\n\n\nCAGR Calculations for Largest Revenue Sources\n \n  \n    Revenue Category \n    1 Year CAGR \n    2 Year CAGR \n    3 Year CAGR \n    5 Year CAGR \n    10 Year CAGR \n    24 Year CAGR \n  \n \n\n  \n    Corporate Income Tax \n    76.66 \n    72.77 \n    38.19 \n    32.31 \n    13.59 \n    7.70 \n  \n  \n    Federal Medicaid Reimbursements \n    8.48 \n    17.30 \n    16.43 \n    12.76 \n    11.30 \n    7.52 \n  \n  \n    Federal Other \n    110.44 \n    41.31 \n    48.30 \n    26.71 \n    11.69 \n    7.09 \n  \n  \n    Federal Transportation \n    -22.95 \n    1.39 \n    10.40 \n    -2.73 \n    -0.06 \n    3.33 \n  \n  \n    Income Tax \n    12.60 \n    16.35 \n    9.25 \n    15.22 \n    5.36 \n    5.68 \n  \n  \n    Licenses, Fees, Registration \n    -4.32 \n    15.28 \n    16.98 \n    9.34 \n    6.27 \n    7.89 \n  \n  \n    Medical Provider Assessments \n    -1.98 \n    3.67 \n    16.26 \n    11.80 \n    8.33 \n    8.36 \n  \n  \n    Motor Fuel Taxes \n    6.12 \n    4.36 \n    23.16 \n    13.42 \n    6.98 \n    2.78 \n  \n  \n    Receipts from Revenue Producing \n    3.01 \n    4.78 \n    -2.68 \n    1.45 \n    3.49 \n    5.07 \n  \n  \n    Sales Tax \n    11.29 \n    12.22 \n    7.40 \n    6.27 \n    4.43 \n    3.23 \n  \n  \n    All Other Sources ** \n    13.85 \n    13.43 \n    6.90 \n    4.95 \n    4.07 \n    3.90 \n  \n  \n    Total Revenue \n    23.12 \n    20.27 \n    16.14 \n    13.00 \n    7.23 \n    5.50 \n  \n\n\n\n\n\nCode\n###### Yearly change summary table for Top 10 Revenues #####\nrevenue_change_majorcats <- rev_long_majorcats %>%\n  #select(-c(Category)) %>%\n  filter(Year > 2020) %>%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %>%\n  mutate(\n    \"FY 2022 ($ billions)\" = round(Dollars_2022/1000, digits = 1),\n            \"FY 2021 ($ billions)\" = round(Dollars_2021/1000, digits = 1),\n\n         \"1-Year Change\" = percent(((Dollars_2022 -Dollars_2021)/Dollars_2021), accuracy = .1)) %>%\n  left_join(CAGR_revenue_majorcats_tot, by = c(\"Category_name\" = \"Revenue Category\")) %>% \n    arrange(-`FY 2022 ($ billions)`)%>%\n  #select(-c(Dollars_2021, Dollars_2021, `1 Year CAGR`:`10 Year CAGR`)) %>%\n  mutate(\"24-Year Change\" = percent(`24 Year CAGR`/100, accuracy=.1)) %>%\n  rename(\"Revenue Category\" = Category_name ) %>%\n  select(-c(Dollars_2022, Dollars_2021, `1 Year CAGR`:`24 Year CAGR`)) \n\nrevenue_change_majorcats <- move_to_last(revenue_change_majorcats,6)\n\nrevenue_change_majorcats <- move_to_last(revenue_change_majorcats,1)\n\nrevenue_change_majorcats%>% \n  kbl(caption = \"Yearly Change in Revenue for Main Revenue Sources\", row.names = FALSE, align = \"l\") %>% \n   kable_classic() %>%\n    row_spec(12, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nYearly Change in Revenue for Main Revenue Sources\n \n  \n    Revenue Category \n    FY 2022 ($ billions) \n    FY 2021 ($ billions) \n    1-Year Change \n    24-Year Change \n  \n \n\n  \n    Income Tax \n    23.8 \n    21.2 \n    12.6% \n    5.7% \n  \n  \n    Federal Other \n    19.4 \n    9.2 \n    110.4% \n    7.1% \n  \n  \n    Federal Medicaid Reimbursements \n    19.0 \n    17.6 \n    8.5% \n    7.5% \n  \n  \n    Sales Tax \n    15.4 \n    13.9 \n    11.3% \n    3.2% \n  \n  \n    Corporate Income Tax \n    9.7 \n    5.5 \n    76.7% \n    7.7% \n  \n  \n    Medical Provider Assessments \n    3.7 \n    3.8 \n    -2.0% \n    8.4% \n  \n  \n    Motor Fuel Taxes \n    2.5 \n    2.4 \n    6.1% \n    2.8% \n  \n  \n    Receipts from Revenue Producing \n    2.4 \n    2.3 \n    3.0% \n    5.1% \n  \n  \n    Licenses, Fees, Registration \n    1.9 \n    2.0 \n    -4.3% \n    7.9% \n  \n  \n    Federal Transportation \n    1.8 \n    2.4 \n    -22.9% \n    3.3% \n  \n  \n    All Other Sources ** \n    13.3 \n    11.7 \n    13.9% \n    3.9% \n  \n  \n    Total Revenue \n    113.0 \n    91.8 \n    23.1% \n    5.5% \n  \n\n\n\n\n\n\n\nCode\n# #install.packages(\"openxlsx\")\n# library(openxlsx)\n# \n# dataset_names <- list('rev_long' = rev_long, 'exp_long' = exp_long, \n#                       `Table 1` = expenditure_change2, `Table 2` = revenue_change2,\n#                       'Table 4.a' = CAGR_revenue_summary_tot, 'Table 4.b' = CAGR_expenditures_summary_tot, \n#                       'year_totals' = year_totals)\n# \n# write.xlsx(dataset_names, file = 'summary_file_FY2022_withTotals_Jan11.xlsx')\n\n\nExport summary file with Totals\n\n\nCode\nlibrary(openxlsx)\n\ndataset_names <- list('Aggregate Revenues' = revenue_wide2, \n                      'Aggregate Expenditures' = expenditure_wide2, \n\n                      \n                      'Table 1' = revenue_change_majorcats, #Top categories with yearly change, 23 yr cagr\n                      'Table 2' = expenditure_change_majorcats,\n                      \n                      'Table 1a. AllCats' = revenue_change2,\n                      'Table 2a. AllCats' = expenditure_change2,\n                      \n                      'CAGR Rev-MajorCats' = CAGR_revenue_majorcats_tot, # Categories Match Table 1 in paper\n                      'CAGR Exp-MajorCats' = CAGR_expenditures_majorcats_tot, \n                                            \n                     # 'Table 1-AllCats' = expenditure_change_allcats,  # All Categories by Year\n                    #  'Table 2-AllCats' = revenue_change_allcats,\n                      \n                    #  'CAGR_Revenue-AllCats' = CAGR_revenue_summary_tot, \n                   #   'CAGR_Expenditures-AllCats' = CAGR_expenditures_summary_tot, \n                      \n                      'Fiscal Gap' = year_totals,    # Total Revenue, Expenditure, and Fiscal gap per year\n                      \n                      'aggregated_totals_long' = aggregated_totals_long # all data in long format. Good for creating pivot tables in Excel\n                      )\n\nwrite.xlsx(dataset_names, file = 'summary_file_FY22_wTotals_Jan11.xlsx')\n\n\nSaves main items in one excel file named summary_file.xlsx. Delete eval=FALSE to run on local computer.\n\n\nCode\n# #install.packages(\"openxlsx\")\n# library(openxlsx)\n# \n# dataset_names <- list('rev_long' = rev_long, 'exp_long' = exp_long, \n#                       `Table 1` = expenditure_change, `Table 2` = revenue_change,\n#                       'Table 4.a' = CAGR_revenue_summary, 'Table 4.b' = CAGR_expenditures_summary, \n#                       'year_totals' = year_totals)\n# \n# write.xlsx(dataset_names, file = 'summary_file_FY2022.xlsx')"
  },
  {
    "objectID": "Everything.html#forecasting-attempt",
    "href": "Everything.html#forecasting-attempt",
    "title": "9  All Code together",
    "section": "11.1 Forecasting attempt",
    "text": "11.1 Forecasting attempt\nFirst images use revenue that includes all federal stimulus packages. Revenue projections are skewed heavily due to the large amount of covid money flowing in the past 2 years.\n\n\nCode\n## Revenues\nyear_totals2 <- year_totals2 %>% \n  arrange(Year)\n\n#ts_rev <- year_totals %>% select(Year, Revenue ) %>% arrange(Year)\n\ntsrev <- ts(year_totals2$Revenue, start =\"1998\", frequency = 1) # yearly data\n\n# start(tsrev) # 1998, January\n# end(tsrev)  ## 2022 \n# summary(tsrev)\n# plot(tsrev)\n# abline(reg=lm(tsrev~time(tsrev)))\n\n\n#### ARIMAs\nmymodel <- auto.arima(tsrev, seasonal = FALSE)\n# mymodel          # ARIMA (0, 1, 0) with drift\nmyforecastrev <- forecast(mymodel, h = 20)\n#plot(myforecastrev,  xlab =\"\", ylab =\"Total Revenue\", main =\"Chicago Revenue\")\n\n\n\n\n#### revenue chart\nmodel_rev <- auto.arima(tsrev, seasonal = FALSE)\nforecast_rev <- forecast(model_rev, h = 20)\n\nq <- forecast(forecast_rev,  h = 20) %>% \n  autoplot() +\n    ylab(\"Dollars (Millions)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Forecasted Revenue\") +\n  theme_classic() +\n  scale_y_continuous(labels = dollar )\n\nsummary(forecast_rev)\n\n\n\nForecast method: ARIMA(0,1,1) with drift\n\nModel Information:\nSeries: tsrev \nARIMA(0,1,1) with drift \n\nCoefficients:\n         ma1     drift\n      0.8783  3012.905\ns.e.  0.1925  1372.451\n\nsigma^2 = 14505843:  log likelihood = -231.63\nAIC=469.26   AICc=470.46   BIC=472.79\n\nError measures:\n                   ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set 38.18401 3572.834 2673.953 -0.5334054 4.611041 0.7280474\n                   ACF1\nTraining set -0.1681318\n\nForecasts:\n     Point Forecast    Lo 80    Hi 80     Lo 95    Hi 95\n2023       108172.8 103290.9 113054.6 100706.65 115638.9\n2024       111185.7 100799.0 121572.4  95300.58 127070.8\n2025       114198.6 100344.5 128052.6  93010.63 135386.5\n2026       117211.5 100598.7 133824.3  91804.35 142618.6\n2027       120224.4 101249.7 139199.0  91205.16 149243.6\n2028       123237.3 102163.9 144310.7  91008.29 155466.3\n2029       126250.2 103268.9 149231.5  91103.34 161397.1\n2030       129263.1 104520.6 154005.6  91422.72 167103.5\n2031       132276.0 105889.6 158662.4  91921.48 172630.5\n2032       135288.9 107355.2 163222.7  92567.95 178009.9\n2033       138301.8 108902.1 167701.6  93338.79 183264.9\n2034       141314.7 110518.7 172110.8  94216.24 188413.2\n2035       144327.6 112195.9 176459.4  95186.40 193468.9\n2036       147340.5 113926.5 180754.6  96238.16 198442.9\n2037       150353.4 115704.5 185002.4  97362.44 203344.5\n2038       153366.4 117525.0 189207.7  98551.76 208180.9\n2039       156379.3 119383.9 193374.6  99799.82 212958.7\n2040       159392.2 121277.8 197506.5 101101.29 217683.0\n2041       162405.1 123203.6 201606.5 102451.59 222358.5\n2042       165418.0 125158.7 205677.2 103846.77 226989.2\n\n\nCode\n# annotation <- data.frame(\n#   x = c(2027, 2032),\n#   y = c(200000, 300000),  \n#   label = c(\"$120 billion in 2027\",\"$135 billion in 2032\")\n# )\n\nannotation <- data.frame(\n  x = c(2020, 2032),\n  y = c(150000, 200000),  \n  label = c(\"$120 billion in 2027\",\"$135 billion in 2032\")\n)\n\nq+ geom_label(data = annotation, aes(x=x, y=y, label=label), size = 3) +\n  labs(caption = \"after dropping federal covid dollars\")\n\n\n\n\n\nCode\n## Expenditures\ntsexp <- ts(year_totals2$Expenditures, start = \"1998\", frequency = 1)\nmodel_exp<- auto.arima(tsexp, seasonal = FALSE)\n# model_exp            # ARIMA (0,1,1) with drift\n\nforecast_exp <- forecast(model_exp, h = 20) \n#plot(forecast_exp, xlab =\"\",  ylab =\"Total Expenditures\", main =\"Chicago Expenditures\")\n\np <- forecast(model_exp,  h = 20) %>% \n  autoplot() +\n    ylab(\"Dollars (Millions)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Forecasted Expenditures\") +\n  theme_classic() +\n  scale_y_continuous(labels = dollar )\n\nsummary(forecast_exp)\n\n\n\nForecast method: ARIMA(0,1,0) with drift\n\nModel Information:\nSeries: tsexp \nARIMA(0,1,0) with drift \n\nCoefficients:\n          drift\n      2942.1103\ns.e.   866.1814\n\nsigma^2 = 18789310:  log likelihood = -234.53\nAIC=473.06   AICc=473.63   BIC=475.41\n\nError measures:\n                   ME     RMSE      MAE        MPE    MAPE      MASE       ACF1\nTraining set 1.131053 4157.663 2668.277 -0.6757971 4.31176 0.6391452 -0.1354505\n\nForecasts:\n     Point Forecast     Lo 80    Hi 80     Lo 95    Hi 95\n2023       104771.2  99216.12 110326.3  96275.43 113267.0\n2024       107713.3  99857.23 115569.4  95698.47 119728.2\n2025       110655.4 101033.73 120277.1  95940.30 125370.6\n2026       113597.5 102487.35 124707.7  96605.97 130589.1\n2027       116539.7 104118.08 128961.2  97542.50 135536.8\n2028       119481.8 105874.61 133088.9  98671.43 140292.1\n2029       122423.9 107726.47 137121.3  99946.14 144901.6\n2030       125366.0 109653.80 141078.2 101336.28 149395.7\n2031       128308.1 111642.81 144973.4 102820.74 153795.4\n2032       131250.2 113683.45 148817.0 104384.17 158116.2\n2033       134192.3 115768.15 152616.5 106014.98 162369.6\n2034       137134.4 117891.01 156377.8 107704.16 166564.7\n2035       140076.5 120047.35 160105.7 109444.55 170708.5\n2036       143018.6 122233.38 163803.9 111230.33 174807.0\n2037       145960.8 124445.96 167475.5 113056.72 178864.8\n2038       148902.9 126682.49 171123.2 114919.73 182886.0\n2039       151845.0 128940.73 174749.2 116815.96 186874.0\n2040       154787.1 131218.81 178355.4 118742.52 190831.6\n2041       157729.2 133515.10 181943.3 120696.93 194761.5\n2042       160671.3 135828.17 185514.4 122677.00 198665.6\n\n\nCode\nannotation <- data.frame(\n  x = c(2027, 2032),\n  y = c(130000, 100000),  label = c(\"$117 ± 20 Billion in 2027\",\"$132 ± 26 Billion in 2032 \")\n)\n\np + \n  geom_label(data = annotation, aes(x=x, y=y, label=label), size = 3) + \n  labs(title = \"Forecasted Expenditures\", \n  caption = \"Projected values at 95% confidence interval. \n  Dark blue represents 80% liklihood of falling with that range, \n  light blue represents 95% liklihood of being in projected range.\")\n\n\n\n\n\nCode\n## Exp and Rev together\n\nautoplot(tsexp) +\n  #geom_line(tsexp)+\n  #geom_line(aes(model_rev))+\n  autolayer(forecast_rev, series = \"Revenue\") +\n  autolayer(forecast_exp, series = \"Expenditure)\", alpha = 0.5) +\n  geom_line(year_totals, mapping= aes(x = Year, y = Revenue))  + guides(colour = guide_legend(\"Forecast\")) + \n  labs(title = \"Forecasted Revenue and Expenditures\", caption = \"Revenue includes State and Local CURE Dollars\")\n\n\n\n\n\nRevenue forecasting using precovid trends:\n\n\nCode\n# revenue using precovid trends\ntsrev <- ts(year_totals$Revenue, start =\"1998\", end = \"2020\", frequency = 1) # yearly data\n\ntsexp2019 <- ts(year_totals$Expenditures, start =\"1998\", end = \"2020\", frequency = 1) # yearly data\n\n#### revenue chart\nmodel_rev <- auto.arima(tsrev, seasonal = FALSE)\nforecast_rev <- forecast(model_rev, h = 23)\n\nc <- forecast(forecast_rev,  h = 22) %>% \n  autoplot() +\n    ylab(\"Dollars (Millions)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Forecasted Revenue\") +\n  theme_classic() +\n  scale_y_continuous(labels = dollar )\n\nsummary(forecast_rev)\n\n\n\nForecast method: ARIMA(0,1,0) with drift\n\nModel Information:\nSeries: tsrev \nARIMA(0,1,0) with drift \n\nCoefficients:\n          drift\n      2130.7731\ns.e.   522.5883\n\nsigma^2 = 6294284:  log likelihood = -202.91\nAIC=409.82   AICc=410.45   BIC=412.01\n\nError measures:\n                   ME     RMSE      MAE        MPE     MAPE      MASE\nTraining set 1.266691 2397.281 1730.586 -0.3250278 3.211109 0.7071574\n                    ACF1\nTraining set -0.08547373\n\nForecasts:\n     Point Forecast     Lo 80     Hi 80     Lo 95     Hi 95\n2021       80272.46  77057.25  83487.67  75355.23  85189.70\n2022       82403.24  77856.24  86950.23  75449.21  89357.26\n2023       84534.01  78965.10  90102.92  76017.10  93050.92\n2024       86664.78  80234.36  93095.20  76830.31  96499.26\n2025       88795.56  81606.13  95984.98  77800.28  99790.84\n2026       90926.33  83050.71  98801.95  78881.60 102971.05\n2027       93057.10  84550.46 101563.75  80047.31 106066.89\n2028       95187.88  86093.89 104281.86  81279.83 109095.93\n2029       97318.65  87673.02 106964.28  82566.93 112070.36\n2030       99449.42  89282.04 109616.81  83899.75 114999.09\n2031      101580.20  90916.55 112243.84  85271.56 117888.83\n2032      103710.97  92573.16 114848.78  86677.15 120744.78\n2033      105841.74  94249.14 117434.34  88112.39 123571.10\n2034      107972.51  95942.30 120002.73  89573.89 126371.14\n2035      110103.29  97650.84 122555.74  91058.91 129147.67\n2036      112234.06  99373.22 125094.90  92565.11 131903.01\n2037      114364.83 101108.19 127621.48  94090.54 134639.13\n2038      116495.61 102854.63 130136.58  95633.53 137357.68\n2039      118626.38 104611.61 132641.15  97192.64 140060.13\n2040      120757.15 106378.30 135136.01  98766.59 142747.71\n2041      122887.93 108153.99 137621.87 100354.31 145421.54\n2042      125018.70 109938.03 140099.37 101954.81 148082.59\n2043      127149.47 111729.87 142569.07 103567.23 150731.72\n\n\nCode\nannotation <- data.frame(\n  x = c(2020, 2032),\n  y = c(90000, 100000),  \n  label = c(\"$93 Billion in 2027\",\"$104 Billion in 2032\")\n)\n\nc+ geom_label(data = annotation, aes(x=x, y=y, label=label), size = 3) + \n  labs(title= \"Revenue Forecasted using Pre-Covid Data\", \n       subtitle = \"Own Source and Federal Revenues Combined\")\n\n\n\n\n\nCode\nautoplot(tsexp2019) +\n  #geom_line(tsexp)+\n  #geom_line(aes(model_rev))+\n  autolayer(forecast_rev, series = \"Revenue\") +\n  autolayer(forecast_exp, series = \"Expenditure)\", alpha = 0.5) +\n  geom_line(year_totals, mapping= aes(x = Year, y = Revenue))  + guides(colour = guide_legend(\"Forecast\")) + \n  labs(title = \"Forecasted Revenue and Expenditures\", subtitle = \"Using Pre-Covid revenue data (ending in FY2020) with Actual 2022 expenditures\")\n\n\n\n\n\n\n\nCode\nfed_rev <- ff_rev %>% select(fy, rev_57, rev_58, rev_59) %>%\n  mutate(fed_total = rev_57+rev_58+rev_59)\n\nfed_tstotal <- ts(fed_rev$fed_total, start =\"1998\", frequency = 1) # yearly data\n\nmodel_fed <- auto.arima(fed_tstotal, seasonal = FALSE)\nforecast_fed <- forecast(model_fed, h = 23)\n\nfedtotal <- forecast(forecast_fed,  h = 20) %>% \n  autoplot() +\n    ylab(\"Nominal Dollars (Millions)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Forecasted Federal Revenue WITHOUT Federal COVID Dollars\", subtitle = \"Sum of Transportation, Medicaid, and Other Federal Revenue\") +\n  theme_classic() +\n  scale_y_continuous(labels = dollar ) \n\nfedtotal\n\n\n\n\n\nCode\nfed_tstotal <- ts(fed_rev$fed_total, start =\"1998\", end = \"2020\", frequency = 1) # yearly data\n\nmodel_fed2 <- auto.arima(fed_tstotal, seasonal = FALSE)\nforecast_fed2 <- forecast(model_fed2, h = 23)\n\nfedtotal2 <- forecast(forecast_fed2,  h = 20) %>% \n  autoplot() +\n    ylab(\"Nominal Dollars (Millions)\") +\n  xlab(\"Year\") +\n  ggtitle(\"Forecasted Federal Revenue -- pre-COVID trends\", subtitle = \"Sum of Transportation, Medicaid, and Other Federal Revenue\") +\n  theme_classic() +\n  scale_y_continuous(labels = dollar ) \n\nfedtotal2\n\n\n\n\n\nCode\nautoplot(tsexp2019) +\n  #geom_line(tsexp)+\n  #geom_line(aes(model_rev))+\n  autolayer(forecast_fed, series = \"No Fed Stim Packages\") +\n  autolayer(forecast_fed2, series = \"Pre-Covid Fed Rev)\", alpha = 0.5) +\n  geom_line(year_totals2, mapping= aes(x = Year, y = Revenue))  + \n  guides(colour = guide_legend(\"Forecast\")) + \n  labs(title = \"Comparison of Combined Federal Revenue without Stimulus Packages and Pre-COVID revenue trend\" , \n       subtitle = \"Using Pre-Covid revenue data (ending in FY2020)\")\n\n\n\n\n\nGraphing the 3 federal revenue types together may be the most reliable since some COVID funding is still recorded in Federal Other and some are in other categories (like Disaster Response in FY2021). Need to look at more before using."
  },
  {
    "objectID": "Everything.html#tables-with-totals",
    "href": "Everything.html#tables-with-totals",
    "title": "9  All Code together",
    "section": "11.2 Tables with Totals",
    "text": "11.2 Tables with Totals\n\n\nCode\nexp_totals <- ff_exp %>% rowwise() %>% mutate(exp_TOTALS = sum(across(exp_402:exp_970)))\nrev_totals <- ff_rev %>%    rowwise() %>% \n  mutate(rev_TOTALS = sum(across(rev_02:rev_78)))\n\nrev_long <- pivot_longer(rev_totals, rev_02:rev_TOTALS, names_to = c(\"type\",\"Category\"), values_to = \"Dollars\", names_sep = \"_\") %>% \n  rename(Year = fy) %>%\n  mutate(Category_name = case_when(\n    Category == \"02\" ~ \"INDIVIDUAL INCOME TAXES\" ,\n    Category == \"03\" ~ \"CORPORATE INCOME TAXES\" ,\n    Category == \"06\" ~ \"SALES TAXES\" ,\n    Category == \"09\" ~ \"MOTOR FUEL TAX\" ,\n    Category == \"12\" ~ \"PUBLIC UTILITY TAXES\" ,\n    Category == \"15\" ~ \"CIGARETTE TAXES\" ,\n    Category == \"18\" ~ \"LIQUOR GALLONAGE TAXES\" ,\n    Category == \"21\" ~ \"INHERITANCE TAX\" ,\n    Category == \"24\" ~ \"INSURANCE TAXES&FEES&LICENSES\" ,\n    Category == \"27\" ~ \"CORP FRANCHISE TAXES & FEES\" ,\n    Category == \"30\" ~ \"HORSE RACING TAXES & FEES\",  # in Other\n    Category == \"31\" ~ \"MEDICAL PROVIDER ASSESSMENTS\" ,\n    Category == \"32\" ~ \"GARNISHMENT-LEVIES\" , # dropped\n    Category == \"33\" ~  \"LOTTERY RECEIPTS\" ,\n    Category == \"35\" ~  \"OTHER TAXES\" ,\n    Category == \"36\" ~  \"RECEIPTS FROM REVENUE PRODUCING\", \n    Category == \"39\" ~  \"LICENSES, FEES & REGISTRATIONS\" ,\n    Category == \"42\" ~  \"MOTOR VEHICLE AND OPERATORS\" ,\n    Category == \"45\" ~  \"STUDENT FEES-UNIVERSITIES\",   # dropped\n    Category == \"48\" ~  \"RIVERBOAT WAGERING TAXES\" ,\n    Category == \"51\" ~  \"RETIREMENT CONTRIBUTIONS\" , # dropped\n    Category == \"54\" ~ \"GIFTS AND BEQUESTS\", \n    Category == \"57\" ~  \"FEDERAL OTHER\" ,\n    Category == \"58\" ~  \"FEDERAL MEDICAID\", \n    Category == \"59\" ~  \"FEDERAL TRANSPORTATION\" ,\n    Category == \"60\" ~  \"OTHER GRANTS AND CONTRACTS\", #other\n    Category == \"63\" ~  \"INVESTMENT INCOME\", # other\n    Category == \"66\" ~ \"PROCEEDS,INVESTMENT MATURITIES\" , #dropped\n    Category == \"72\" ~ \"BOND ISSUE PROCEEDS\",  #dropped\n    Category == \"75\" ~  \"INTER-AGENCY RECEIPTS \",  #dropped\n    Category == \"76\" ~  \"TRANSFER IN FROM OUT FUNDS\",  #other\n    Category == \"78\" ~  \"ALL OTHER SOURCES\" ,\n    Category == \"79\" ~   \"COOK COUNTY IGT\", #dropped\n    Category == \"98\" ~  \"PRIOR YEAR REFUNDS\", #dropped\nCategory == \"TOTALS\" ~ \"Total\"\n\n  ) ) %>% \n  select(-type, -Category) %>%  # drop extra columns type and Category number\n  group_by(Year, Category_name) %>%\n  summarise(Dollars= round(sum(Dollars),digits=2)) %>% \n  mutate(Category_name = str_to_title(Category_name))\n\n# creates wide version of table where each revenue source is a column\nrevenue_wide2 <- rev_long %>% pivot_wider(names_from = Category_name, \n              values_from = Dollars) %>%\n#  relocate(\"Other Revenue Sources **\", .after = last_col()) %>%\n  relocate(\"Total\", .after =  last_col())\n\n\n\n\nCode\nexp_long <- pivot_longer(exp_totals, exp_402:exp_TOTALS , names_to = c(\"type\", \"Category\"), values_to = \"Dollars\", names_sep = \"_\") %>% \n  rename(Year = fy ) %>% \n  mutate(Category_name = \n           case_when(\n            Category == \"402\" ~ \"AGING\" ,\n            Category == \"406\" ~ \"AGRICULTURE\", \n             Category == \"416\" ~ \"Central Management\",\n            Category == \"418\" ~ \"CHILDREN AND FAMILY SERVICES\", \n             Category == \"420\" ~ \"Community Development\",\n            Category == \"422\" ~ \"NATURAL RESOURCES\" ,\n             Category == \"426\" ~ \"CORRECTIONS\",\n            Category == \"427\" ~ \"EMPLOYMENT SECURITY\" ,\n             Category == \"444\" ~ \"Human Services\" ,\n           Category == \"478\" ~ \"HEALTHCARE & FAM SER NET OF MEDICAID\", \n            Category == \"482\" ~ \"PUBLIC HEALTH\", \n            Category == \"492\" ~ \"REVENUE\", \n             Category == \"494\" ~ \"Transportation\" ,\n             Category == \"532\" ~ \"ENVIRONMENTAL PROTECT AGENCY\" ,\n             Category == \"557\" ~ \"Tollway\" ,\n             Category == \"684\" ~ \"IL COMMUNITY COLLEGE BOARD\", \n             Category == \"691\" ~ \"IL STUDENT ASSISTANCE COMM\" ,\n             Category == \"900\" ~ \"NOT IN FRAME\",\n             Category == \"901\" ~ \"State Pension Contribution\",\n             Category == \"903\" ~ \"Debt Service\",\n             Category == \"904\" ~ \"State Employee Healthcare\",\n             Category == \"910\" ~ \"LEGISLATIVE\"  ,\n             Category == \"920\" ~ \"JUDICIAL\" ,\n             Category == \"930\" ~ \"ELECTED OFFICERS\" , \n             Category == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             Category == \"941\" ~ \"Public Safety\" ,\n             Category == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n             Category == \"943\" ~ \"CENTRAL SERVICES\",\n             Category == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             Category == \"945\" ~ \"Medicaid\" ,\n             Category == \"946\" ~ \"Capital Improvement\" , \n             Category == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n             Category == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             Category == \"959\" ~ \"K-12 Education\" ,\n             Category == \"960\" ~ \"UNIVERSITY EDUCATION\",\n             Category == \"970\" ~ \"Local Govt Revenue Sharing\",\n          Category == \"TOTALS\" ~ \"Total\") #,T ~ \"All Other Expenditures **\")\n           ) %>% \n  select(-type, -Category) %>% \n  group_by(Year, Category_name) %>% \n  summarise(Dollars= round(sum(Dollars),digits=2)) %>% \n  mutate(Category_name = str_to_title(Category_name))\n\nexpenditure_wide2 <- exp_long%>% \n  pivot_wider(names_from = Category_name, \n              values_from = Dollars) %>%\n  #relocate(\"All Other Expenditures **\", .after = last_col()) %>%\n  relocate(\"Total\", .after =  last_col())\n\n\n\n\nCode\n# function for calculating the CAGR\ncalc_cagr <- function(df, n) {\n  df <- exp_long %>%\n    #select(-type) %>%\n    arrange(Category_name, Year) %>%\n    group_by(Category_name) %>%\n    mutate(cagr = ((`Dollars` / lag(`Dollars`, n)) ^ (1 / n)) - 1)\n\n  return(df)\n}\n\n# This works for one variable at a time\ncagr_24 <- calc_cagr(exp_long, 24) %>% \n  # group_by(Category) %>%\n  summarize(cagr_24 = round(sum(cagr*100, na.rm = TRUE), 2))\n\ncagr23_precovid <- exp_long %>%\n  filter(Year <= 2019) %>%\n  calc_cagr(21) %>% \n  summarize(cagr_21 = round(sum(cagr*100, na.rm = TRUE), 2))\n\n\n\ncagr_10 <- calc_cagr(exp_long, 10) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_10 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_5 <- calc_cagr(exp_long, 5) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_5 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_3 <- calc_cagr(exp_long, 3) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_3 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_2 <- calc_cagr(exp_long, 2) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_2 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_1 <- calc_cagr(exp_long, 1) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_1 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\nCAGR_expenditures_summary_tot <- data.frame(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_24 ) %>% \n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %>% \n  rename(\"Expenditure Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10,\"24 Year CAGR\" = cagr_24 )\n\nmove_to_last <- function(df, n) df[c(setdiff(seq_len(nrow(df)), n), n), ]\n\nCAGR_expenditures_summary_tot <- move_to_last(CAGR_expenditures_summary_tot, 29) \n\n#CAGR_expenditures_summary_tot <-   select(CAGR_expenditures_summary_tot, -1) \n\nCAGR_expenditures_summary_tot%>%   \n  kbl(caption = \"CAGR Calculations for Expenditure Categories\" , row.names=FALSE) %>% \n     kable_classic() %>%\n    row_spec(31, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nCAGR Calculations for Expenditure Categories\n \n  \n    Expenditure Category \n    1 Year CAGR \n    2 Year CAGR \n    3 Year CAGR \n    5 Year CAGR \n    10 Year CAGR \n    24 Year CAGR \n  \n \n\n  \n    Aging \n    6.35 \n    6.87 \n    7.18 \n    -0.65 \n    4.33 \n    7.49 \n  \n  \n    Agriculture \n    43.05 \n    15.59 \n    8.10 \n    6.53 \n    3.25 \n    1.19 \n  \n  \n    Bus & Profession Regulation \n    9.53 \n    6.39 \n    3.66 \n    1.97 \n    -1.55 \n    1.48 \n  \n  \n    Capital Improvement \n    -6.53 \n    17.27 \n    18.12 \n    10.65 \n    -3.63 \n    2.15 \n  \n  \n    Central Management \n    2.05 \n    1.06 \n    8.53 \n    1.18 \n    4.71 \n    4.46 \n  \n  \n    Children And Family Services \n    3.98 \n    4.60 \n    5.53 \n    4.71 \n    1.30 \n    0.17 \n  \n  \n    Community Development \n    -15.16 \n    51.43 \n    35.14 \n    16.98 \n    3.31 \n    4.77 \n  \n  \n    Corrections \n    1.52 \n    3.16 \n    1.13 \n    5.12 \n    2.48 \n    2.13 \n  \n  \n    Debt Service \n    -0.83 \n    1.59 \n    -0.70 \n    1.65 \n    1.19 \n    6.11 \n  \n  \n    Elected Officers \n    7.38 \n    7.22 \n    3.48 \n    6.78 \n    4.29 \n    3.88 \n  \n  \n    Employment Security \n    -2.77 \n    16.01 \n    12.87 \n    10.41 \n    1.65 \n    2.37 \n  \n  \n    Environmental Protect Agency \n    -1.98 \n    -4.09 \n    -7.73 \n    -6.49 \n    0.12 \n    3.21 \n  \n  \n    Healthcare & Fam Ser Net Of Medicaid \n    2.95 \n    7.37 \n    -6.65 \n    0.81 \n    -2.87 \n    5.45 \n  \n  \n    Human Services \n    15.30 \n    12.23 \n    10.33 \n    6.90 \n    3.66 \n    2.75 \n  \n  \n    Judicial \n    4.20 \n    6.41 \n    9.15 \n    5.11 \n    3.40 \n    2.99 \n  \n  \n    K-12 Education \n    14.51 \n    11.07 \n    9.44 \n    7.39 \n    4.53 \n    4.30 \n  \n  \n    Legislative \n    24.13 \n    13.97 \n    12.12 \n    8.15 \n    2.76 \n    3.35 \n  \n  \n    Local Govt Revenue Sharing \n    44.48 \n    26.75 \n    16.73 \n    9.93 \n    6.42 \n    4.66 \n  \n  \n    Medicaid \n    10.11 \n    13.93 \n    15.00 \n    10.14 \n    8.99 \n    7.25 \n  \n  \n    Natural Resources \n    3.90 \n    4.22 \n    2.19 \n    5.39 \n    2.85 \n    1.76 \n  \n  \n    Other Boards & Commissions \n    2.96 \n    10.05 \n    3.68 \n    3.20 \n    -2.54 \n    4.23 \n  \n  \n    Other Departments \n    1.94 \n    4.84 \n    8.22 \n    5.63 \n    7.06 \n    9.10 \n  \n  \n    Public Health \n    -0.16 \n    29.65 \n    29.12 \n    20.32 \n    8.71 \n    7.63 \n  \n  \n    Public Safety \n    -9.74 \n    10.35 \n    21.41 \n    17.00 \n    8.62 \n    6.11 \n  \n  \n    Revenue \n    11.96 \n    29.18 \n    46.38 \n    30.84 \n    14.11 \n    6.43 \n  \n  \n    State Employee Healthcare \n    4.47 \n    0.47 \n    -1.52 \n    -1.95 \n    2.49 \n    6.08 \n  \n  \n    State Pension Contribution \n    15.42 \n    10.80 \n    9.67 \n    9.26 \n    9.38 \n    10.76 \n  \n  \n    Tollway \n    7.21 \n    4.76 \n    6.32 \n    3.60 \n    11.66 \n    7.54 \n  \n  \n    Transportation \n    -18.40 \n    3.31 \n    8.10 \n    0.84 \n    -0.24 \n    3.35 \n  \n  \n    University Education \n    4.72 \n    2.44 \n    3.92 \n    -0.72 \n    -0.76 \n    0.44 \n  \n  \n    Total \n    9.72 \n    11.73 \n    11.04 \n    7.27 \n    5.46 \n    5.05 \n  \n\n\n\n\n\n\n\nCode\ncalc_cagr <- function(df, n) {\n  df <- rev_long %>%\n    arrange(Category_name, Year) %>%\n    group_by(Category_name) %>%\n    mutate(cagr = ((Dollars / lag(Dollars, n)) ^ (1 / n)) - 1)\n\n  return(df)\n}\n\n# This works for one variable at a time\ncagr_24 <- calc_cagr(rev_long, 24) %>% \n     # group_by(Category) %>%\n  summarize(cagr_24 = round(sum(cagr*100, na.rm = TRUE), 2))\n\ncagr_10 <- calc_cagr(rev_long, 10) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_10 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_5 <- calc_cagr(rev_long, 5) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_5 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_3 <- calc_cagr(rev_long, 3) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_3 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_2 <- calc_cagr(rev_long, 2) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_2 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\n cagr_1 <- calc_cagr(rev_long, 1) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_1 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\nCAGR_revenue_summary_tot <- data.frame(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_24) %>%   \n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %>% \n  rename(\"Revenue Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10,\"24 Year CAGR\" = cagr_24 )\n\nCAGR_revenue_summary_tot <- move_to_last(CAGR_revenue_summary_tot,1)\nCAGR_revenue_summary_tot <- move_to_last(CAGR_revenue_summary_tot,22)\n\nCAGR_revenue_summary_tot %>% \n  kbl(caption = \"CAGR Calculations for Revenue Sources\", row.names = FALSE) %>% \n     kable_classic() %>%\n    row_spec(23, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nCAGR Calculations for Revenue Sources\n \n  \n    Revenue Category \n    1 Year CAGR \n    2 Year CAGR \n    3 Year CAGR \n    5 Year CAGR \n    10 Year CAGR \n    24 Year CAGR \n  \n \n\n  \n    Cigarette Taxes \n    -8.25 \n    -0.54 \n    3.02 \n    1.49 \n    3.33 \n    2.51 \n  \n  \n    Corp Franchise Taxes & Fees \n    -32.40 \n    1.22 \n    -4.37 \n    0.85 \n    1.18 \n    2.55 \n  \n  \n    Corporate Income Taxes \n    76.66 \n    72.77 \n    38.19 \n    32.31 \n    13.59 \n    7.70 \n  \n  \n    Federal Medicaid \n    8.48 \n    17.30 \n    16.43 \n    12.76 \n    11.30 \n    7.52 \n  \n  \n    Federal Other \n    21.32 \n    32.72 \n    22.40 \n    12.92 \n    6.39 \n    4.55 \n  \n  \n    Federal Transportation \n    -22.95 \n    1.39 \n    10.40 \n    1.51 \n    1.37 \n    3.33 \n  \n  \n    Gifts And Bequests \n    23.76 \n    42.12 \n    18.49 \n    10.46 \n    10.65 \n    11.43 \n  \n  \n    Individual Income Taxes \n    12.60 \n    16.35 \n    9.25 \n    15.22 \n    5.36 \n    5.68 \n  \n  \n    Inheritance Tax \n    35.98 \n    48.20 \n    16.36 \n    18.47 \n    10.12 \n    3.74 \n  \n  \n    Insurance Taxes&Fees&Licenses \n    -3.42 \n    12.76 \n    5.20 \n    2.79 \n    3.20 \n    6.56 \n  \n  \n    Licenses, Fees & Registrations \n    -4.32 \n    15.28 \n    16.98 \n    9.34 \n    6.27 \n    7.89 \n  \n  \n    Liquor Gallonage Taxes \n    2.53 \n    2.81 \n    2.49 \n    1.69 \n    1.37 \n    7.45 \n  \n  \n    Lottery Receipts \n    -6.17 \n    9.62 \n    1.63 \n    2.27 \n    0.90 \n    2.15 \n  \n  \n    Medical Provider Assessments \n    -1.98 \n    3.67 \n    16.26 \n    11.80 \n    8.33 \n    8.36 \n  \n  \n    Motor Fuel Tax \n    6.12 \n    4.36 \n    23.16 \n    13.42 \n    6.98 \n    2.78 \n  \n  \n    Motor Vehicle And Operators \n    -5.59 \n    4.66 \n    -0.04 \n    0.15 \n    0.64 \n    3.21 \n  \n  \n    Other Taxes \n    63.89 \n    32.74 \n    17.36 \n    13.92 \n    17.13 \n    7.87 \n  \n  \n    Public Utility Taxes \n    3.09 \n    -0.43 \n    -1.43 \n    0.22 \n    -0.48 \n    0.70 \n  \n  \n    Receipts From Revenue Producing \n    3.01 \n    4.78 \n    -2.68 \n    1.45 \n    3.49 \n    5.07 \n  \n  \n    Riverboat Wagering Taxes \n    80.77 \n    -1.03 \n    -8.90 \n    -6.18 \n    -4.20 \n    1.75 \n  \n  \n    Sales Taxes \n    11.29 \n    12.22 \n    7.40 \n    6.27 \n    4.43 \n    3.23 \n  \n  \n    All Other Sources \n    37.70 \n    12.92 \n    13.64 \n    8.08 \n    6.29 \n    4.54 \n  \n  \n    Total \n    14.16 \n    18.36 \n    13.16 \n    11.40 \n    6.55 \n    5.16 \n  \n\n\n\n\n\nCode\nrm(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_24)\n\n\n\n\nCode\nrevenue_change2 <- rev_long %>%\n  #select(-c(Category)) %>%\n  filter(Year > 2020) %>%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %>%\n  mutate(\n    \"FY 2022 Revenues ($ billions)\" = round(Dollars_2022/1000, digits = 1),\n#    \"Change from 2021 to 2022\" = round(Dollars_2022 - Dollars_2021, digits = 2),\n         \"Percent Change from 2021 to 2022\" = round(((Dollars_2022 -Dollars_2021)/Dollars_2021*100), digits = 2)) %>%\n  left_join(CAGR_revenue_summary_tot, by = c(\"Category_name\" = \"Revenue Category\")) %>% \n    arrange(-`FY 2022 Revenues ($ billions)`)%>%\n  #select(-c(Dollars_2021, Dollars_2021, `1 Year CAGR`:`10 Year CAGR`)) %>%\n  rename( \"Compound Annual Growth, 1998-2022*\" = `24 Year CAGR`, \n          \"FY2022 Revenue Category\" = Category_name ) %>%\n  select(-c(Dollars_2021, Dollars_2022, `1 Year CAGR`:`10 Year CAGR`)) \n\n\nrevenue_change2 <- move_to_last(revenue_change2,8)\nrevenue_change2 <- move_to_last(revenue_change2,1)\n\nrevenue_change2 %>% \n  kbl(caption = \"Yearly Change in Revenue\", row.names = FALSE) %>% \n   kable_classic() %>%\n    row_spec(23, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nYearly Change in Revenue\n \n  \n    FY2022 Revenue Category \n    FY 2022 Revenues ($ billions) \n    Percent Change from 2021 to 2022 \n    Compound Annual Growth, 1998-2022* \n  \n \n\n  \n    Individual Income Taxes \n    23.8 \n    12.60 \n    5.68 \n  \n  \n    Federal Medicaid \n    19.0 \n    8.48 \n    7.52 \n  \n  \n    Sales Taxes \n    15.4 \n    11.29 \n    3.23 \n  \n  \n    Federal Other \n    10.9 \n    21.32 \n    4.55 \n  \n  \n    Corporate Income Taxes \n    9.7 \n    76.66 \n    7.70 \n  \n  \n    Medical Provider Assessments \n    3.7 \n    -1.98 \n    8.36 \n  \n  \n    Motor Fuel Tax \n    2.5 \n    6.12 \n    2.78 \n  \n  \n    Receipts From Revenue Producing \n    2.4 \n    3.01 \n    5.07 \n  \n  \n    Gifts And Bequests \n    1.9 \n    23.76 \n    11.43 \n  \n  \n    Licenses, Fees & Registrations \n    1.9 \n    -4.32 \n    7.89 \n  \n  \n    Federal Transportation \n    1.8 \n    -22.95 \n    3.33 \n  \n  \n    Motor Vehicle And Operators \n    1.6 \n    -5.59 \n    3.21 \n  \n  \n    Lottery Receipts \n    1.4 \n    -6.17 \n    2.15 \n  \n  \n    Other Taxes \n    1.4 \n    63.89 \n    7.87 \n  \n  \n    Public Utility Taxes \n    1.4 \n    3.09 \n    0.70 \n  \n  \n    Cigarette Taxes \n    0.8 \n    -8.25 \n    2.51 \n  \n  \n    Inheritance Tax \n    0.6 \n    35.98 \n    3.74 \n  \n  \n    Insurance Taxes&Fees&Licenses \n    0.6 \n    -3.42 \n    6.56 \n  \n  \n    Liquor Gallonage Taxes \n    0.3 \n    2.53 \n    7.45 \n  \n  \n    Riverboat Wagering Taxes \n    0.3 \n    80.77 \n    1.75 \n  \n  \n    Corp Franchise Taxes & Fees \n    0.2 \n    -32.40 \n    2.55 \n  \n  \n    All Other Sources \n    2.7 \n    37.70 \n    4.54 \n  \n  \n    Total \n    104.5 \n    14.16 \n    5.16 \n  \n\n\n\n\n\nCode\nexpenditure_change2 <- exp_long %>%\n  #select(-c(type,Category)) %>%\n  filter(Year > 2020) %>%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %>%\n  mutate(\"FY 2022 Expenditures ($ billions)\" = round(Dollars_2022/1000, digits = 1),\n  #  \"Change from 2021 to 2022\" = Dollars_2022 - Dollars_2021,\n         \"Percent Change from 2021 to 2022\" = round((Dollars_2022 -Dollars_2021)/Dollars_2021*100, digits = 2) )%>%\n  left_join(CAGR_expenditures_summary_tot, by = c(\"Category_name\" = \"Expenditure Category\")) %>% \n  arrange(-`FY 2022 Expenditures ($ billions)`)%>%\n  select(-c(Dollars_2022, Dollars_2021, `1 Year CAGR`:`10 Year CAGR`)) %>%\n  rename( \"Compound Annual Growth, 1998-2022*\" = `24 Year CAGR`, \n          \"FY2022 Expenditure Category\" = Category_name )\n\nexpenditure_change2 <- move_to_last(expenditure_change2, 1)\n\nexpenditure_change2 %>% \n  kbl(caption = \"Yearly Change in Expenditures\", row.names = FALSE) %>% \n  kable_classic() %>%\n    row_spec(31, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nYearly Change in Expenditures\n \n  \n    FY2022 Expenditure Category \n    FY 2022 Expenditures ($ billions) \n    Percent Change from 2021 to 2022 \n    Compound Annual Growth, 1998-2022* \n  \n \n\n  \n    Medicaid \n    28.9 \n    10.11 \n    7.25 \n  \n  \n    K-12 Education \n    13.9 \n    14.51 \n    4.30 \n  \n  \n    Local Govt Revenue Sharing \n    10.4 \n    44.48 \n    4.66 \n  \n  \n    Human Services \n    7.6 \n    15.30 \n    2.75 \n  \n  \n    State Pension Contribution \n    6.5 \n    15.42 \n    10.76 \n  \n  \n    Other Departments \n    4.9 \n    1.94 \n    9.10 \n  \n  \n    Transportation \n    4.4 \n    -18.40 \n    3.35 \n  \n  \n    State Employee Healthcare \n    3.0 \n    4.47 \n    6.08 \n  \n  \n    University Education \n    2.3 \n    4.72 \n    0.44 \n  \n  \n    Tollway \n    2.1 \n    7.21 \n    7.54 \n  \n  \n    Debt Service \n    2.0 \n    -0.83 \n    6.11 \n  \n  \n    Revenue \n    1.9 \n    11.96 \n    6.43 \n  \n  \n    Public Safety \n    1.8 \n    -9.74 \n    6.11 \n  \n  \n    Corrections \n    1.6 \n    1.52 \n    2.13 \n  \n  \n    Children And Family Services \n    1.4 \n    3.98 \n    0.17 \n  \n  \n    Community Development \n    1.4 \n    -15.16 \n    4.77 \n  \n  \n    Aging \n    1.2 \n    6.35 \n    7.49 \n  \n  \n    Central Management \n    1.2 \n    2.05 \n    4.46 \n  \n  \n    Elected Officers \n    1.0 \n    7.38 \n    3.88 \n  \n  \n    Public Health \n    0.9 \n    -0.16 \n    7.63 \n  \n  \n    Environmental Protect Agency \n    0.7 \n    -1.98 \n    3.21 \n  \n  \n    Judicial \n    0.5 \n    4.20 \n    2.99 \n  \n  \n    Capital Improvement \n    0.4 \n    -6.53 \n    2.15 \n  \n  \n    Healthcare & Fam Ser Net Of Medicaid \n    0.4 \n    2.95 \n    5.45 \n  \n  \n    Employment Security \n    0.3 \n    -2.77 \n    2.37 \n  \n  \n    Natural Resources \n    0.3 \n    3.90 \n    1.76 \n  \n  \n    Other Boards & Commissions \n    0.3 \n    2.96 \n    4.23 \n  \n  \n    Bus & Profession Regulation \n    0.2 \n    9.53 \n    1.48 \n  \n  \n    Agriculture \n    0.1 \n    43.05 \n    1.19 \n  \n  \n    Legislative \n    0.1 \n    24.13 \n    3.35 \n  \n  \n    Total \n    101.8 \n    9.72 \n    5.05 \n  \n\n\n\n\n\n\n\nCode\n#install.packages(\"openxlsx\")\nlibrary(openxlsx)\n\ndataset_names <- list('rev_long' = rev_long, 'exp_long' = exp_long, \n                      `Table 1` = expenditure_change2, `Table 2` = revenue_change2,\n                      'Table 4.a' = CAGR_revenue_summary_tot, 'Table 4.b' = CAGR_expenditures_summary_tot, \n                      'year_totals' = year_totals)\n\nwrite.xlsx(dataset_names, file = 'summary_file_FY2022_withTotals.xlsx')\n\n\nExport summary file with Totals\n\n\nCode\ndataset_names <- list('Aggregate Revenues' = revenue_wide2, \n                      'Aggregate Expenditures' = expenditure_wide2, \n\n                      \n                      'Table 1' = expenditure_change2, #Top categories with yearly change, 23 yr cagr\n                      'Table 2' = revenue_change2,\n                      \n                     # 'Table 4.a' = CAGR_revenue_summary_majorcats, # Categories Match Table 1 in paper\n                     # 'Table 4.b' = CAGR_expenditures_summary_majorcats, \n                                            \n                     # 'Table 1-AllCats' = expenditure_change_allcats,  # All Categories by Year\n                    #  'Table 2-AllCats' = revenue_change_allcats,\n                      \n                      'Table 4.a-AllCats' = CAGR_revenue_summary_tot, \n                      'Table 4.b-AllCats' = CAGR_expenditures_summary_tot, \n                      \n                      'year_totals' = year_totals,    # Total Revenue, Expenditure, and Fiscal gap per year\n                      \n                      'aggregated_totals_long' = aggregated_totals_long # all data in long format. Good for creating pivot tables in Excel\n                      )\n\nwrite.xlsx(dataset_names, file = 'summary_file_FY22_wTotals.xlsx')"
  },
  {
    "objectID": "Everything.html#summary-tables---largest-categories-1",
    "href": "Everything.html#summary-tables---largest-categories-1",
    "title": "9  All Code together",
    "section": "11.3 Summary Tables - Largest Categories",
    "text": "11.3 Summary Tables - Largest Categories\nThe 10 largest revenue sources and 13 largest expenditure sources remain separate categories and all other smaller sources/expenditures are combined into “All Other _____”. These condensed tables are typically used in the Fiscal Futures articles. They were manually created in past years but this hopefully automates the process a bit until final formatting stages.\n\ntake ff_rev and ff_exp data frames, which were in wide format, pivot them longer and mutate the Category_name variable to nicer labels. Keep largest categories separate and aggregate the rest.\n\n\n\nCode\nexp_totals <- ff_exp %>% rowwise() %>% mutate(exp_TOTALS = sum(across(exp_402:exp_970))) # creates total column too\n\nrev_totals <- ff_rev %>% rowwise() %>% \n  mutate(rev_TOTALS = sum(across(rev_02:rev_78)))\n\nrev_long <- pivot_longer(rev_totals, rev_02:rev_TOTALS, names_to = c(\"type\",\"Category\"), values_to = \"Dollars\", names_sep = \"_\") %>% \n  rename(Year = fy) %>%\n  mutate(Category_name = case_when(\n    Category == \"02\" ~ \"Income Tax\" ,\n    Category == \"03\" ~ \"Corporate Income Tax\" ,\n    Category == \"06\" ~ \"Sales Tax\" ,\n    Category == \"09\" ~ \"Motor Fuel Taxes\" ,\n #   Category == \"12\" ~ \"PUBLIC UTILITY TAXES, gross of PPRT\" ,\n  #  Category == \"15\" ~ \"CIGARETTE TAXES\" ,\n #   Category == \"18\" ~ \"LIQUOR GALLONAGE TAXES\" ,\n #  Category == \"21\" ~ \"INHERITANCE TAX\" ,\n  #  Category == \"24\" ~ \"INSURANCE TAXES&FEES&LICENSES, net of refunds \" ,\n   # Category == \"27\" ~ \"CORP FRANCHISE TAXES & FEES\" ,\n #   Category == \"30\" ~ \"HORSE RACING TAXES & FEES\",  # in Other\n    Category == \"31\" ~ \"Medical Provider Assessments\" ,\n  #  Category == \"32\" ~ \"GARNISHMENT-LEVIES\" , # dropped\n  #  Category == \"33\" ~  \"LOTTERY RECEIPTS\" ,\n   # Category == \"35\" ~  \"OTHER TAXES\" ,\n    Category == \"36\" ~  \"Receipts from Revenue Producing\", \n    Category == \"39\" ~  \"Licenses, Fees, Registration\" ,\n   # Category == \"42\" ~  \"MOTOR VEHICLE AND OPERATORS\" ,\n#    Category == \"45\" ~  \"STUDENT FEES-UNIVERSITIES\",   # dropped\n#    Category == \"48\" ~  \"RIVERBOAT WAGERING TAXES\" ,\n  #  Category == \"51\" ~  \"RETIREMENT CONTRIBUTIONS\" , # dropped\n   # Category == \"54\" ~ \"GIFTS AND BEQUESTS\", \n    Category == \"57\" ~  \"Federal Other\" ,\n    Category == \"58\" ~  \"Federal Medicaid Reimbursements\", \n    Category == \"59\" ~  \"Federal Transportation\" ,\n #   Category == \"60\" ~  \"OTHER GRANTS AND CONTRACTS\", #other\n#    Category == \"63\" ~  \"INVESTMENT INCOME\", # other\n #   Category == \"66\" ~ \"PROCEEDS,INVESTMENT MATURITIES\" , #dropped\n #   Category == \"72\" ~ \"BOND ISSUE PROCEEDS\",  #dropped\n #   Category == \"75\" ~  \"INTER-AGENCY RECEIPTS \",  #dropped\n #   Category == \"76\" ~  \"TRANSFER IN FROM OUT FUNDS\",  #other\n   # Category == \"78new\" ~  \"ALL OTHER SOURCES\" ,\n   # Category == \"79\" ~   \"COOK COUNTY IGT\", #dropped\n #   Category == \"98\" ~  \"PRIOR YEAR REFUNDS\", #dropped\n                \nCategory == \"TOTALS\" ~ \"Total Revenue\",\nT ~ \"All Other Sources **\" # any other Category number that was not specifically referenced is cobined into Other Revenue Sources\n\n  ) ) %>% \n  select(-type, -Category) %>%  # drop extra columns type and Category number\n  group_by(Year, Category_name) %>%\n  summarise(Dollars= round(sum(Dollars),digits=2)) \n\n# revenue_wide # not actually in wide format yet. \n# has 10 largest rev sources separate and combined all others to Other in long data format. \n\n\n# creates wide version of table where each revenue source is a column\nrevenue_wide2 <- rev_long %>% pivot_wider(names_from = Category_name, \n              values_from = Dollars) %>%\n  relocate(\"All Other Sources **\", .after = last_col()) %>%\n  relocate(\"Total Revenue\", .after =  last_col())\n\n\nexp_long <- pivot_longer(exp_totals, exp_402:exp_TOTALS , names_to = c(\"type\", \"Category\"), values_to = \"Dollars\", names_sep = \"_\") %>% \n  rename(Year = fy ) %>% \n  mutate(Category_name = \n           case_when(\n            # Category == \"402\" ~ \"AGING\" ,\n           #  Category == \"406\" ~ \"AGRICULTURE\", \n             Category == \"416\" ~ \"Central Management\",\n            # Category == \"418\" ~ \"CHILDREN AND FAMILY SERVICES\", \n             Category == \"420\" ~ \"Community Development\",\n           #  Category == \"422\" ~ \"NATURAL RESOURCES\" ,\n            # Category == \"426\" ~ \"CORRECTIONS\",\n           #  Category == \"427\" ~ \"EMPLOYMENT SECURITY\" ,\n             Category == \"444\" ~ \"Human Services\" ,\n           #  Category == \"478\" ~ \"HEALTHCARE & FAM SER NET OF MEDICAID\", \n           #  Category == \"482\" ~ \"PUBLIC HEALTH\", \n           #  Category == \"492\" ~ \"REVENUE\", \n             Category == \"494\" ~ \"Transportation\" ,\n           #  Category == \"532\" ~ \"ENVIRONMENTAL PROTECT AGENCY\" ,\n             Category == \"557\" ~ \"Tollway\" ,\n           #  Category == \"684\" ~ \"IL COMMUNITY COLLEGE BOARD\", \n            # Category == \"691\" ~ \"IL STUDENT ASSISTANCE COMM\" ,\n           #  Category == \"900\" ~ \"NOT IN FRAME\",\n             Category == \"901\" ~ \"State Pension Contribution\",\n             Category == \"903\" ~ \"Debt Service\",\n             Category == \"904\" ~ \"State Employee Healthcare\",\n           #  Category == \"910\" ~ \"LEGISLATIVE\"  ,\n          #   Category == \"920\" ~ \"JUDICIAL\" ,\n          #   Category == \"930\" ~ \"ELECTED OFFICERS\" , \n            # Category == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             Category == \"941\" ~ \"Public Safety\" ,\n           #  Category == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n           #  Category == \"943\" ~ \"CENTRAL SERVICES\",\n           #  Category == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             Category == \"945\" ~ \"Medicaid\" ,\n             Category == \"946\" ~ \"Capital Improvement\" , \n           #  Category == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n            # Category == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             Category == \"959\" ~ \"K-12 Education\" ,\n           #  Category == \"960\" ~ \"UNIVERSITY EDUCATION\",\n             Category == \"970\" ~ \"Local Govt Revenue Sharing\",\n          Category == \"TOTALS\" ~ \"Total Expenditures\",\n             T ~ \"All Other Expenditures **\")\n           ) %>% \n  select(-type, -Category) %>% \n  group_by(Year, Category_name) %>% \n  summarise(Dollars= round(sum(Dollars),digits=2))\n\nexpenditure_wide2 <- exp_long%>% \n  pivot_wider(names_from = Category_name, \n              values_from = Dollars) %>%\n  relocate(\"All Other Expenditures **\", .after = last_col()) %>%\n  relocate(\"Total Expenditures\", .after =  last_col())\n\n\n# CAGR values for largest expenditure categories and combined All Other Expenditures\n\n# function for calculating the CAGR\ncalc_cagr <- function(df, n) {\n  df <- exp_long %>%\n    #select(-type) %>%\n    arrange(Category_name, Year) %>%\n    group_by(Category_name) %>%\n    mutate(cagr = ((`Dollars` / lag(`Dollars`, n)) ^ (1 / n)) - 1)\n\n  return(df)\n}\n\n# This works for one variable at a time\ncagr_24 <- calc_cagr(exp_long, 24) %>% \n  # group_by(Category) %>%\n  summarize(cagr_24 = round(sum(cagr*100, na.rm = TRUE), 2))\n\ncagr23_precovid <- exp_long %>%\n  filter(Year <= 2019) %>%\n  calc_cagr(21) %>% \n  summarize(cagr_21 = round(sum(cagr*100, na.rm = TRUE), 2))\n\n\n\ncagr_10 <- calc_cagr(exp_long, 10) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_10 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_5 <- calc_cagr(exp_long, 5) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_5 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_3 <- calc_cagr(exp_long, 3) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_3 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_2 <- calc_cagr(exp_long, 2) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_2 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_1 <- calc_cagr(exp_long, 1) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_1 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\nCAGR_expenditures_majorcats_tot <- data.frame(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_24 ) %>% \n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %>% \n  rename(\"Expenditure Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10,\"24 Year CAGR\" = cagr_24 )\n\nmove_to_last <- function(df, n) df[c(setdiff(seq_len(nrow(df)), n), n), ]\n\nCAGR_expenditures_majorcats_tot <- move_to_last(CAGR_expenditures_majorcats_tot, 1)\nCAGR_expenditures_majorcats_tot <- move_to_last(CAGR_expenditures_majorcats_tot, 13) \n\n\nCAGR_expenditures_majorcats_tot%>%   \n  kbl(caption = \"CAGR Calculations for Largest Expenditure Categories\" , row.names=FALSE) %>% \n     kable_classic() \n\n\n\n\nCAGR Calculations for Largest Expenditure Categories\n \n  \n    Expenditure Category \n    1 Year CAGR \n    2 Year CAGR \n    3 Year CAGR \n    5 Year CAGR \n    10 Year CAGR \n    24 Year CAGR \n  \n \n\n  \n    Capital Improvement \n    -6.53 \n    17.27 \n    18.12 \n    10.65 \n    -3.63 \n    2.15 \n  \n  \n    Central Management \n    2.05 \n    1.06 \n    8.53 \n    1.18 \n    4.71 \n    4.46 \n  \n  \n    Community Development \n    -15.16 \n    51.43 \n    35.14 \n    16.98 \n    3.31 \n    4.77 \n  \n  \n    Debt Service \n    -0.83 \n    1.59 \n    -0.70 \n    1.65 \n    1.19 \n    6.11 \n  \n  \n    Human Services \n    15.30 \n    12.23 \n    10.33 \n    6.90 \n    3.66 \n    2.75 \n  \n  \n    K-12 Education \n    14.51 \n    11.07 \n    9.44 \n    7.39 \n    4.53 \n    4.30 \n  \n  \n    Local Govt Revenue Sharing \n    44.48 \n    26.75 \n    16.73 \n    9.93 \n    6.42 \n    4.66 \n  \n  \n    Medicaid \n    10.11 \n    13.93 \n    15.00 \n    10.14 \n    8.99 \n    7.25 \n  \n  \n    Public Safety \n    -9.74 \n    10.35 \n    21.41 \n    17.00 \n    8.62 \n    6.11 \n  \n  \n    State Employee Healthcare \n    4.47 \n    0.47 \n    -1.52 \n    -1.95 \n    2.49 \n    6.08 \n  \n  \n    State Pension Contribution \n    15.42 \n    10.80 \n    9.67 \n    9.26 \n    9.38 \n    10.76 \n  \n  \n    Tollway \n    7.21 \n    4.76 \n    6.32 \n    3.60 \n    11.66 \n    7.54 \n  \n  \n    Transportation \n    -18.40 \n    3.31 \n    8.10 \n    0.84 \n    -0.24 \n    3.35 \n  \n  \n    All Other Expenditures ** \n    4.13 \n    7.59 \n    7.95 \n    5.28 \n    3.69 \n    3.68 \n  \n  \n    Total Expenditures \n    9.72 \n    11.73 \n    11.04 \n    7.27 \n    5.46 \n    5.05 \n  \n\n\n\n\n\nCode\n# Yearly change for Top 13 largest expenditure categories\nexpenditure_change2 <- exp_long %>%\n  filter(Year > 2020) %>%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %>%\n  mutate(\"FY 2022 Expenditures\" = round(Dollars_2022/1000, digits = 1),\n         \"FY 2021 Expenditures\" = round(Dollars_2021/1000, digits = 1),\n         \"Percent Change from 2021 to 2022\" = percent((Dollars_2022 -Dollars_2021)/Dollars_2021, accuracy = .1) )  %>%\n  left_join(CAGR_expenditures_majorcats_tot, by = c(\"Category_name\" = \"Expenditure Category\")) %>% \n  arrange(-`FY 2022 Expenditures`)%>%\n  mutate(`24 Year CAGR` = percent(`24 Year CAGR`/100, accuracy=.1)) %>%\n  select(-c(Dollars_2022, Dollars_2021, `1 Year CAGR`:`10 Year CAGR`)) %>%\n  rename( \"Compound Annual Growth, 1998-2022*\" = `24 Year CAGR`, \n          \"FY2022 Expenditure Category\" = Category_name )\n\nexpenditure_change2 <- move_to_last(expenditure_change2, 3) \n\nexpenditure_change2 <- move_to_last(expenditure_change2, 1)\n\nexpenditure_change2 %>% \n  kbl(caption = \"Yearly Change in Expenditures\", row.names = FALSE, align = \"l\") %>% \n  kable_classic() %>%\n    row_spec(15, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nYearly Change in Expenditures\n \n  \n    FY2022 Expenditure Category \n    FY 2022 Expenditures \n    FY 2021 Expenditures \n    Percent Change from 2021 to 2022 \n    Compound Annual Growth, 1998-2022* \n  \n \n\n  \n    Medicaid \n    28.9 \n    26.3 \n    10.1% \n    7.2% \n  \n  \n    K-12 Education \n    13.9 \n    12.2 \n    14.5% \n    4.3% \n  \n  \n    Local Govt Revenue Sharing \n    10.4 \n    7.2 \n    44.5% \n    4.7% \n  \n  \n    Human Services \n    7.6 \n    6.6 \n    15.3% \n    2.8% \n  \n  \n    State Pension Contribution \n    6.5 \n    5.6 \n    15.4% \n    10.8% \n  \n  \n    Transportation \n    4.4 \n    5.3 \n    -18.4% \n    3.4% \n  \n  \n    State Employee Healthcare \n    3.0 \n    2.9 \n    4.5% \n    6.1% \n  \n  \n    Tollway \n    2.1 \n    2.0 \n    7.2% \n    7.5% \n  \n  \n    Debt Service \n    2.0 \n    2.0 \n    -0.8% \n    6.1% \n  \n  \n    Public Safety \n    1.8 \n    2.0 \n    -9.7% \n    6.1% \n  \n  \n    Community Development \n    1.4 \n    1.7 \n    -15.2% \n    4.8% \n  \n  \n    Central Management \n    1.2 \n    1.2 \n    2.0% \n    4.5% \n  \n  \n    Capital Improvement \n    0.4 \n    0.5 \n    -6.5% \n    2.1% \n  \n  \n    All Other Expenditures ** \n    18.2 \n    17.5 \n    4.1% \n    3.7% \n  \n  \n    Total Expenditures \n    101.8 \n    92.8 \n    9.7% \n    5.0% \n  \n\n\n\n\n\nTop 10 revenue sources CAGRs and Yearly Change Tables:\n\n\nCode\n##### Top 10 revenue CAGRs: ####\n\n\ncalc_cagr <- function(df, n) {\n  df <- rev_long %>%\n    arrange(Category_name, Year) %>%\n    group_by(Category_name) %>%\n    mutate(cagr = ((Dollars / lag(Dollars, n)) ^ (1 / n)) - 1)\n\n  return(df)\n}\n\n# This works for one variable at a time\ncagr_24 <- calc_cagr(rev_long, 24) %>% \n     # group_by(Category) %>%\n  summarize(cagr_24 = round(sum(cagr*100, na.rm = TRUE), 2))\n\ncagr_10 <- calc_cagr(rev_long, 10) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_10 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_5 <- calc_cagr(rev_long, 5) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_5 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_3 <- calc_cagr(rev_long, 3) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_3 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_2 <- calc_cagr(rev_long, 2) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_2 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\n cagr_1 <- calc_cagr(rev_long, 1) %>% \n  filter(Year == 2022) %>%\n  summarize(cagr_1 = case_when(Year == 2022 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\nCAGR_revenue_majorcats_tot <- data.frame(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_24) %>%   \n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %>% \n  rename(\"Revenue Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10,\"24 Year CAGR\" = cagr_24 )\n\nCAGR_revenue_majorcats_tot <- move_to_last(CAGR_revenue_majorcats_tot,1)\nCAGR_revenue_majorcats_tot <- move_to_last(CAGR_revenue_majorcats_tot,11)\n\nCAGR_revenue_majorcats_tot %>% \n  kbl(caption = \"CAGR Calculations for Revenue Sources\", row.names = FALSE) %>% \n     kable_classic() \n\n\n\n\nCAGR Calculations for Revenue Sources\n \n  \n    Revenue Category \n    1 Year CAGR \n    2 Year CAGR \n    3 Year CAGR \n    5 Year CAGR \n    10 Year CAGR \n    24 Year CAGR \n  \n \n\n  \n    Corporate Income Tax \n    76.66 \n    72.77 \n    38.19 \n    32.31 \n    13.59 \n    7.70 \n  \n  \n    Federal Medicaid Reimbursements \n    8.48 \n    17.30 \n    16.43 \n    12.76 \n    11.30 \n    7.52 \n  \n  \n    Federal Other \n    21.32 \n    32.72 \n    22.40 \n    12.92 \n    6.39 \n    4.55 \n  \n  \n    Federal Transportation \n    -22.95 \n    1.39 \n    10.40 \n    1.51 \n    1.37 \n    3.33 \n  \n  \n    Income Tax \n    12.60 \n    16.35 \n    9.25 \n    15.22 \n    5.36 \n    5.68 \n  \n  \n    Licenses, Fees, Registration \n    -4.32 \n    15.28 \n    16.98 \n    9.34 \n    6.27 \n    7.89 \n  \n  \n    Medical Provider Assessments \n    -1.98 \n    3.67 \n    16.26 \n    11.80 \n    8.33 \n    8.36 \n  \n  \n    Motor Fuel Taxes \n    6.12 \n    4.36 \n    23.16 \n    13.42 \n    6.98 \n    2.78 \n  \n  \n    Receipts from Revenue Producing \n    3.01 \n    4.78 \n    -2.68 \n    1.45 \n    3.49 \n    5.07 \n  \n  \n    Sales Tax \n    11.29 \n    12.22 \n    7.40 \n    6.27 \n    4.43 \n    3.23 \n  \n  \n    All Other Sources ** \n    13.85 \n    13.43 \n    6.90 \n    4.95 \n    4.07 \n    3.90 \n  \n  \n    Total Revenue \n    14.16 \n    18.36 \n    13.16 \n    11.40 \n    6.55 \n    5.16 \n  \n\n\n\n\n\nCode\n###### Yearly change summary table for Top 10 Revenues #####\nrevenue_change2 <- rev_long %>%\n  #select(-c(Category)) %>%\n  filter(Year > 2020) %>%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %>%\n  mutate(\n    \"FY 2022 Revenues ($ billions)\" = round(Dollars_2022/1000, digits = 1),\n            \"FY 2021 Revenues ($ billions)\" = round(Dollars_2021/1000, digits = 1),\n\n         \"Percent Change from 2021 to 2022\" = percent(((Dollars_2022 -Dollars_2021)/Dollars_2021), accuracy = .1)) %>%\n  left_join(CAGR_revenue_majorcats_tot, by = c(\"Category_name\" = \"Revenue Category\")) %>% \n    arrange(-`FY 2022 Revenues ($ billions)`)%>%\n  #select(-c(Dollars_2021, Dollars_2021, `1 Year CAGR`:`10 Year CAGR`)) %>%\n  mutate(\"Compound Annual Growth, 1998-2022*\" = percent(`24 Year CAGR`/100, accuracy=.1)) %>%\n  rename(\"FY2022 Revenue Category\" = Category_name ) %>%\n  select(-c(Dollars_2022, Dollars_2021, `1 Year CAGR`:`24 Year CAGR`)) \n\nrevenue_change2 <- move_to_last(revenue_change2,5)\n\nrevenue_change2 <- move_to_last(revenue_change2,1)\n\nrevenue_change2%>% \n  kbl(caption = \"Yearly Change in Revenue\", row.names = FALSE, align = \"l\") %>% \n   kable_classic() %>%\n    row_spec(12, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nYearly Change in Revenue\n \n  \n    FY2022 Revenue Category \n    FY 2022 Revenues ($ billions) \n    FY 2021 Revenues ($ billions) \n    Percent Change from 2021 to 2022 \n    Compound Annual Growth, 1998-2022* \n  \n \n\n  \n    Income Tax \n    23.8 \n    21.2 \n    12.6% \n    5.7% \n  \n  \n    Federal Medicaid Reimbursements \n    19.0 \n    17.6 \n    8.5% \n    7.5% \n  \n  \n    Sales Tax \n    15.4 \n    13.9 \n    11.3% \n    3.2% \n  \n  \n    Federal Other \n    10.9 \n    9.0 \n    21.3% \n    4.6% \n  \n  \n    Corporate Income Tax \n    9.7 \n    5.5 \n    76.7% \n    7.7% \n  \n  \n    Medical Provider Assessments \n    3.7 \n    3.8 \n    -2.0% \n    8.4% \n  \n  \n    Motor Fuel Taxes \n    2.5 \n    2.4 \n    6.1% \n    2.8% \n  \n  \n    Receipts from Revenue Producing \n    2.4 \n    2.3 \n    3.0% \n    5.1% \n  \n  \n    Licenses, Fees, Registration \n    1.9 \n    2.0 \n    -4.3% \n    7.9% \n  \n  \n    Federal Transportation \n    1.8 \n    2.4 \n    -22.9% \n    3.3% \n  \n  \n    All Other Sources ** \n    13.3 \n    11.7 \n    13.9% \n    3.9% \n  \n  \n    Total Revenue \n    104.5 \n    91.6 \n    14.2% \n    5.2%"
  },
  {
    "objectID": "Everything.html#export-summary-files",
    "href": "Everything.html#export-summary-files",
    "title": "9  All Code together",
    "section": "11.4 Export Summary Files",
    "text": "11.4 Export Summary Files\nSaves main items in one excel file named summary_file.xlsx. Delete eval=FALSE to run on local computer.\n\n\nCode\n#install.packages(\"openxlsx\")\nlibrary(openxlsx)\n\ndataset_names <- list('Aggregate Revenues' = revenue_wide2, # Top Categories aggregated, nice labels\n                      'Aggregate Expenditures' = expenditure_wide2, \n\n                      \n                      'Table 1' = expenditure_change2, #Top categories with yearly change, 23 yr cagr\n                      'Table 2' = revenue_change2,\n                      \n                      'Table 4.a' = CAGR_revenue_summary_majorcats, # Categories Match Table 1 in paper\n                      'Table 4.b' = CAGR_expenditures_summary_majorcats, \n                                            \n                      'Table 1-AllCats' = expenditure_change_allcats,  # All Categories by Year\n                      'Table 2-AllCats' = revenue_change_allcats,\n                      \n                      'Table 4.a-AllCats' = CAGR_revenue_summary_allcats, \n                      'Table 4.b-AllCats' = CAGR_expenditures_summary_allcats, \n                      \n                      'year_totals' = year_totals,    # Total Revenue, Expenditure, and Fiscal gap per year\n                      \n                      'aggregated_totals_long' = aggregated_totals_long # all data in long format. Good for creating pivot tables in Excel\n                      )\n\nwrite.xlsx(dataset_names, file = 'summary_file_FY22_MajorCats_WithTotals.xlsx')"
  }
]