{"title":"Background Info","markdown":{"headingText":"Background Info","headingAttr":{"id":"","classes":["unnumbered"],"keyvalue":[]},"containsRefs":false,"markdown":"\n---\nformat:\n  html:\n    code-fold: false\n    code-tools: true\n    code-overflow: wrap\n---\n\n> This document is UNFINISHED. Every section is a work in progress and will continue to be updated. - AWM 1/9/2023\n\nThis is a living document in which we aim to describe things as clearly as possible in the time we have, share it with others, and improve as we come back to it. If we wait till we have time to write flawless docs, it'll never happen.\n\nCode and information on the analysis of Illinois' expenditures and revenues. The Fiscal Future Project is associated with the Institute of Government and Policy Affairs but publicly sharing the code and creating a website was done by Alea Wilbur-Mujtaba. Any errors with code or findings are the fault of the author, not the research institute. Data originally from annual FOIA requests to the Illinois Office of the Comptroller.\n\n```{r warning = FALSE, message=FALSE}\n#| include: false\n\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(formatR)\nlibrary(lubridate)\nlibrary(smooth)\nlibrary(forecast)\nlibrary(scales)\nlibrary(kableExtra)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(quantmod)\nlibrary(geofacet)\nlibrary(janitor)\n\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\n\n```\n\n## Including or Excluding funds in the Fiscal Futures All Funds Budget\n\nWhile it is called an \"All Funds\" Budget, that is a slight exaggeration. Illinois has over 700 funds. Whereas the overwhelming majority are included in our \"All Funds\" measure, some are not.  The starting point for our list of all funds is all appropriated funds, but, for the reasons listed below, we exclude a handful of appropriated funds and include a number of non-appropriated funds. \n\n**Criterion 1: INCLUDE IF the fund collects a state-levied tax.**\n\nThe state collects both state-levied taxes and locally levied taxes (typically local-option sales and utility taxes).  The state collects and returns local taxes to the local governments.  Upon receipt, local tax revenues are deposited into specifically-designated, non-appropriated state trust funds.  In cases where the state is solely acting as a collection agent for a local taxing body, this receiving trust fund, its revenue and distribution (expenditure) is NOT counted in our analytical frame.  If the tax is collected for the state, the fund and its revenue IS counted in our analytical frame. \n\n**Criterion 2:  INCLUDE IF the fund supports a state function.**\n\nNon-appropriated funds may support state functions such as education, social services, transportation, public facilities, regulation, natural resources, and law enforcement.  Generally these are trust funds that hold federal dollars for a specified state project or purpose.  This category of *non-appropriated* funds is essentially the same as a large group of *appropriated* state and federal trust funds.  Because we are counting federal dollars as revenue, it would be inconsistent to count the appropriated funds, but not the non-appropriated funds that do essentially the same thing. \n\n**Criterion 3:  EXCLUDE IF the fund is a holding fund for individuals.**\n\nMany funds are used to hold monies that belong to individuals, not the state.  Most of these funds are non-appropriated, but some are appropriated.  Examples of appropriated funds that we exclude from the frame are child support collection funds or employee pension own-contribution funds.  These funds are holding money that belongs to an individual and will be returned to the person, or used for a payment on behalf of that person, at a later date. \n\n**Criterion 4:  EXCLUDE IF the fund's expenditures or revenues have been counted elsewhere (i.e., avoid double-counting).**\n\nIn some cases, funds receive and disburse money that was already counted as revenues to or expenditures from other funds.  For example, the Commercial Consolidation Fund is a huge fund that distributes state benefit payments to individuals, service providers, and local governments by direct deposit.  Payments into this fund are counted, distributions from this fund are not. \n\n**Criterion 5:  EXCLUDE IF the fund holds designated user fees targeted for a specific purpose that is not a public function (conduit).**\n\nTypically we have excluded non-appropriated funds that hold designated user fees that are directed to a specific purpose that is not a necessary public function.  These funds can be considered a conduit and we did not add these to the frame.  For example, we exclude Fund 0098, which collects fees from harness race entrants at the state fair and then pays them out to race winners.\n\n**Criterion 6:  INCLUDE IF the fund collects a user fee that supports a large, important state function (state function trumps user fee).**\n\nNon-appropriated funds that are supported by user fees AND perform a state function (e.g., transportation) ARE counted in the frame.  The rationale for this is that the state function would have to be performed even if the user fee and the fund structure did not exist.  The biggest example is the Illinois State Toll Highway Revenue Fund, which collects tolls and supports the expansion and maintenance of Illinois toll roads. \n\n**Criterion 7:  EXCLUDE IF unclear information, dead fund, small amounts.** Some funds are defunct, and our historical information on fund descriptions does not include pre-2005 designations. Fund numbers are re-used, making it impossible to determine the original purpose of some older, defunct funds.  These funds generally appear to be very small.  Because we are projecting forward from the most recently completed fiscal year, we assumed that these funds would not be in the frame. \n\n## Gathering and Cleaning Data!\n\nInformation for the Fiscal Futures all funds database comes from detailed information provided by the Illinois Comptroller's office.  Currently the database includes 300,000 individual records for fiscal years 1998 to 2022.\n\n-   Do the FOIA request. In a week or so, they send the expenditure and revenue data as excel files.\n-   Checks whether there are any new agencies, re-used funds etc. Create a list of funds, agencies, fund names, etc. for the new year and compare it to the immediate prior year to identify new funds.\n-   Update the funds_ab_in file which shows the use of funds. Use criteria to determine if the new funds should be in or out of the all-funds frame.\n-   Change the variable names to be consistent with other files such as AGENCYNAME \\--\\> agency_name\n-   Once variable names are shared over all years of data, combine past years with newest year. All revenue files are in a \\`revenue\\` folder that I reference when I set the working directory. When adding new fiscal years, put the the newest year of data for revenue and expenditures in their respective folders.\n\nNormally, when your receive the new fiscal year files from the Comptrollers office, you will need to change the variable names so that they are consistent with past years. This is an example of reading in the new file and changing the variable names. They seem to change almost every year in the file received from the FOIA so if the code breaks here, check to make sure that the columns you are trying to rename exist and are spelled correctly! Once variables are the same, you will want to save the file as a csv file in its Revenue/Expenditure file and bind all past years and the current year together in one dataframe.\n\n```{r}\n#| code-fold: false\n#| eval: false\n\n\n\n#Example code below: Read in excel file and rename columns so that it plays well with the other years' files.\n\nrevenue_fy22 <- read_xlsx(\"Fis_Fut_Rev_2022_Final.xlsx\") %>% \n  rename(fy = 'FY',\n         fund = 'FUND',\n         fund_name = 'FUND NAME',\n         agency = 'AGENCY',\n         agency_name = 'AGENCY NAME',\n         source = 'REVENUE SOURCE',\n         source_name = 'REV SRC NAME',\n         receipts = 'AMOUNT'\n  ) \n\nexp_fy22 <- read_xlsx(\"Fis_Fut_Exp_2022_Final.xlsx\") %>% \n  rename(fy = 'FY',\n         fund = 'FUND',\n         fund_name = 'FUND NAME',\n         agency = 'AGENCY',\n         agency_name = 'AGENCY NAME',\n         appr_org = 'ORGANIZATION',\n         org_name = 'ORGANIZATION NAME',\n         obj_seq_type = 'APPROPRIATION',\n         wh_approp_name = 'APPROPRIATION NAME',\n        # exp_net_xfer = 'NET OF TRANS AMOUNT',\n         expenditure = 'EXPENDED'\n\n  ) \n\n# %>%\n#   # these come from ioc_source file after merging\n#   mutate(data_source = \"exp IOC Aug 2022\",\n#          object = ,\n#          seq = ,\n#          type = ,\n#          fund_cat = FIND_COLUMN, #create fund_cat column\n#          fund_cat_name = FIND_NAME) # create fund_cat_name column\n\n```\n\nThe code chunk below takes the .dta files for all fiscal years before FY 2022 and binds them together. Variable names were manually changed by past researchers so that they were consistent across years.\n\nFor FY 2023 and after, .dta files can be avoided entirely and .csv or excel files will be used. All files before this year had been saved and passed on as .dta files for Stata code before the transition to R in Fall 2022. For years after fy22: add line of code to bind csv files after binding the dta files together. Variable names must identical to merge files together.\n\n```{r create-rev-csv-FY22, include=FALSE, eval=FALSE}\n# years after fy22: add line of code to bind csv files after binding the dta files.\n\nsetwd(\"C:/Users/aleaw/OneDrive/Documents/PhD Fall 2021 - Spring 2022/Merriman RA/Fiscal Futures FY2022/Replication-Files/revenue\")\n\nallrevfiles22 = list.files(path = \"C:/Users/aleaw/OneDrive/Documents/PhD Fall 2021 - Spring 2022/Merriman RA/Fiscal Futures FY2022/Replication-Files/revenue\",  pattern = \".dta\") %>%  lapply(read_dta) %>% bind_rows\n\n#Fy21: 62294 observations, 13 variables\n\n#FY22: 65094 obs, 13 vars\n\nwrite_csv(allrevfiles22, \"allrevfiles22.csv\")\n\nsetwd(\"C:/Users/aleaw/OneDrive/Documents/PhD Fall 2021 - Spring 2022/Merriman RA/Fiscal Futures FY2022/Replication-Files/expenditures\")\n\nallexpfiles22 = list.files(path = \"C:/Users/aleaw/OneDrive/Documents/PhD Fall 2021 - Spring 2022/Merriman RA/Fiscal Futures FY2022/Replication-Files/expenditures\",  pattern = \".dta\") %>%  lapply(read_dta) %>% bind_rows\n\n#fy21 213372 observations, 20 variables\n\n# fy22 225587 obs, 21 vars.\n\nwrite_csv(allexpfiles22, \"allexpfiles22.csv\")\n```\n\nCode below reads in the csv files created in chunks above (allrevfiles.csv and allrexpfiles.csv). These files contain all years of data combined into one file BEFORE any recoding is done. Do not use this file for summing categories because it is just an inbetween step before recoding revenue and expenditure categories.\n\n```{r readCSVs}\n\n# combined in past chunks called create-rev-csv and create-exp-csv\n\nallrevfiles22 <- read_csv(\"allrevfiles22.csv\") #combined but not recoded\n\nallexpfiles22 <- read_csv(\"allexpfiles22.csv\") #combined but not recoded\n```\n\n### Inspecting new FY22 data files\n\nData files for closed years have been obtained from IOC. The numbers of funds, agencies, organizations, and revenue sources below were found by using pivot tables in the codebook files in the FY2022 Box folder. This could also be done using R and grouping new files by fund, agency, source number, source names, etc..\n\nRevenue File:\n\n-   684 Fund Numbers\n-   80 Agencies\n-   1184 Revenue source numbers\n-   1156 revenue source names\n\nExpenditure File:\n\n-   708 Fund Numbers\n-   107 Agencies\n-   98 Organization Numbers\n-   313 Organization names\n\n### Finding new agencies and funds\n\nGeneral steps:\n\n1.  Identify new and reused funds for newest fiscal year.\n2.  Recode funds to take into account different fund numbers/names over the years. See \\[Recoding New and Reused Funds\\] for code chunk that does this.\n3.  Update fund_ab_in_2022.xlsx with any changes from previous fiscal year.\n\n**New Agencies, Funds, and Organizations from Expenditure files:**\n\n-   Using the code below, I found 2 agencies, multiple funds, and a couple organizations that had not been specifically mentioned in the funds_ab_in file - AWM, FY2022.\n\n-   Note: One new org name and org number combo has an expenditure of \\$600 million for pensions payment. Investigate later.\n\n```{r}\nallrevfiles22 <- read_csv(\"allrevfiles22.csv\") #combined but not recoded\n\nallexpfiles22 <- read_csv(\"allexpfiles22.csv\") #combined but not recoded\n\n\n#### From Expenditure Data #####\n\n# agencies referenced in any year before 2020:\n\nagencies_past <- allexpfiles22 %>% \n  filter(fy < 2022) %>% \n  mutate(agency == as.character(agency)) %>% \n  group_by(agency, agency_name) %>% \n  unique() %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %>% \n  drop_na() %>% \n  arrange(agency)\n\n# agencies_past # 146 agencies ever\n\n# agencies in 2022 data:\n\nagencies22 <- allexpfiles22  %>% \n  filter(fy == 2022) %>% \n  mutate(agency == as.character(agency)) %>% \n  group_by(agency, agency_name) %>% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE))\n\n# agencies22 # 107 agencies this year\n\n# 280 and 533 are new agency codes: \n\nanti_join(agencies22, agencies_past, \n          by = c(\"agency\", \"agency_name\")) %>% \n  arrange(agency)\n\nfunds_past <- allexpfiles22  %>% \n  filter(fy < 2022) %>% \n  mutate(fund == as.character(fund)) %>% \n  group_by(fund, fund_name) %>% \n  summarize(count = n(), Expenditure = sum(expenditure, na.rm = TRUE))  %>% \n  drop_na()\n\nfunds22 <- allexpfiles22  %>% \n  filter(fy == 2022) %>% \n  mutate(fund == as.character(fund)) %>% \n  group_by(fund, fund_name) %>%  \n  summarize(count = n(), Expenditure = sum(expenditure, na.rm = TRUE)) %>% \n  unique()\n\n# 15 funds were in FY22 data that were not in past data:\n\nanti_join(funds22, funds_past, by = c(\"fund\", \"fund_name\")) %>% arrange(fund)\n\n# orgs_pastin the past =  916 org groups ever\n\norgs_past <- allexpfiles22  %>% \n  filter(fy < 2022) %>% \n  mutate(appr_org == as.character(appr_org)) %>% \n  group_by(appr_org, org_name) %>% \n  unique() %>% \n  summarize(Expenditure = sum(expenditure, na.rm = TRUE)) %>% drop_na()\n\n# orgs_past # 916 org groups ever\n\norgs22 <- allexpfiles22  %>% \n  filter(fy == 2022) %>% \n  mutate(appr_org = as.character(appr_org)) %>% \n  group_by(appr_org, org_name) %>% \n  summarize(Expenditure = sum(expenditure, na.rm = TRUE))\n\n# orgs22 # 396 org groups this year\n\n# 4 org number and org name combos are new for FY2022:\n\nanti_join(orgs22, orgs_past, by = c(\"appr_org\", \"org_name\")) %>% arrange(appr_org)\n\n```\n\n**New Revenue Funds, Sources, and New Agencies:**\n\n```{r}\n\n#### From Revenue Data ####\n\n# agencies_past # 108 agencies ever\n\nagencies_past <- allrevfiles22  %>% \n  filter(fy < 2022) %>% \n  mutate(agency == as.character(agency)) %>% \n  group_by(agency, agency_name) %>% \n  unique() %>% \n  summarize(Receipts = sum(receipts, na.rm = TRUE)) %>% \n  drop_na()\n\n# agencies22 # 80 agencies this year\n\nagencies22 <- allrevfiles22  %>% \n  filter(fy == 2022) %>% \n  mutate(agency == as.character(agency)) %>% \n  group_by(agency, agency_name) %>% \n  summarize(Receipts = sum(receipts, na.rm = TRUE))\n\n# 0 new agencies in revenue data this year\n\nanti_join(agencies22, agencies_past, by = c(\"agency\", \"agency_name\")) %>% arrange(agency)\n\nfunds_past <- allrevfiles22  %>% \n  filter(fy < 2022) %>% \n  mutate(fund == as.character(fund)) %>% \n  group_by(fund, fund_name) %>% \n  summarize(count = n(), Receipts = sum(receipts, na.rm = TRUE))  %>% \n  drop_na()\n\nfunds22 <- allrevfiles22  %>% \n  filter(fy == 2022) %>% \n  mutate(fund == as.character(fund)) %>% \n  group_by(fund, fund_name) %>%  \n  summarize(count = n(), Receipts = sum(receipts, na.rm = TRUE)) %>% \n  unique() %>% \n  drop_na()\n\n# 19 revenue funds were in FY22 revenue data that were not in past data \n\n# some could be small fund name changes\n\nanti_join(funds22, funds_past, by = c(\"fund\", \"fund_name\")) %>% arrange(fund)\n\nsources_past <- allrevfiles22  %>% \n  filter(fy < 2022) %>% \n  mutate(source == as.character(source)) %>% \n  group_by(source, source_name) %>% \n  summarize(count = n(), Receipts = sum(receipts, na.rm = TRUE))  %>% \n  drop_na()\n\nsources22 <- allrevfiles22  %>% \n  filter(fy == 2022) %>% \n  mutate(source == as.character(source)) %>% \n  group_by(source, source_name) %>%  \n  summarize(count = n(), Receipts = sum(receipts, na.rm = TRUE)) %>% \n  unique()\n\n# 20 revenue sources were in FY22 data that were not in past data \n\n# some could be small source name changes:\n\nanti_join(sources22, sources_past, by = c(\"source\", \"source_name\")) %>% arrange(source)\n\n```\n\nSources 2737 through 2756 were not found in the IOC_source file so I added them to `ioc_source_updated22_AWM.xlsx`. Revenue source types were found manually using the Comptroller's website and searching for each source listed above and identifying its type. Then the ioc_source excel file was updated to include the revenue type (Completed Jan. 20 2023, AFTER the FY22 paper totals were calculated. There were very minor differences in aggregated expenditures and revenues.) `ioc_source_updated22_AWM.xlsx` will become the generic `ioc_source.xlsx` file in the future.\n\n### Recoding New and Reused Funds\n\nNew funds will need to be manually added to the funds_ab_in excel file and determined if they should or should not be included in Fiscal Future calculations.\n\nFor funds that were reused once, a 9 replaces the 0 as the first digit. If reused twice, then the first two values are 10.\n\n-   Ex. 0350 \\--\\> 9350 because its use changed.\n-   Ex. 0367 becomes 10367 because its use has changed twice now. There was fund 0367 originally, then its use changed and it was recoded as 9367, and now it changed again so it is a 10367.\n-   Excel file also has alternative ways to name funds (e.g. 0397-A and 0397-B) and variables for the year that the fund stopped being used. These have not been updated consistently over the years but it is useful information when trying to find any coding mistakes from the past.\n\nNew or reused funds revenue file recoding:\n\n```{r recode-rev-funds}\n#| code-fold: false\n\n# if first character is a 0, replace with a 9 if its purpose has changed\n\nrev_1998_2022 <- allrevfiles22 %>%\n\n      mutate(fund = ifelse(fy < 2002 & fund %in% c(\"0730\", \"0241\", \"0350\", \"0367\", \"0381\", \"0382\", \"0526\", \"0603\", \"0734\", \"0913\", \"0379\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n  \n  mutate(fund = ifelse (fy < 2008 & fund %in% c(\"0027\", \"0033\", \"0037\", \"0058\", \"0062\", \"0066\", \"0075\", \"0083\", \"0116\", \"0119\", \"0120\", \"0122\", \"0148\", \"0149\", \"0157\", \"0158\", \"0166\", \"0194\", \"0201\", \"0209\", \"0211\", \"0217\", \"0223\", \"0231\", \"0234\", \"0253\", \"0320\", \"0503\", \"0505\", \"0512\", \"0516\", \"0531\", \"0532\", \"0533\", \"0547\", \"0563\", \"0579\", \"0591\", \"0606\", \"0616\", \"0624\", \"0659\", \"0662\", \"0665\", \"0676\", \"0710\", \n\n\"0068\", \"0076\", \"0115\", \"0119\", \"0168\", \"0182\", \"0199\", \"0241\", \"0307\", \"0506\", \"0509\", \"0513\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund = ifelse(fy < 2016 & fund %in% c(\"0263\", \"0399\", \"0409\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund =  ifelse(fy < 2017 & fund == \"0364\", str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund =  ifelse(fy < 2018 & fund %in% c(\"0818\", \"0767\", \"0671\", \"0593\", \"0578\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n\n  mutate(fund = ifelse(fy>1999 & fy < 2018 & fund == \"0231\", \"10231\", fund) ) %>%\n  \n\n  mutate(fund = ifelse(fy < 2019 & fund %in% c(\"0161\", \"0489\", \"0500\", \"0612\", \"0893\", \"0766\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund =  ifelse(fy < 2020 & fund %in% c(\"0254\", \"0304\", \"0324\", \"0610\", \"0887\", \"0908\", \"0939\", \"0968\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund =  ifelse(fy < 2021 & fund %in% c(\"0255\", \"0325\", \"0348\", \"0967\", \"0972\"), str_replace(fund, \"0\",\"9\"), fund) ) %>%\n  \n   #2022 changes\n\n  mutate(fund = ifelse(fy < 2022 & fund %in% c(\"0110\",\"0165\",\"0351\", \"0392\", \"0393\", \"0422\", \"0544\", \"0628\", \"0634\",  \"0656\", \"0672\", \"0683\", \"0723\", \"0742\", \"0743\"), str_replace(fund, \"0\",\"9\"), as.character(fund))) %>%  # replaces first 0 it finds with a 9\n\n  mutate(fund = ifelse(fy < 2022 & fund == \"0367\", \"10367\", as.character(fund)) # fund reused for 3rd time\n\n)\n\n\n```\n\nFor 2022, new funds included The Essential Government Services fund, Electric Vehicle Rebate, Budget Stabilization fund, and more. New funds were added to the funds_ab_in.xlsx file and recoded funds were addressed in the code chunks below and updated in the same excel file.\n\nExpenditure recoding:\n\n```{r recode-exp-funds}\n\n\n# if first character is a 0, replace with a 9\n\nexp_1998_2022 <- allexpfiles22 %>%\n\n      mutate(fund = ifelse(fy < 2002 & fund %in% c(\"0730\", \"0241\", \"0350\", \"0367\", \"0381\", \"0382\", \"0526\", \"0603\", \"0734\", \"0913\", \"0379\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund = ifelse(fy < 2008 & fund %in% c(\"0027\", \"0033\", \"0037\", \"0058\", \"0062\", \"0066\", \"0075\", \"0083\", \"0116\", \"0119\", \"0120\", \"0122\", \"0148\", \"0149\", \"0157\", \"0158\", \"0166\", \"0194\", \"0201\", \"0209\", \"0211\", \"0217\", \"0223\", \"0231\", \"0234\", \"0253\", \"0320\", \"0503\", \"0505\", \"0512\", \"0516\", \"0531\", \"0532\", \"0533\", \"0547\", \"0563\", \"0579\", \"0591\", \"0606\", \"0616\", \"0624\", \"0659\", \"0662\", \"0665\", \"0676\", \"0710\", \n\n\"0068\", \"0076\", \"0115\", \"0119\", \"0168\", \"0182\", \"0199\", \"0241\", \"0307\", \"0506\", \"0509\", \"0513\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n  \n  mutate(fund = ifelse(fy < 2016 & fund %in% c(\"0263\", \"0399\", \"0409\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund =  ifelse(fy < 2017 & fund == \"0364\", str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund =  ifelse(fy < 2018 & fund %in% c(\"0818\", \"0767\", \"0671\", \"0593\", \"0578\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund = ifelse(fy>1999 & fy < 2018 & fund == \"0231\", \"10231\", fund) ) %>%\n  \n  mutate(fund = ifelse(fy < 2019 & fund %in% c(\"0161\", \"0489\", \"0500\", \"0612\", \"0893\", \"0766\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund =  ifelse(fy < 2020 & fund %in% c(\"0254\", \"0304\", \"0324\", \"0610\", \"0887\", \"0908\", \"0939\", \"0968\"), str_replace(fund, \"0\",\"9\"), fund)) %>%\n\n  mutate(fund =  ifelse(fy < 2021 & fund %in% c(\"0255\", \"0325\", \"0348\", \"0967\", \"0972\"), str_replace(fund, \"0\",\"9\"), fund))  %>%\n  \n  #2022 changes\n  mutate(fund = ifelse(fy < 2022 & fund %in% c(\"0110\",\"0165\",\"0351\", \"0392\", \"0393\", \"0422\", \"0544\", \"0628\", \"0634\",  \"0656\", \"0672\", \"0683\",\"0723\", \"0742\", \"0743\"), str_replace(fund, \"0\",\"9\"), as.character(fund))) %>%  # replaces first 0 it finds with a 9\n\n  mutate(fund = ifelse(fy < 2022 & fund == \"0367\", \"10367\", as.character(fund)) # fund reused for 3rd time \n\n  )\n```\n\nThe `funds_ab_in.xlsx` file contains all funds that have existed since 1998, if they still exist, indicates if fund numbers have been reused for varying purposes, and is updated yearly with new fund numbers used by the IOC.\n\n```{r create-exp_temp, warning = FALSE, message = FALSE}\n\nfunds_ab_in_2022 = readxl::read_excel(\"C:/Users/aleaw/OneDrive/Documents/PhD Fall 2021 - Spring 2022/Merriman RA/Fiscal Futures FY2022/Replication-Files/funds_ab_in_2022.xlsx\")\n\nexp_temp <- exp_1998_2022 %>% \n  arrange(fund, fy) %>%\n  filter(expenditure != 0) %>%             # keeps everything that is not zero\n# join  funds_ab_in_2021  to exp_temp\n left_join(funds_ab_in_2022, by = \"fund\")  # matches most recent fund number \n\n\n# Agency == 799 for Statutory transfers \n#  Object == 1993 is for Interfund cash transfers  \nexp_temp <- exp_temp %>% \n  mutate(transfer = ifelse(org_name == \"TRANSFERS\", 1, 0),\n         trans_agency = ifelse(org_name == \"TRANSFERS\", str_sub(obj_seq_type,1,3), trans_agency),\n         trans_type = ifelse(org_name == \"TRANSFERS\", str_sub(obj_seq_type,4,9), trans_type)\n\n         )\n\n```\n\n-   the initial combined years of data are saved as dataframes named `exp_1998_2022` and `rev_1998_2022`. These are then saved as exp_temp and rev_temp while recoding variables. This is BEFORE category groups are created and cleaned below. `exp_temp` and `rev_temp` are only temporary files; do not use for aggregating totals yet!\n\n```{r remove-all_obs_df, include=FALSE}\n\n#include = FALSE in the chunk settings run the code but do not include the chunk in the html output\n\n# remove from computer memory to free up space (in case your computer needs it)\n\nrm(allexpfiles22)\n\nrm(allrevfiles22)\n\nrm(exp_fy22)\n\nrm(revenue_fy22)\n```\n\nUpdate Agencies: Some agencies have merged with others or changed names over time.\n\n```{r agencies-exp}\n# recodes old agency numbers to consistent agency number\nexp_temp <- exp_temp %>% \n\n  mutate(agency = case_when(\n\n    (agency==\"438\"| agency==\"475\" |agency == \"505\") ~ \"440\",\n    # financial institution &  professional regulation &\n     # banks and real estate  --> coded as  financial and professional reg\n\n    agency == \"473\" ~ \"588\", # nuclear safety moved into IEMA\n\n    (agency ==\"531\" | agency ==\"577\") ~ \"532\", # coded as EPA\n\n    (agency ==\"556\" | agency == \"538\") ~ \"406\", # coded as agriculture\n\n    agency == \"560\" ~ \"592\", # IL finance authority (fire trucks and agriculture stuff)to state fire marshal\n\n    agency == \"570\" & fund == \"0011\" ~ \"494\",   # city of Chicago road fund to transportation\n    TRUE ~ (as.character(agency)))) \n```\n\nFor aggregating revenue, use the rev_1998_2022 dataframe, join the funds_ab_in_2022 file to it, and then join the ioc_source_type file to the dataset. Remember: You need to update the funds_ab_in and ioc_source_type file every year!\n\n```{r}\n#| code-fold: false\n\n# fund info to revenue for all years\n\nrev_temp <- inner_join(rev_1998_2022, funds_ab_in_2022, by = \"fund\") %>% arrange(source)\n\n# need to update the ioc_source_type file every year! \n\nioc_source_type <- readxl::read_xlsx(\"C:/Users/aleaw/OneDrive/Documents/PhD Fall 2021 - Spring 2022/Merriman RA/Fiscal Futures FY2022/Replication-Files/ioc_source_updated22_AWM.xlsx\")\n\nrev_temp <- left_join(rev_temp, ioc_source_type, by = \"source\")\n# automatically used source, source name does not match for the join to work using source_name\n\n# recodes old agency numbers to consistent agency number\nrev_temp <- rev_temp %>% \n\n  mutate(agency = case_when(\n    (agency==\"438\"| agency==\"475\" |agency == \"505\") ~ \"440\", # financial institution &  professional regulation &\n     # banks and real estate  --> coded as  financial and professional reg\n\n    agency == \"473\" ~ \"588\", # nuclear safety moved into IEMA\n    (agency ==\"531\" | agency ==\"577\") ~ \"532\", # coded as EPA\n    (agency ==\"556\" | agency == \"538\") ~ \"406\", # coded as agriculture\n    agency == \"560\" ~ \"592\", # IL finance authority (fire trucks and agriculture stuff)to state fire marshal\n    agency == \"570\" & fund == \"0011\" ~ \"494\",   # city of Chicago road fund to transportation\n\n    TRUE ~ (as.character(agency))))\n```\n\n```{r eval = FALSE}\n\nwrite_csv(rev_temp, file = \"rev_temp.csv\")\n\nwrite_csv(exp_temp, file = \"exp_temp.csv\")\n```\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"paged","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":false,"code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":true,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.269","editor":"visual","theme":"cosmo"},"extensions":{"book":{"multiFile":true}}}}}