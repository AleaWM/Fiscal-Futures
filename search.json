[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Methodology for the Fiscal Futures Annual Report",
    "section": "",
    "text": "Background Information\nWhile the main purpose of this site is documenting methodology used in the Fiscal Futures Annual Report, it also contains useful information on Illinois budget variables used by the Illinois Office of the Comptroller (IOC) that may be valuable to other researchers. Frequently discussed topics (e.g. Pensions, Debt, Federal Revenue Sources, Medicaid, etc.) each have their own section on this site dedicated to looking at the many relevant variables for that topic, even if the budget variables are not directly included while calculating the Fiscal Gap for the Fiscal Futures Annual Report.\nThis website was originally created by Alea Wilbur-Mujtaba as an internal document for Fiscal Futures researchers to increase reproducibility and update the methodology documentation used for the Fiscal Futures Annual Report. Until August 2022, The FF Annual Report was calculated using Stata code and documentation that had been passed on for years and modified in a piece-meal fashion. AWM translated the Stata files into a very long Rmarkdown file before transitioning to a Github Page with downloadable public data. She also created the method for comparing funds/agencies/revenue sources in current and past fiscal years, identified the important data values and code relevant for various fiscal topics, and coded all files associated with creating this website. The methodology for selecting funds to include in the Fiscal Gap calculation and tracking them over time was created by David Merriman and Richard Dye and updated with the help of many PhD researchers since 2008.\nNote from Alea Wilbur-Mujtaba: This document is a good faith effort to increase reproducibility and transparency for both the Fiscal Futures Annual Report and Illinois budget data as a whole. I recognized that the time and effort spent on identifying variables and graphing fiscal topics could be valuable to other researchers and took the initiative to create this page and repository from the documents I inherited as an IGPA Research Assistant. This endeavor has had a sharp learning curve and I could easily have made mistakes along the way. This is a working document and small edits are made to the site frequently. I intend to document major changes with new repository releases.\nRead the FY23 Fiscal Futures Report here: Finding the Balance: State Fiscal Sustainability and Local Government Challenges\nYou can read the FY22 Fiscal Futures Annual Report here: Recovering from a (COVID) Spending Fever\nTo learn more about the history of the Fiscal Futures Project and read past reports, please visit The Fiscal Futures webpage. The Fiscal Future Project is one of many research projects within the University of Illinois’ Institute of Government and Public Affairs (IGPA).",
    "crumbs": [
      "About",
      "Background Information"
    ]
  },
  {
    "objectID": "index.html#github-data-notes-and-organization",
    "href": "index.html#github-data-notes-and-organization",
    "title": "Methodology for the Fiscal Futures Annual Report",
    "section": "Github Data Notes and Organization",
    "text": "Github Data Notes and Organization\nThe authors and IGPA believe that these novel datasets will be valuable to other researchers interested in Illinois’ finances.\n\nOriginal files as they were received from FOIA requests is in the data/DATA_RAW folder. The version of the files used in the analysis and to create this website are in the data/DATA_DTA folder. The files within these folders are before cleaning or recoding the data. Most of the files for individual years are saved as .dta files due to using Stata before FY21.\nallexp_fy23_recoded.csv and allrev_fy23_recoded are probably the best for any researchers trying to use this data in their own projects.\n\nCleanest version of data before aggregating totals or dropping observations not included in the Fiscal Futures fiscal gap calculation. All years in one file. Funds and agencies should have numbers and consistent labels. Includes the “Group” variable used in the FF Annual Report used for calculating expenditures by function. To do: Add group names to go with group number code. Done after pivoting and merging in normal Fiscal Gap calculation code.\nCreated in February 2023. Still checking accuracy. AWM made this version of the data specifically for other researchers. The normal work flow for the Annual Report involves dropping observations gradually while cleaning and coding the data. Significant changes to the code used for the Annual Report were made to create a new dataset that attempts to keep all Illinois budget observations that have been consistently coded over time with the additional descriptive variables used by Fiscal Futures researchers. Again, I cannot guarantee the accuracy of this file but the original data and code for cleaning the data is available to get you started.\n\n\nexp_temp and rev_temp\n\nUsed in fiscal gap calculation. Data is cleaned and coded up to the point right before aggregating category totals. Drops observations we do not keep in fiscal gap calculation.\n\nA summary file containing aggregated yearly expenditure and revenue values for categories used in the Fiscal Futures model can be found in the summary_file_FY2023.xlsx excel file. This excel file also contains additional tabs for all CAGR values calculated as well as the yearly change between the most recent fiscal year and the previous fiscal year. All tables included in the Annual Report are in the summary file.\nThe Annual Report is part of Fiscal Futures project associated with the University of Illinois System Institute of Government and Policy Affairs (IGPA). Creating the R code, Github folder, and website for methodology was done by Alea Wilbur-Mujtaba. Any errors with code or findings are the fault of the author, not the research institute. Data is originally from annual FOIA requests to the Illinois Office of the Comptroller.",
    "crumbs": [
      "About",
      "Background Information"
    ]
  },
  {
    "objectID": "Everything.html",
    "href": "Everything.html",
    "title": "1  Calculating the Fiscal Gap",
    "section": "",
    "text": "1.1 Modify Expenditure File\nCreate extra variables",
    "crumbs": [
      "About",
      "Reports",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Calculating the Fiscal Gap</span>"
    ]
  },
  {
    "objectID": "Everything.html#modify-expenditure-file",
    "href": "Everything.html#modify-expenditure-file",
    "title": "1  Calculating the Fiscal Gap",
    "section": "",
    "text": "1.1.1 Tax refunds\nCode refunds to match the rev_type codes (02=income taxes, 03 = corporate income taxes, 06=sales tax, 09=motor fuel tax, 24=insurance taxes and fees, 35 = all other tax refunds).\nIdeally the money going in and out of the funds used for refunds would be approximately equal. If equal, would drop from Fiscal Futures analysis so that Revenue reflects the amount of money the state gets to keep (and the local portion that becomes the local govt transfer)\n\n\nCode\n# What we want: To exclude refunds as expenditures from our expenditure totals.\n# Exclude funds that hold refund funds from both revenue and expenditure sides\n# Revenue neutral unless budget tricks are occurring\n# still want to examine refunds over time to compare to past years calculations\n\n# fund 0278 was set to in_ff == 0 so it would have been ignored from the revenue and expenditure side.\n\ntax_refund_long &lt;- exp_temp %&gt;%           \n  # fund != \"0401\" #  Protest Trust Fund\n  filter(fund != \"0401\" &       # don't know why this was included? \n          (object == \"9900\" |\n     object == \"9910\" | object == \"9921\" | object == \"9923\" | object == \"9925\") ) %&gt;%\n  # keeps these objects which represent revenue, insurance, treasurer,and financial and professional reg tax refunds\n  mutate(refund = case_when(\n    object == \"9900\" ~ \"FY23_Rebates\",   # part of COVID Relief\n    fund == \"0278\" & sequence == \"00\" ~ \"02\", # for income tax refund\n    fund == \"0278\" & sequence == \"01\" ~ \"03\", # tax administration and enforcement and tax operations become corporate income tax refund\n    fund == \"0278\" & sequence == \"02\" ~ \"02\",\n    object==\"9921\" ~ \"21\",                # inheritance tax and estate tax refund appropriation\n    object==\"9923\" | fund == \"0012\" ~ \"09\",                # motor fuel tax refunds\n    obj_seq_type == \"99250055\" ~ \"06\",    # sales tax refund, \n    fund==\"0378\" & object==\"9925\" ~ \"24\", # insurance privilege tax refund\n   (fund==\"0001\" & object==\"9925\") | \n     (fund == \"0384\" & object==\"9925\" & fy == 2023) ~ \"35\", # all other taxes\n   # fund==\"0001\" & object==\"9925\" ~ \"35\", # all other taxes\n      T ~ \"CHECK\"))                       # if none of the items above apply to the observations, then code them as CHECK \n\n    \nexp_temp &lt;- left_join(exp_temp, tax_refund_long) %&gt;%\n  mutate(refund = ifelse(is.na(refund),\"not refund\", as.character(refund)))\n\ntax_refund &lt;- tax_refund_long %&gt;% \n  group_by(refund, fy)%&gt;%\n  summarize(refund_amount = sum(expenditure, na.rm = TRUE)/1000000) %&gt;%\n  pivot_wider(names_from = refund, values_from = refund_amount, names_prefix = \"ref_\") %&gt;%\n  mutate_all(~replace_na(.,0)) %&gt;%\n  arrange(fy)\n\ntax_refund %&gt;% \n  pivot_longer(c(ref_02:ref_35, ref_FY23_Rebates), names_to = \"Refund Type\", values_to = \"Amount\") %&gt;%\n  ggplot()+\n  theme_classic()+\n  geom_line(aes(x=fy,y=Amount, group = `Refund Type`, color = `Refund Type`))+\n  labs(title = \"Refund Types\", \n       caption = \"Refunds are excluded from Expenditure totals and instead subtracted from Revenue totals\") + \n  labs(title = \"Tax refunds\", \n       caption = \"Rev_type codes: 02=income taxes, 03=corporate income taxes, 06=sales tax, 09=motor fuel tax, \n       24=insurance taxes and fees, 35 = all other tax refunds.\" )\n\n# remove the items we recoded in tax_refund_long\n# keep only non-refund expenditures with filter()\n# exp_temp &lt;- exp_temp %&gt;% filter(refund == \"not refund\")\n\n\n\n\n\nFigure 1.1: Tax Refunds\n\n\n\n\n\n\n\n\nFor FY23, the one-time abatement, object 9900, is included as an expenditure item within the Department of Revenue.\n\n\nCode\n# manually adds the abatements as expenditure item and keeps on expenditure side.\n# otherwise ignored since it is in fund 0278 and \nexp_temp &lt;- exp_temp %&gt;%\n  mutate(in_ff = if_else(object == 9900, 1, in_ff))\n\n\n\n\n1.1.2 Pension Expenditures\nState pension contributions are largely captured with object=4431. (State payments into pension fund). State payments to the following pension systems:\n\nTeachers Retirement System (TRS)\nNew POB bond in 2019: Accelerated Bond Fund paid benefits in advance as lump sum\nState Employee Retirement System (SERS)\nState University Retirement System (SURS)\nJudges Retirement System (JRS)\nGeneral Assembly Retirement System (GARS)\n\nModify exp_temp and move all state pension contributions to their own group (901). For more information on the variables included or excluded, please see Chapter 7.\n\n\nCode\nexp_temp &lt;-  exp_temp %&gt;% \n  arrange(fund) %&gt;%\n  mutate(pension = case_when( \n    (object==\"4431\") ~ 1, # 4431 = easy to find pension payments INTO fund\n    \n    # (object&gt;\"1159\" & object&lt;\"1166\") & fund != \"0183\" & fund != \"0193\"   ~ 2, \n    # objects 1159 to 1166 are all considered Retirement by Comptroller, \n    # Excluded - employer contributions from agencies/organizations/etc.\n    \n    (object==\"1298\" &  # Purchase of Investments, Normally excluded\n       (fy==2010 | fy==2011) & \n       (fund==\"0477\" | fund==\"0479\" | fund==\"0481\")) ~ 3, #judges retirement OUT of fund\n    # state borrowed money from pension funds to pay for core services during 2010 and 2011. \n    # used to fill budget gap and push problems to the future. \n    \n    fund == \"0319\" ~ 4, # pension stabilization fund\n    TRUE ~ 0) )\n\ntable(exp_temp$pension) \n\n\n\n     0      1      3      4 \n237825    242      6     15 \n\n\nCode\nexp_temp %&gt;% \n  filter(pension != 0) %&gt;%\n  mutate(pension = as.factor(pension))%&gt;%\n  group_by(fy, pension) %&gt;% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %&gt;%\n  ggplot(aes(x=fy, y = expenditure, group=pension)) + \n  theme_classic()+\n  geom_col(aes(fill = pension)) + \n\n  labs (title = \"Pension expenditures\", \n  caption = \"1 = State contributions INTO pension funds. \n  3 = Purchase of Investments anomoly in 2010 and 2011. \n  4 = pension stabilization fund\")+\n    theme(legend.position = \"bottom\")\n\n\n\n\n\nFigure 1.2: Pensions\n\n\n\n\n\n\n\n\n\n\nCode\n# special accounting of pension obligation bond (POB)-funded contributions to JRS, SERS, GARS, TRS \n\nexp_temp &lt;- exp_temp %&gt;% \n  # change object for 2010 and 2011, retirement expenditures were bond proceeds and would have been excluded\n  mutate(object = ifelse((pension &gt; 0 & in_ff == \"0\"), \"4431\", object)) %&gt;% \n  # changes weird teacher & judge retirement system  pensions object to normal pension object 4431\n  mutate(pension =  ifelse(pension &gt; 0 & in_ff == \"0\", 6, pension)) %&gt;% # coded as 6 if it was supposed to be excluded. \n  mutate(in_ff = ifelse(pension &gt; 0, \"1\", in_ff))\n\ntable(exp_temp$pension) \n\n\n\n     0      1      4      6 \n237825    240     15      8 \n\n\nCode\n# all other pensions objects  codes get agency code 901 for State Pension Contributions\nexp_temp &lt;- exp_temp %&gt;% \n  mutate(agency = ifelse(pension&gt;0, \"901\", as.character(agency)),\n         agency_name = ifelse(agency == \"901\", \"State Pension Contributions\", as.character(agency_name)))\n\nexp_temp %&gt;% \n filter(pension &gt; 0) %&gt;%  \n  mutate(pension = as.factor(pension)) %&gt;%\n  group_by(fy, pension) %&gt;% \n  summarize(expenditure = sum(expenditure, na.rm=TRUE)) %&gt;%\n  ggplot(aes(x=fy, y=expenditure, color = pension)) +\n  geom_line() + \n  theme_classic()+\n  labs (title = \"Pension Expenditures\", \n  caption = \"\")\n\nexp_temp %&gt;% \n filter(pension &gt; 0) %&gt;%  \n  group_by(fy) %&gt;% \n  summarize(expenditure = sum(expenditure, na.rm=TRUE)) %&gt;%\n  ggplot(aes(x=fy, y=expenditure)) +\n  geom_line() + \n  theme_classic()+\n  labs (title = \"Pension Expenditures\")\n\n\n\n\n\nFigure 1.3: Pension Expenditures\n\n\n\n\n\n\n\n\n\n\n\nFigure 1.4: Pension Expenditures\n\n\n\n\n\n\n\n\n\n\n1.1.3 Drop Interfund transfers\nDrop all cash transfers between funds, statutory transfers, and purchases of investments from expenditure data.\n\nobject == 1993 is for interfund cash transfers\nagency == 799 is for statutory transfers\nobject == 1298 is for purchase of investments and is not spending EXCEPT for costs in 2010 and 2011 (and were recoded already to object == “4431”). Over 168,000 observations remain.\n\n153,889 observations on 1/23/2022?\n\n\n\n\nCode\ntransfers_drop &lt;- exp_temp %&gt;% filter(\n  agency == \"799\" | # statutory transfers\n           object == \"1993\" |  # interfund cash transfers\n           object == \"1298\",  # purchase of investments\n  ) \ntransfers_drop # items being dropped, \n\n\n\n  \n\n\n\nCode\n# always check to make sure you aren't accidently dropping something of interest.\n\nexp_temp &lt;- anti_join(exp_temp, transfers_drop)\n\n\nrefunds_drop &lt;- exp_temp %&gt;% filter(object %in% c())\nexp_temp &lt;- anti_join(exp_temp, refunds_drop)\n\n\nexp_temp\n\n\n\n  \n\n\n\n\n\n1.1.4 State employee healthcare costs\nCoding healthcare costs was quite difficult. Over the years, State employee healthcare has been within Central Management Bureau of Benefits and Healthcare & Family Services.\nIf observation is a group insurance contribution, then the expenditure amount is set to $0 (essentially dropped from analysis).\nAgency 416 had group insurance contributions for 1998-2005 and 2013-present. Agency 478 had group insurance contributions from 2006-2012.\nFY2021 and FY2022 contributions coded with object = 1900 (lump sum) for some reason??\n\nWhy is\n\n\n\nCode\n#if observation is a group insurance contribution, then the expenditure amount is set to $0 (essentially dropped from analysis)\n\n# pretend eehc is named group_insurance_contribution or something like that\n# eehc coded as zero implies that it is group insurance\n# if eehc=0, then expenditures are coded as zero for group insurance to avoid double counting costs\n\n\nexp_temp &lt;- exp_temp %&gt;% \n  mutate(eehc = ifelse(\n    # group insurance contributions for 1998-2005 and 2013-present\n   fund == \"0001\" & (object == \"1180\" | object ==\"1900\") & agency == \"416\" & appr_org==\"20\", 0, 1) )%&gt;% \n  \n  mutate(eehc = ifelse(\n    # group insurance contributions for 2006-2012\n    fund == \"0001\" & object == \"1180\" & agency == \"478\" \n    & appr_org==\"80\", 0, eehc) )%&gt;%\n    \n   # group insurance contributions from road fund\n  # coded with 1900 for some reason??\n    mutate(eehc = ifelse(\n      fund == \"0011\" & object == \"1900\" & \n        agency == \"416\" & appr_org==\"20\", 0, eehc) ) %&gt;%\n  \n  mutate(expenditure = ifelse(eehc==\"0\", 0, expenditure)) %&gt;%\n  \n  mutate(agency = case_when(   # turns specific items into State Employee Healthcare (agency=904)\n      fund==\"0907\" & (agency==\"416\" & appr_org==\"20\") ~ \"904\",   # central management Bureau of benefits using health insurance reserve \n      fund==\"0907\" & (agency==\"478\" & appr_org==\"80\") ~ \"904\",   # agency = 478: healthcare & family services using health insurance reserve - stopped using this in 2012\n      TRUE ~ as.character(agency))) %&gt;%\n  mutate(agency_name = ifelse(\n    agency == \"904\", \"STATE EMPLOYEE HEALTHCARE\", as.character(agency_name)),\n         in_ff = ifelse( agency == \"904\", 1, in_ff),\n         group = ifelse(agency == \"904\", \"904\", as.character(agency)))  \n# creates group variable\n\n# Default group = agency number\n\nhealthcare_costs &lt;- exp_temp %&gt;% filter(group == \"904\")\n\nhealthcare_costs\n\n\n\n  \n\n\n\nCode\nexp_temp %&gt;% \n  filter(group == \"904\") %&gt;% \n  group_by(fy) %&gt;% \n  summarise(healthcare_cost = sum(expenditure, na.rm = TRUE)) %&gt;% \n  ggplot() +\n  geom_line(aes(x=fy, y=healthcare_cost)) + \n  labs(title=\"State Employee Healthcare Costs - Included in Fiscal Futures Model\", \n       caption = \"Fund 0907 for agencies responsible for health insurance reserve (DHFS & CMS)\")\n\n\n\n\n\n\n\n\n\nCode\n#exp_temp &lt;- anti_join(exp_temp, healthcare_costs) %&gt;% mutate(expenditure = ifelse(object == \"1180\", 0, expenditure))\n\n#healthcare_costs_yearly &lt;- healthcare_costs %&gt;% group_by(fy, group) %&gt;% summarise(healthcare_cost = sum(expenditure, na.rm = TRUE)/1000000) %&gt;% select(-group)\n\n\n\n\n1.1.5 Local Transfers\nSeparate transfers to local from parent agencies that come from DOR(492) or Transportation (494). Treats muni revenue transfers as expenditures, not negative revenue. \nThe share of certain taxes levied state-wide at a common rate and then transferred to local governments. (Purely local-option taxes levied by specific local governments with the state acting as collection agent are NOT included.)\nThe six corresponding revenue items are:\n\nLocal share of Personal Income Tax\n\nIndividual Income Tax Pass-Through New 2021 (source 2582).\n\nLocal share of General Sales Tax\nPersonal Property Replacement Tax on Business Income\nPersonal Property Replacement Tax on Public Utilities\nLocal share of Motor Fuel Tax\nTransportation Renewal Fund 0952\n\nUntil Dec 18. 2022, Local CURE was being aggregated into Revenue totals since the agency was the Department of Revenue. However the $371 million expenditure is for “LOC GOVT ARPA” and the revenue source that is Local CURE is also $371 million. Since it cancels out and is just passed through the state government, I am changing changing the fund_ab_in file so that in_ff=0 for the Local CURE fund. It also inflates the department of revenue expenditures in a misleading way when the expense is actually a transfer to local governments.\n\nDropping Local CURE fund from analysis results in a $371 million decrease in the department of Revenue (where the Local Government ARPA transfer money). The appropriation for it was over $740 million so some will probably be rolled over to FY23 too.\n\nIn the FY21 New and Reused Funds word document, 0325 Local CURE is described as “Created as a federal trust fund. The fund is established to receive transfers from either the disaster response and recovery fund or the state cure fund of federal funds received by the state. These transfers, subject to appropriation, will provide for the administration and payment of grants and expense reimbursements to units of local government. Revenues should be under Federal Other and expenditures under Commerce and Economic Opportunity.” - I propose changing it to exclude for both.\n\n\n\nCode\n# obj_seq_type = 44910008 includes pprt transfers\n \nexp_temp &lt;- exp_temp %&gt;% mutate(\n  agency = case_when(fund==\"0515\" & object==\"4470\" & type==\"08\" ~ \"971\", # income tax to local governments\n                     fund==\"0515\" & object==\"4491\" & type==\"08\" & sequence==\"00\" ~ \"971\", # object is shared revenue payments\n                     fund==\"0802\" & object==\"4491\" ~ \"972\", #pprt transfer\n                     fund==\"0515\" & object==\"4491\" & type==\"08\" & sequence==\"01\" ~ \"976\", #gst to local\n                     fund==\"0627\" & object==\"4472\"~ \"976\" , # public transportation fund but no observations exist\n                     fund==\"0648\" & object==\"4472\" ~ \"976\", # downstate public transportation, but doesn't exist\n                     fund==\"0515\" & object==\"4470\" & type==\"00\" ~ \"976\", # object 4470 is grants to local governments\n                    object==\"4491\" & (fund==\"0188\"|fund==\"0189\") ~ \"976\",\n                     fund==\"0187\" & object==\"4470\" ~ \"976\",\n                     fund==\"0186\" & object==\"4470\" ~ \"976\",\n                    object==\"4491\" & (fund==\"0413\"|fund==\"0414\"|fund==\"0415\")  ~ \"975\", #mft to local\n                  fund == \"0952\"~ \"975\", # Added Sept 29 2022 AWM. Transportation Renewal MFT\n                    TRUE ~ as.character(agency)),\n  \n  agency_name = case_when(agency == \"971\"~ \"INCOME TAX 1/10 TO LOCAL\",\n                          agency == \"972\" ~ \"PPRT TRANSFER TO LOCAL\",\n                          agency == \"975\" ~ \"MFT TO LOCAL\",\n                          agency == \"976\" ~ \"GST TO LOCAL\",\n                          TRUE~as.character(agency_name)),\n  group = ifelse(agency&gt;\"970\" & agency &lt; \"977\", as.character(agency), as.character(group)))\n\n\n\n\nCode\ntransfers_long &lt;- exp_temp %&gt;% \n  filter(group == \"971\" |group == \"972\" | group == \"975\" | group == \"976\")\n\ntransfers_long %&gt;% \n  group_by(agency_name, group, fy) %&gt;% \n  summarize(expenditure = sum(expenditure, na.rm=TRUE) )%&gt;% \n  ggplot() + \n  geom_line(aes(x=fy, y = expenditure, color=agency_name)) + \n  theme_classic()+\n  theme(legend.position = \"bottom\", legend.title=element_blank())+\n  labs(title = \"Transfers to Local Governments\", \n       caption = \"Data Source: Illinois Office of the Comptroller\")\n\ntransfers &lt;- transfers_long %&gt;%\n  group_by(fy, group ) %&gt;%\n  summarize(sum_expenditure = sum(expenditure)/1000000) %&gt;%\n  pivot_wider(names_from = \"group\", values_from = \"sum_expenditure\", names_prefix = \"exp_\" )\n\nexp_temp &lt;- anti_join(exp_temp, transfers_long)\n\n\ndropped_inff_0 &lt;- exp_temp %&gt;% filter(in_ff == 0)\n\nexp_temp &lt;- exp_temp %&gt;% filter(in_ff == 1) # drops in_ff = 0 funds AFTER dealing with net-revenue above\n\n\n\n\n\nFigure 1.5: Drop Transfers from State to Local Governments\n\n\n\n\n\n\n\n\nThe Local Transfers from the Personal Property Replacement Tax (fund 802) increased over $2 billion from corporate income taxes alone. Personal property replacement taxes (PPRT) are revenues collected by the state of Illinois and paid to local governments to replace money that was lost by local governments when their powers to impose personal property taxes on corporations, partnerships, and other business entities were taken away.\n\n\n1.1.6 Debt Service\nDebt Service expenditures include interest payment on both short-term and long-term debt. We do not include escrow or principal payments.\nDecision from Sept 30 2022: We are no longer including short term principal payments as a cost; only interest on borrowing is a cost. Pre FY22 and the FY21 correction, we did include an escrow payment and principle payments as costs but not bond proceeds as revenues. This caused expenditures to be inflated because we were essentially counting debt twice - the principle payment and whatever the money was spent on in other expenditure categories, which was incorrect.\n\n\nCode\ndebt_drop &lt;- exp_temp %&gt;% \n  filter(object == \"8841\" |  object == \"8811\")  \n# escrow  OR  principle\n\n#debt_drop %&gt;% group_by(fy) %&gt;% summarize(sum = sum(expenditure)) %&gt;% arrange(-fy)\n\n\ndebt_keep &lt;- exp_temp %&gt;% \n \n  filter(fund != \"0455\" &      # ignore IL Tollway Highway Revenue Fund\n           (object == \"8813\" | object == \"8800\" )) \n# examine the debt costs we want to include\n\n#debt_keep %&gt;% group_by(fy) %&gt;% summarize(sum = sum(expenditure)) %&gt;% arrange(-fy) \n\n\nexp_temp &lt;- anti_join(exp_temp, debt_drop) \nexp_temp &lt;- anti_join(exp_temp, debt_keep)\n\ndebt_keep &lt;- debt_keep %&gt;%\n  mutate(\n    agency = ifelse(fund != \"0455\" & (object == \"8813\" | object == \"8800\"), \"903\", as.character(agency)),\n    group = ifelse(fund != \"0455\" & (object == \"8813\" | object == \"8800\"), \"903\", as.character(group)),\n    in_ff = ifelse(group == \"903\", 1, as.character(in_ff)))\n\ndebt_keep_yearly &lt;- debt_keep %&gt;% group_by(fy, group) %&gt;% summarize(debt_cost = sum(expenditure,na.rm=TRUE)/1000000) %&gt;% select(-group)\n\n\n\n\n1.1.7 Medicaid\nMedicaid. That portion of the Healthcare and Family Services (or Public Aid in earlier years, agency code 478) budget for Medical (appr_organization code 65) for awards and grants (object codes 4400 and 4900).\n\nState CURE will remain in the Medicaid expenditure category due to the nature of it being federal funds providing public health services and funding to locations that provide public services.\n\n\nUses same appropriation name of “HEALTHCARE PROVIDER RELIEF” and fund == 0793 and obj_seq_type == 49000000. So can defend the “mistake” of including healthcare provider relief as Medicaid expenditure.\n\n\n\n1.1.8 Add Other Fiscal Future group codes\n\n\nCode\nexp_temp &lt;- exp_temp %&gt;%\n  filter(in_ff == 1) %&gt;%\n  #mutate(agency = as.numeric(agency) ) %&gt;%\n  # arrange(agency)%&gt;%\n  mutate(\n    group = case_when(\n      agency&gt;\"100\"& agency&lt;\"200\" ~ \"910\", # legislative\n      \n      agency == \"528\"  | (agency&gt;\"200\" & agency&lt;\"300\") ~ \"920\", # judicial\n      pension&gt;0  ~ \"901\", # pensions\n      (agency&gt;\"309\" & agency&lt;\"400\") ~ \"930\",    # elected officers\n      \n      agency == \"586\" ~ \"959\", # create new K-12 group\n\n      agency==\"402\" | agency==\"418\" | agency==\"478\" | agency==\"444\" | agency==\"482\" ~ as.character(agency), # aging, CFS, HFS, human services, public health\n      T ~ as.character(group))\n    ) %&gt;%      \n\n  \n  mutate(group = case_when(\n    agency==\"478\" & (appr_org==\"01\" | appr_org == \"65\" | appr_org==\"88\") & (object==\"4900\" | object==\"4400\") ~ \"945\", # separates CHIP from health and human services and saves it as Medicaid\n    \n    agency == \"586\" & fund == \"0355\" ~ \"945\",  # 586 (Board of Edu) has special education which is part of medicaid\n    \n    # OLD CODE: agency == \"586\" & appr_org == \"18\" ~ \"945\", # Spec. Edu Medicaid Matching\n    \n    agency==\"425\" | agency==\"466\" | agency==\"546\" | agency==\"569\" | agency==\"578\" | agency==\"583\" | agency==\"591\" | agency==\"592\" | agency==\"493\" | agency==\"588\" ~ \"941\", # public safety & Corrections\n    \n    agency==\"420\" | agency==\"494\" |  agency==\"406\" | agency==\"557\" ~ as.character(agency), # econ devt & infra, tollway\n    \n    agency==\"511\" | agency==\"554\" | agency==\"574\" | agency==\"598\" ~ \"946\",  # Capital improvement\n    \n    agency==\"422\" | agency==\"532\" ~ as.character(agency), # environment & nat. resources\n    \n    agency==\"440\" | agency==\"446\" | agency==\"524\" | agency==\"563\"  ~ \"944\", # business regulation\n    \n    agency==\"492\" ~ \"492\", # revenue\n    \n    agency == \"416\" ~ \"416\", # central management services\n    agency==\"448\" & fy &gt; 2016 ~ \"416\", #add DoIT to central management \n    \n    T ~ as.character(group))) %&gt;%\n  \n  \n  mutate(group = case_when(\n    # agency==\"684\" | agency==\"691\"  ~ as.character(agency), # moved under higher education in next line. 11/28/2022 AWM\n    \n    agency==\"692\" | agency==\"695\" | agency == \"684\" |agency == \"691\" | (agency&gt;\"599\" & agency&lt;\"677\") ~ \"960\", # higher education\n    \n    agency==\"427\"  ~ as.character(agency), # employment security\n    \n    agency==\"507\"|  agency==\"442\" | agency==\"445\" | agency==\"452\" |agency==\"458\" | agency==\"497\" ~ \"948\", # other departments\n    \n    # other boards & Commissions\n    agency==\"503\" | agency==\"509\" | agency==\"510\" | agency==\"565\" |agency==\"517\" | agency==\"525\" | agency==\"526\" | agency==\"529\" | agency==\"537\" | agency==\"541\" | agency==\"542\" | agency==\"548\" |  agency==\"555\" | agency==\"558\" | agency==\"559\" | agency==\"562\" | agency==\"564\" | agency==\"568\" | agency==\"579\" | agency==\"580\" | agency==\"587\" | agency==\"590\" | agency==\"527\" | agency==\"585\" | agency==\"567\" | agency==\"571\" | agency==\"575\" | agency==\"540\" | agency==\"576\" | agency==\"564\" | agency==\"534\" | agency==\"520\" | agency==\"506\" | agency == \"533\" ~ \"949\", \n    \n    # non-pension expenditures of retirement funds moved to \"Other Departments\"\n    # should have removed pension expenditures already from exp_temp in Pensions step above\n    agency==\"131\" | agency==\"275\" | agency==\"589\" |agency==\"593\"|agency==\"594\"|agency==\"693\" ~ \"948\",\n    \n    T ~ as.character(group))) %&gt;%\n\n  mutate(group_name = \n           case_when(\n             group == \"416\" ~ \"Central Management\",\n             group == \"478\" ~ \"Healthcare and Family Services\",\n             group == \"482\" ~ \"Public Health\",\n             group == \"900\" ~ \"NOT IN FRAME\",\n             group == \"901\" ~ \"STATE PENSION CONTRIBUTION\",\n             group == \"903\" ~ \"DEBT SERVICE\",\n             group == \"910\" ~ \"LEGISLATIVE\"  ,\n             group == \"920\" ~ \"JUDICIAL\" ,\n             group == \"930\" ~ \"ELECTED OFFICERS\" , \n             group == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             group == \"941\" ~ \"PUBLIC SAFETY\" ,\n             group == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n             group == \"943\" ~ \"CENTRAL SERVICES\",\n             group == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             group == \"945\" ~ \"MEDICAID\" ,\n             group == \"946\" ~ \"CAPITAL IMPROVEMENT\" , \n             group == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n             group == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             group == \"959\" ~ \"K-12 EDUCATION\" ,\n             group == \"960\" ~ \"UNIVERSITY EDUCATION\" ,\n             group == agency ~ as.character(group),\n             TRUE ~ \"Check name\"),\n         year = fy)\n\nexp_temp %&gt;% filter(group_name == \"Check name\")\n\n\n\n  \n\n\n\nCode\n#write_csv(exp_temp, \"all_expenditures_recoded.csv\")\n\n\n\n\n\n\n\n\nImportant\n\n\n\nAll expenditures recoded but not aggregated: Allows for inspection of individual expenditures within larger categories. This stage of the data is extremely useful for investigating how individual items have been coded before they are aggregated into larger categories.",
    "crumbs": [
      "About",
      "Reports",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Calculating the Fiscal Gap</span>"
    ]
  },
  {
    "objectID": "Everything.html#modify-revenue-data",
    "href": "Everything.html#modify-revenue-data",
    "title": "1  Calculating the Fiscal Gap",
    "section": "1.2 Modify Revenue data",
    "text": "1.2 Modify Revenue data\nRevenue Categories NOT included in Fiscal Futures:\n- 32. Garnishment-Levies. (State is fiduciary, not beneficiary.)\n- 45. Student Fees-Universities. (Excluded from state-level budget.)\n- 51. Retirement Contributions (of individuals and non-state entities).\n- 66. Proceeds, Investment Maturities. (Not sustainable flow.)\n- 72. Bond Issue Proceeds. (Not sustainable flow.)\n- 75. Inter-Agency Receipts.\n- 79. Cook County Intergovernmental Transfers. (State is not beneficiary.)\n- 98. Prior Year Refunds.\n- 99. Statutory Transfers.\nAll Other Sources\nExpanded to include the following smaller sources:\n- 30. Horse Racing Taxes & Fees.\n- 60. Other Grants and Contracts.\n- 63. Investment Income.\nFor aggregating revenue, use the rev_1998_2022 dataframe, join the funds_ab_in_2022 file to it, and then join the ioc_source_type file to the dataset. Remember: You need to update the funds_ab_in and ioc_source_type file every year!\n\n\nCode\n# recodes old agency numbers to consistent agency number\nrev_temp &lt;- rev_temp %&gt;% \n  mutate(agency = case_when(\n    (agency==\"438\"| agency==\"475\" |agency == \"505\") ~ \"440\",\n    # financial institution &  professional regulation &\n     # banks and real estate  --&gt; coded as  financial and professional reg\n    agency == \"473\" ~ \"588\", # nuclear safety moved into IEMA\n    (agency ==\"531\" | agency ==\"577\") ~ \"532\", # coded as EPA\n    (agency ==\"556\" | agency == \"538\") ~ \"406\", # coded as agriculture\n    agency == \"560\" ~ \"592\", # IL finance authority (fire trucks and agriculture stuff)to state fire marshal\n    agency == \"570\" & fund == \"0011\" ~ \"494\",   # city of Chicago road fund to transportation\n    TRUE ~ (as.character(agency)))) \n\n\n\n1.2.1 Federal to State Transfers\nFor an deeper look at federal revenue to Illinois, Chapter 11.\n\n\nCode\n#rev_temp &lt;- rev_temp %&gt;% filter(in_ff==1)\n\n#update_recessions(url = NULL, quietly = FALSE)\n#update_recessions()\n\n\nrev_temp &lt;- rev_temp %&gt;% \n  mutate(\n    rev_type = ifelse(rev_type==\"57\" & agency==\"478\" & (source==\"0618\"|source==\"2364\"|source==\"0660\"|source==\"1552\"| source==\"2306\"| source==\"2076\"|source==\"0676\"|source==\"0692\"), \"58\", rev_type),\n    rev_type_name = ifelse(rev_type==\"58\", \"Federal Medicaid Reimbursements\", rev_type_name),\n    rev_type = ifelse(rev_type==\"57\" & agency==\"494\", \"59\", rev_type),\n    rev_type_name = ifelse(rev_type==\"59\", \"Federal Transportation\", rev_type_name),\n    rev_type_name = ifelse(rev_type==\"57\", \"Federal - Other\", rev_type_name),\n    rev_type = ifelse(rev_type==\"6\", \"06\", rev_type),\n    rev_type = ifelse(rev_type==\"9\", \"09\", rev_type)) \n\nrev_temp %&gt;% \n  filter(rev_type == \"58\" | rev_type == \"59\" | rev_type == \"57\") %&gt;% \n  group_by(fy, rev_type, rev_type_name) %&gt;% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000) %&gt;% \n  ggplot() +\n      geom_recessions(xformay = \"numeric\",text = FALSE,update = recessions\n                      )+\n  geom_line(aes(x=fy, y=receipts,color=rev_type_name)) +\n      theme_classic() +\n  scale_y_continuous(labels = comma)+\n  labs(title = \"Federal to State Transfers\", \n       y = \"Millions of Dollars\", x = \"\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  )\n\n\n\n\n\nFigure 1.6\n\n\n\n\n\n\n\n\nDropping State CURE Revenue\nThe Fiscal Futures model focuses on sustainable revenue sources. To understand our fiscal gap and outlook, we need to exclude these one time revenues. GOMB has emphasized that they have allocated COVID dollars to one time expenditures (unemployment trust fund, budget stabilization fund, etc.). The fiscal gap, graphs,and CAGRs have been recalculated in the [Drop COVID Dollars] section below.\n\nNOTE: The code chunk below only drops revenue sources with the source name of “Federal Stimulus Package” (which is the State and Local CURE revenue). Additional federal money went into other funds during the beginning of pandemic. Many departments saw increased grants and received other funds (e.g. funds)\n\n\n\nCode\nrev_temp &lt;- rev_temp %&gt;% mutate(covid_dollars = ifelse(source_name_AWM == \"FEDERAL STIMULUS PACKAGE\",1,0))\n\nrev_temp %&gt;% filter(source_name_AWM == \"FEDERAL STIMULUS PACKAGE\") %&gt;%\n  group_by(fy) %&gt;% summarize(Received = sum(receipts))\n\n\n\n  \n\n\n\n\n\n1.2.2 Health Insurance Premiums from Employees\nInsurance premiums for employees is coded below but it is NOT used in the fiscal futures model. Employee and employer premiums are considered rev_51 and dropped from analysis in later step.\n\n0120 = ins prem-option life\n0120 = ins prem-optional life/univ\n0347 = optional health - HMO\n0348 = optional health - dental\n0349 = optional health - univ/local SI\n0350 = optional health - univ/local\n0351 = optional health - retirement\n0352 = optional health - retirement SI\n0353 = optional health - retire/dental\n0354 = optional health - retirement hmo\n2199-2209 = various HMOs, dental, health plans from Health Insurance Reserve (fund)\n\n\n\nCode\n#collect optional insurance premiums to fund 0907 for use in eehc expenditure  \nrev_temp &lt;- rev_temp %&gt;% \n  mutate(\n    #variable not used in aggregates, but could be interesting for other purposes\n    employee_premiums = ifelse(fund==\"0907\" & (source==\"0120\"| source==\"0121\"| (source&gt;\"0345\" & source&lt;\"0357\")|(source&gt;\"2199\" & source&lt;\"2209\")), 1, 0),\n    \n    # adds more rev_type codes\n    rev_type = case_when(\n      fund ==\"0427\" ~ \"12\", # pub utility tax\n      fund == \"0742\" | fund == \"0473\" ~ \"24\", # insurance and fees\n      fund == \"0976\" ~ \"36\",# receipts from rev producing\n      fund == \"0392\" |fund == \"0723\" ~ \"39\", # licenses and fees\n      fund == \"0656\" ~ \"78\", #all other rev sources\n      TRUE ~ as.character(rev_type)))\n# if not mentioned, then rev_type as it was\n\n\n\n# # optional insurance premiums = employee insurance premiums\n\n# emp_premium &lt;- rev_temp %&gt;%\n#   group_by(fy, employee_premiums) %&gt;%\n#   summarize(employee_premiums_sum = sum(receipts)/1000000) %&gt;%\n#   filter(employee_premiums == 1) %&gt;%\n#   rename(year = fy) %&gt;% \n#   select(-employee_premiums)\n\nemp_premium_long &lt;- rev_temp %&gt;%  filter(employee_premiums == 1)\n# 381 observations have employee premiums == 1\n\n\n# drops employee premiums from revenue\n# rev_temp &lt;- rev_temp %&gt;% filter(employee_premiums != 1)\n# should be dropped in next step since rev_type = 51\n\n\nNote: In FY21, employee premiums were subtracted from state healthcare costs on the expenditure side to calculate a “Net Healthcare Cost” but that methodology has been discontinued. Totals were practically unchanged: revenue from employee premiums is also very small.\n\n\n1.2.3 Transfers in and Out:\nThen other excluded revenue types are also dropped.\nDrops Blank, Student Fees, Retirement contributions, proceeds/investments, bond issue proceeds, interagency receipts, cook IGT, Prior year refunds:\n\n\nCode\nrev_temp &lt;- rev_temp %&gt;% \n  filter(in_ff == 1) %&gt;% \n  mutate(local = ifelse(is.na(local), 0, local)) %&gt;% # drops all revenue observations that were coded as \"local == 1\"\n  filter(local != 1)\n\n# 1175 doesnt exist?\nin_from_out &lt;- c(\"0847\", \"0867\", \"1175\", \"1176\", \"1177\", \"1178\", \"1181\", \"1182\", \"1582\", \"1592\", \"1745\", \"1982\", \"2174\", \"2264\")\n\n# what does this actually include:\n# all are items with rev_type = 75 originally. \nin_out_df &lt;- rev_temp %&gt;%\n  mutate(infromout = ifelse(source %in% in_from_out, 1, 0)) %&gt;%\n  filter(infromout == 1)\n\nrev_temp &lt;- rev_temp %&gt;% \n  mutate(rev_type_new = ifelse(source %in% in_from_out, \"76\", rev_type))\n# if source contains any of the codes in in_from_out, code them as 76 (all other rev).\n# I end up excluding rev_76 in later steps\n\n\n\n\nCode\n# revenue types to drop\ndrop_type &lt;- c(\"32\", \"45\", \"51\", \n               \"66\", \"72\", \"75\", \"76\", \"79\", \"98\", \"99\")\n\n# drops Blank, Student Fees, Retirement contributions, proceeds/investments,\n# bond issue proceeds, interagency receipts, cook IGT, Prior year refunds.\n\n\nrev_temp &lt;- rev_temp %&gt;% filter(!rev_type_new %in% drop_type)\n# keep observations that do not have a revenue type mentioned in drop_type\n\ntable(rev_temp$rev_type_new)\n\n\n\n   02    03    06    09    12    15    18    21    24    27    30    31    33 \n  177   132   852   134   590   269    47  1421   473    79   665   130   141 \n   35    36    39    42    48    54    57    58    59    60    63    78 \n  691  5328  9487  2939    32  1283  6679   646   233   105  5321 11712 \n\n\nCode\nrev_temp %&gt;% \n  group_by(fy, rev_type_new) %&gt;% \n  summarize(total_reciepts = sum(receipts)/1000000) %&gt;%\n  pivot_wider(names_from = rev_type_new, values_from = total_reciepts, names_prefix = \"rev_\") \n\n\n\n  \n\n\n\nCode\n# combines smallest 4  categories to to \"Other\"\n# they were the 4 smallest in past years, are they still the 4 smallest? \n\nrev_temp &lt;- rev_temp %&gt;%  \n mutate(rev_type_new = ifelse(rev_type==\"30\" | rev_type==\"60\" | rev_type==\"63\" | rev_type_new ==\"76\", \"78\", rev_type_new))\n\n\n#table(rev_temp$rev_type_new)  # check work\n\nexp_temp &lt;- exp_temp %&gt;% filter(in_ff == 1)\n\nrm(rev_1998_2022)\nrm(exp_1998_2022)\n\n\nwrite.csv(exp_temp, \"exp_fy23_recoded_22March2024.csv\")\nwrite.csv(rev_temp, \"rev_fy23_recoded_22March2024.csv\")",
    "crumbs": [
      "About",
      "Reports",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Calculating the Fiscal Gap</span>"
    ]
  },
  {
    "objectID": "Everything.html#pivoting-and-merging",
    "href": "Everything.html#pivoting-and-merging",
    "title": "1  Calculating the Fiscal Gap",
    "section": "1.3 Pivoting and Merging",
    "text": "1.3 Pivoting and Merging\n\n1.3.1 Revenues\n\n\n\nCode\nff_rev &lt;- rev_temp %&gt;% \n  group_by(rev_type_new, fy) %&gt;% \n  summarize(sum_receipts = sum(receipts, na.rm=TRUE)/1000000 ) %&gt;%\n  pivot_wider(names_from = \"rev_type_new\", values_from = \"sum_receipts\", names_prefix = \"rev_\")\n\n# ff_rev&lt;- left_join(ff_rev, tax_refund)\n\n#ff_rev &lt;- left_join(ff_rev, pension2_fy22, by=c(\"fy\" = \"year\"))\n\n#ff_rev &lt;- left_join(ff_rev, eehc2_amt) \nff_rev &lt;- mutate_all(ff_rev, ~replace_na(.,0))\n\n# \n# ff_rev &lt;- ff_rev %&gt;%\n#   mutate(rev_02 = rev_02 - ref_02,\n#          rev_03 = rev_03 - ref_03,\n#          rev_06 = rev_06 - ref_06,\n#          rev_09 = rev_09 - ref_09,\n#          rev_21 = rev_21 - ref_21,\n#          rev_24 = rev_24 - ref_24,\n#          rev_35 = rev_35 - ref_35\n# \n#       #   rev_78new = rev_78 #+ pension_amt #+ eehc\n#          ) %&gt;% \n#   select(-c(ref_02:ref_35, rev_99, rev_NA, rev_76\n#             #, ref_CHECK#, pension_amt , rev_76,\n#           #  , eehc\n#             ))\n# \n# ff_rev\n\n\n\n#noproblem &lt;- c(0)  # if ref_CHECK = $0, then there is no problem. :) \n\n# if((sum(ff_rev$ref_CHECK) == 0 )){\n# \n# ff_rev &lt;- ff_rev %&gt;%\n#   # \n#   # mutate(rev_02 = rev_02 - ref_02,\n#   #        rev_03 = rev_03 - ref_03,\n#   #        rev_06 = rev_06 - ref_06,\n#   #        rev_09 = rev_09 - ref_09,\n#   #        rev_21 = rev_21 - ref_21,\n#   #        rev_24 = rev_24 - ref_24,\n#   #        rev_35 = rev_35 - ref_35\n#   #        ) %&gt;% \n#   select(-c(ref_02:ref_35, \n#             rev_99, \n#             rev_76, \n#             ref_CHECK \n#             )) \n# }else{\"You have a problem! Check what revenue items did not have rev codes (causing it to be coded as rev_NA) or the check if there were refunds that were not assigned revenue codes (tax_refunds_long objects)\"}\n\nff_rev %&gt;%  mutate_all(., ~round(.,digits=0))\n\n\n\n\nTable 1.1: Pivoted Revenue Table ($ Millions) - Intermediate Step\n\n\n\n\n  \n\n\n\n\n\n\nSince I already pivot_wider()ed the table in the previous code chunk, I now change each column’s name by using rename() to set new variable names. Ideally the final dataframe would have both the variable name and the variable label but I have not done that yet.\n\n\n1.3.2 Expenditures\nCreate exp_970 for all local government transfers (exp_971 + exp_972 + exp_975 + exp_976).\n\n\nCode\nff_exp &lt;- exp_temp %&gt;% \n  filter(in_ff == 1) %&gt;% \n  group_by(fy, group) %&gt;% \n  summarize(sum_expenditures = sum(expenditure, na.rm=TRUE)/1000000 ) %&gt;%\n  pivot_wider(names_from = \"group\", values_from = \"sum_expenditures\", names_prefix = \"exp_\")%&gt;%\n  \n    left_join(debt_keep_yearly) %&gt;%\n  mutate(exp_903 = debt_cost) %&gt;%\n\n  #  left_join(healthcare_costs_yearly) %&gt;%\n\n  # join state employee healthcare and subtract employee premiums\n  # left_join(emp_premium, by = c(\"fy\" = \"year\")) %&gt;%\n#  mutate(exp_904_new = (`healthcare_cost` - `employee_premiums_sum`)) %&gt;% # state employee healthcare premiums\n  \n # left_join(retirement_contributions) %&gt;%\n  #    mutate(exp_901_new = exp_901 - contributions/1000000) %&gt;% #employee pension contributions\n\n\n  # join local transfers and create exp_970\n  left_join(transfers) %&gt;%\n  mutate(exp_970 = exp_971 + exp_972  + exp_975 + exp_976)\n\nff_exp&lt;- ff_exp %&gt;% \n  select(-c(debt_cost, exp_971:exp_976)) # drop unwanted columns\n\nff_exp # not labeled\n\n\n\n\nTable 1.2: Pivoted Expenditure Categories ($ Millions)\n\n\n\n\n  \n\n\n\n\n\n\n\n\nCode\n# exp_temp %&gt;%\n#   group_by(year, group) %&gt;%\n#   summarize(sum_expenditure = round(sum(expenditure)/1000000)) %&gt;%\n#   arrange(year) %&gt;%\n#   pivot_wider(names_from = \"group\", values_from = \"sum_expenditure\")\n# \n\naggregate_exp_labeled &lt;- exp_temp %&gt;%\n  group_by(year, group_name) %&gt;%\n  summarize(sum_expenditure = sum(expenditure)/1000000) %&gt;%\n  arrange(year) %&gt;%\n  pivot_wider(names_from = \"group_name\", values_from = \"sum_expenditure\")\n\naggregate_exp_labeled %&gt;% mutate_all(., ~round(., digits = 0))\n\n\n\n\nTable 1.3: Final Expenditure Categories, with Fiscal Futures Grouped Expenditure Categories",
    "crumbs": [
      "About",
      "Reports",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Calculating the Fiscal Gap</span>"
    ]
  },
  {
    "objectID": "Everything.html#summary-tables---largest-categories",
    "href": "Everything.html#summary-tables---largest-categories",
    "title": "1  Calculating the Fiscal Gap",
    "section": "3.1 Summary Tables - Largest Categories",
    "text": "3.1 Summary Tables - Largest Categories\nThe 10 largest revenue sources and 15 largest expenditure sources remain separate categories and all other smaller sources/expenditures are combined into “All Other Revenues (Expenditures)”. These condensed tables are typically used in the Fiscal Futures articles. They were manually created in past years but this hopefully automates the process a bit until final formatting stages.\n\ntake ff_rev and ff_exp data frames, which were in wide format, pivot them longer and mutate the Category_name variable to nicer labels. Keep largest categories separate and aggregate the rest.\nYou need to manually comment out the categories that are not the largest each year. Check and compare to the previous years largest categories!\n\n\n\nCode\nexp_totals &lt;- ff_exp %&gt;% rowwise() %&gt;% mutate(exp_TOTALS = sum(across(exp_402:exp_970))) # creates total column too\n\nrev_totals &lt;- ff_rev %&gt;% rowwise() %&gt;%  mutate(rev_TOTALS = sum(across(rev_02:rev_78)))\n\nrev_long_majorcats &lt;- pivot_longer(rev_totals, rev_02:rev_TOTALS, names_to = c(\"type\",\"Category\"), values_to = \"Dollars\", names_sep = \"_\") %&gt;% \n  rename(Year = fy) %&gt;%\n  mutate(Category_name = case_when(\n    Category == \"02\" ~ \"Income Tax\" ,\n    Category == \"03\" ~ \"Corporate Income Tax\" ,\n    Category == \"06\" ~ \"Sales Tax\" ,\n    Category == \"09\" ~ \"Motor Fuel Taxes\" ,\n    #   Category == \"12\" ~ \"PUBLIC UTILITY TAXES, gross of PPRT\" ,\n    #  Category == \"15\" ~ \"CIGARETTE TAXES\" ,\n    #   Category == \"18\" ~ \"LIQUOR GALLONAGE TAXES\" ,\n    #  Category == \"21\" ~ \"INHERITANCE TAX\" ,\n    #  Category == \"24\" ~ \"INSURANCE TAXES&FEES&LICENSES, net of refunds \" ,\n    # Category == \"27\" ~ \"CORP FRANCHISE TAXES & FEES\" ,\n    #   Category == \"30\" ~ \"HORSE RACING TAXES & FEES\",  # in Other\n    Category == \"31\" ~ \"Medical Provider Assessments\" ,\n    #  Category == \"32\" ~ \"GARNISHMENT-LEVIES\" , # dropped\n    #  Category == \"33\" ~  \"LOTTERY RECEIPTS\" ,\n    # Category == \"35\" ~  \"OTHER TAXES\" ,\n    Category == \"36\" ~  \"Receipts from Revenue Producing\", \n    Category == \"39\" ~  \"Licenses, Fees, Registration\" ,\n    # Category == \"42\" ~  \"MOTOR VEHICLE AND OPERATORS\" ,\n    #    Category == \"45\" ~  \"STUDENT FEES-UNIVERSITIES\",   # dropped\n    #    Category == \"48\" ~  \"RIVERBOAT WAGERING TAXES\" ,\n    #  Category == \"51\" ~  \"RETIREMENT CONTRIBUTIONS\" , # dropped\n    # Category == \"54\" ~ \"GIFTS AND BEQUESTS\", \n    Category == \"57\" ~  \"Federal Other\" ,\n    Category == \"58\" ~  \"Federal Medicaid Reimbursements\", \n    Category == \"59\" ~  \"Federal Transportation\" ,\n    #   Category == \"60\" ~  \"OTHER GRANTS AND CONTRACTS\", #other\n    #    Category == \"63\" ~  \"INVESTMENT INCOME\", # other\n    #   Category == \"66\" ~ \"PROCEEDS,INVESTMENT MATURITIES\" , #dropped\n    #   Category == \"72\" ~ \"BOND ISSUE PROCEEDS\",  #dropped\n    #   Category == \"75\" ~  \"INTER-AGENCY RECEIPTS \",  #dropped\n    #   Category == \"76\" ~  \"TRANSFER IN FROM OUT FUNDS\",  #other\n    # Category == \"78new\" ~  \"ALL OTHER SOURCES\" ,\n    # Category == \"79\" ~   \"COOK COUNTY IGT\", #dropped\n    #   Category == \"98\" ~  \"PRIOR YEAR REFUNDS\", #dropped\n    \n    Category == \"TOTALS\" ~ \"Total Revenue\",\n    T ~ \"All Other Sources **\" # any other Category number that was not specifically referenced is combined into Other Revenue Sources\n    \n  ) ) %&gt;% \n  select(-type, -Category) %&gt;%  # drop extra columns type and Category number\n  group_by(Year, Category_name) %&gt;%\n  summarise(Dollars= round(sum(Dollars),digits=2)) \n\n# revenue_wide # not actually in wide format yet. \n# has 10 largest rev sources separate and combined all others to Other in long data format. \n\n\n# creates wide version of table where each revenue source is a column\nrevenue_wide_majorcats &lt;- rev_long_majorcats %&gt;% pivot_wider(names_from = Category_name, \n              values_from = Dollars) %&gt;%\n  relocate(\"All Other Sources **\", .after = last_col()) %&gt;%\n  relocate(\"Total Revenue\", .after =  last_col()) \n\n\nexp_long_majorcats &lt;- pivot_longer(exp_totals, exp_402:exp_TOTALS , names_to = c(\"type\", \"Category\"), values_to = \"Dollars\", names_sep = \"_\") %&gt;% \n  rename(Year = fy ) %&gt;% \n  mutate(Category_name = \n           case_when(\n          #   Category == \"402\" ~ \"Aging\" ,\n          #  Category == \"406\" ~ \"AGRICULTURE\", \n         #    Category == \"416\" ~ \"Central Management\",\n             Category == \"418\" ~ \"Children & Family Services\", \n             Category == \"420\" ~ \"Community Development\",\n           #  Category == \"422\" ~ \"NATURAL RESOURCES\" ,\n             Category == \"426\" ~ \"Corrections\",\n           #  Category == \"427\" ~ \"EMPLOYMENT SECURITY\" ,\n             Category == \"444\" ~ \"Human Services\" ,\n           #  Category == \"478\" ~ \"HEALTHCARE & FAM SER NET OF MEDICAID\", \n           #  Category == \"482\" ~ \"PUBLIC HEALTH\", \n             Category == \"492\" ~ \"Revenue\", \n             Category == \"494\" ~ \"Transportation\" ,\n           #  Category == \"532\" ~ \"ENVIRONMENTAL PROTECT AGENCY\" ,\n             Category == \"557\" ~ \"Tollway\" ,\n           #  Category == \"684\" ~ \"IL COMMUNITY COLLEGE BOARD\", \n            # Category == \"691\" ~ \"IL STUDENT ASSISTANCE COMM\" ,\n           #  Category == \"900\" ~ \"NOT IN FRAME\",\n             Category == \"901\" ~ \"State Pension Contribution\",\n             Category == \"903\" ~ \"Debt Service\",\n             Category == \"904\" ~ \"State Employee Healthcare\",\n           #  Category == \"910\" ~ \"LEGISLATIVE\"  ,\n          #   Category == \"920\" ~ \"JUDICIAL\" ,\n         #   Category == \"930\" ~ \"Elected Officers\" , \n            # Category == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             Category == \"941\" ~ \"Public Safety\" ,\n           #  Category == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n           #  Category == \"943\" ~ \"CENTRAL SERVICES\",\n           #  Category == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             Category == \"945\" ~ \"Medicaid\" ,\n          #   Category == \"946\" ~ \"Capital Improvement\" , \n           #  Category == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n            # Category == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             Category == \"959\" ~ \"K-12 Education\" ,\n             Category == \"960\" ~ \"University Education\",\n             Category == \"970\" ~ \"Local Govt Revenue Sharing\",\n          Category == \"TOTALS\" ~ \"Total Expenditures\",\n             T ~ \"All Other Expenditures **\")\n           ) %&gt;% \n  select(-type, -Category) %&gt;% \n  group_by(Year, Category_name) %&gt;% \n  summarise(Dollars= round(sum(Dollars),digits=2))\n\nexpenditure_wide_majorcats &lt;- exp_long_majorcats %&gt;% \n  pivot_wider(names_from = Category_name, \n              values_from = Dollars) %&gt;%\n  relocate(\"All Other Expenditures **\", .after = last_col()) %&gt;%\n  relocate(\"Total Expenditures\", .after =  last_col())\n\n\n# CAGR values for largest expenditure categories and combined All Other Expenditures\n\n# function for calculating the CAGR\ncalc_cagr &lt;- function(df, n) {\n  df &lt;- exp_long_majorcats %&gt;%\n    #select(-type) %&gt;%\n    arrange(Category_name, Year) %&gt;%\n    group_by(Category_name) %&gt;%\n    mutate(cagr = ((`Dollars` / lag(`Dollars`, n)) ^ (1 / n)) - 1)\n\n  return(df)\n}\n\n# This works for one variable at a time\ncagr_25 &lt;- calc_cagr(exp_long_majorcats, 25) %&gt;% \n  # group_by(Category) %&gt;%\n  summarize(cagr_25 = round(sum(cagr*100, na.rm = TRUE), 2))\n\ncagr23_precovid &lt;- exp_long_majorcats %&gt;%\n  filter(Year &lt;= 2019) %&gt;%\n  calc_cagr(21) %&gt;% \n  summarize(cagr_21 = round(sum(cagr*100, na.rm = TRUE), 2))\n\n\n\ncagr_10 &lt;- calc_cagr(exp_long_majorcats, 10) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_10 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_5 &lt;- calc_cagr(exp_long_majorcats, 5) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_5 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_3 &lt;- calc_cagr(exp_long_majorcats, 3) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_3 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_2 &lt;- calc_cagr(exp_long_majorcats, 2) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_2 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_1 &lt;- calc_cagr(exp_long_majorcats, 1) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_1 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\nCAGR_expenditures_majorcats_tot &lt;- data.frame(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_25 ) %&gt;% \n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %&gt;% \n  rename(\"Expenditure Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10,\"25-Year CAGR\" = cagr_25 )\n\nmove_to_last &lt;- function(df, n) df[c(setdiff(seq_len(nrow(df)), n), n), ]\n\nCAGR_expenditures_majorcats_tot &lt;- move_to_last(CAGR_expenditures_majorcats_tot, 1)\nCAGR_expenditures_majorcats_tot &lt;- move_to_last(CAGR_expenditures_majorcats_tot, 14) \n\n\nCAGR_expenditures_majorcats_tot%&gt;%   \n  kbl(caption = \"CAGR Calculations for Largest Expenditure Categories\" , row.names=FALSE) %&gt;% \n     kable_classic()  %&gt;%\n    row_spec(17, bold = T, color = \"black\", background = \"gray\")\ncurrent_year &lt;- 2023\nlast_year &lt;- 2022\n\n# Yearly change for Top 13 largest expenditure categories\nexpenditure_change_majorcats &lt;- exp_long_majorcats %&gt;%\n  filter(Year &gt; 2021) %&gt;%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %&gt;%\n  mutate(\"FY 2023 ($ Billions)\" = round(Dollars_2023/1000, digits = 1),\n         \"FY 2022 ($ Billions)\" = round(Dollars_2022/1000, digits = 1),\n         \"1-Year Change\" = percent((Dollars_2023 -Dollars_2022)/Dollars_2022, accuracy = .1) )  %&gt;%\n  left_join(CAGR_expenditures_majorcats_tot, by = c(\"Category_name\" = \"Expenditure Category\")) %&gt;% \n  arrange(-`FY 2023 ($ Billions)`)%&gt;%\n  mutate(`25-Year CAGR` = percent(`25-Year CAGR`/100, accuracy=.1)) %&gt;%\n  select(-c(Dollars_2023, Dollars_2022, `1 Year CAGR`:`10 Year CAGR`)) %&gt;%\n  rename( \"25-Year CAGR\" = `25-Year CAGR`, \n          \"Expenditure Category\" = Category_name )\n\nexpenditure_change_majorcats &lt;- move_to_last(expenditure_change_majorcats, 4) \n\nexpenditure_change_majorcats &lt;- move_to_last(expenditure_change_majorcats, 1)\n\nexpenditure_change_majorcats %&gt;% \n  kbl(caption = \"Yearly Change in Expenditures\", row.names = FALSE, align = \"l\") %&gt;% \n  kable_classic() %&gt;%\n    row_spec(17, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nTable 3.3: Largest Expenditure Categories with CAGRs\n\n\n\n\n\nCAGR Calculations for Largest Expenditure Categories\n\n\nExpenditure Category\n1 Year CAGR\n2 Year CAGR\n3 Year CAGR\n5 Year CAGR\n10 Year CAGR\n25-Year CAGR\n\n\n\n\nChildren & Family Services\n25.99\n10.03\n8.40\n7.78\n3.33\n0.78\n\n\nCommunity Development\n7.71\n-5.46\n34.18\n24.63\n4.34\n4.79\n\n\nCorrections\n13.46\n2.80\n3.47\n-2.65\n3.13\n2.21\n\n\nDebt Service\n-2.89\n-1.86\n0.07\n-0.20\n0.80\n5.73\n\n\nHuman Services\n21.34\n16.10\n13.77\n10.19\n4.64\n3.29\n\n\nK-12 Education\n9.86\n9.86\n9.15\n7.04\n5.35\n4.35\n\n\nLocal Govt Revenue Sharing\n5.36\n23.23\n19.08\n12.02\n6.46\n4.68\n\n\nMedicaid\n13.10\n11.05\n13.29\n11.76\n8.17\n7.43\n\n\nPublic Safety\n1.18\n-6.87\n5.37\n14.12\n7.58\n5.69\n\n\nRevenue\n66.68\n34.85\n39.16\n41.42\n22.02\n8.14\n\n\nState Employee Healthcare\n-0.09\n2.08\n0.23\n-12.49\n3.28\n5.82\n\n\nState Pension Contribution\n5.06\n10.12\n8.85\n9.54\n9.06\n10.52\n\n\nTollway\n-9.89\n-1.78\n-0.41\n5.23\n7.14\n6.78\n\n\nTransportation\n15.81\n-0.81\n9.06\n8.02\n2.11\n4.02\n\n\nUniversity Education\n12.52\n7.50\n5.01\n4.60\n0.98\n0.81\n\n\nAll Other Expenditures **\n14.36\n6.62\n8.02\n6.78\n4.16\n5.66\n\n\nTotal Expenditures\n11.90\n9.79\n11.12\n8.35\n5.87\n5.24\n\n\n\n\n\n\n\n\n\n\nYearly Change in Expenditures\n\n\nExpenditure Category\nFY 2023 ($ Billions)\nFY 2022 ($ Billions)\n1-Year Change\n25-Year CAGR\n\n\n\n\nMedicaid\n32.4\n28.7\n13.1%\n7.4%\n\n\nK-12 Education\n14.7\n13.4\n9.9%\n4.3%\n\n\nLocal Govt Revenue Sharing\n10.9\n10.3\n5.4%\n4.7%\n\n\nHuman Services\n8.8\n7.3\n21.3%\n3.3%\n\n\nState Pension Contribution\n6.8\n6.5\n5.1%\n10.5%\n\n\nTransportation\n5.3\n4.6\n15.8%\n4.0%\n\n\nRevenue\n3.1\n1.9\n66.7%\n8.1%\n\n\nState Employee Healthcare\n3.0\n3.0\n-0.1%\n5.8%\n\n\nUniversity Education\n2.5\n2.3\n12.5%\n0.8%\n\n\nDebt Service\n2.0\n2.0\n-2.9%\n5.7%\n\n\nTollway\n1.9\n2.1\n-9.9%\n6.8%\n\n\nCorrections\n1.7\n1.5\n13.5%\n2.2%\n\n\nPublic Safety\n1.7\n1.7\n1.2%\n5.7%\n\n\nChildren & Family Services\n1.6\n1.3\n26.0%\n0.8%\n\n\nCommunity Development\n1.5\n1.4\n7.7%\n4.8%\n\n\nAll Other Expenditures **\n14.0\n12.2\n14.4%\n5.7%\n\n\nTotal Expenditures\n112.0\n100.1\n11.9%\n5.2%\n\n\n\n\n\n\n\n\n\n\n\nTop 10 revenue sources CAGRs and Yearly Change Tables:\n\n\nCode\n##### Top 10 revenue CAGRs: ####\n\n\ncalc_cagr &lt;- function(df, n) {\n  df &lt;- rev_long_majorcats %&gt;%\n    arrange(Category_name, Year) %&gt;%\n    group_by(Category_name) %&gt;%\n    mutate(cagr = ((Dollars / lag(Dollars, n)) ^ (1 / n)) - 1)\n\n  return(df)\n}\n\n# This works for one variable at a time\ncagr_25 &lt;- calc_cagr(rev_long_majorcats, 25) %&gt;% \n     # group_by(Category) %&gt;%\n  summarize(cagr_25 = round(sum(cagr*100, na.rm = TRUE), 2))\n\ncagr_10 &lt;- calc_cagr(rev_long_majorcats, 10) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_10 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_5 &lt;- calc_cagr(rev_long_majorcats, 5) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_5 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_3 &lt;- calc_cagr(rev_long_majorcats, 3) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_3 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\ncagr_2 &lt;- calc_cagr(rev_long_majorcats, 2) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_2 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\n cagr_1 &lt;- calc_cagr(rev_long_majorcats, 1) %&gt;% \n  filter(Year == 2023) %&gt;%\n  summarize(cagr_1 = case_when(Year == 2023 ~ round(sum(cagr*100, na.rm = TRUE), 2)))\n\nCAGR_revenue_majorcats_tot &lt;- data.frame(cagr_1, cagr_2, cagr_3, cagr_5, cagr_10, cagr_25) %&gt;%   \n  select(-c(Category_name.1, Category_name.2, Category_name.3, Category_name.4, Category_name.5 )) %&gt;% \n  rename(\"Revenue Category\" = Category_name, \"1 Year CAGR\" = cagr_1, \"2 Year CAGR\" = cagr_2, \"3 Year CAGR\" = cagr_3, \"5 Year CAGR\" = cagr_5, \"10 Year CAGR\" = cagr_10, \"25-Year CAGR\" = cagr_25 )\n\nCAGR_revenue_majorcats_tot &lt;- move_to_last(CAGR_revenue_majorcats_tot,1)\nCAGR_revenue_majorcats_tot &lt;- move_to_last(CAGR_revenue_majorcats_tot,11)\n\nCAGR_revenue_majorcats_tot %&gt;% \n  kbl(caption = \"CAGR Calculations for Largest Revenue Sources\", row.names = FALSE) %&gt;% \n  kable_classic() %&gt;%\n    row_spec(12, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nTable 3.4: Top 10 Revenue Sources with CAGRs\n\n\n\n\n\nCAGR Calculations for Largest Revenue Sources\n\n\nRevenue Category\n1 Year CAGR\n2 Year CAGR\n3 Year CAGR\n5 Year CAGR\n10 Year CAGR\n25-Year CAGR\n\n\n\n\nCorporate Income Tax\n4.56\n32.28\n42.32\n24.88\n8.95\n7.16\n\n\nFederal Medicaid Reimbursements\n6.09\n7.28\n13.44\n8.44\n9.32\n7.47\n\n\nFederal Other\n-43.87\n8.68\n3.88\n13.39\n5.67\n4.35\n\n\nFederal Transportation\n15.30\n-5.74\n5.83\n5.82\n2.17\n3.78\n\n\nIncome Tax\n-4.28\n2.74\n8.89\n6.19\n4.35\n5.37\n\n\nLicenses, Fees, Registration\n9.25\n2.24\n13.23\n11.07\n6.18\n7.94\n\n\nMedical Provider Assessments\n9.50\n3.60\n5.58\n13.15\n9.46\n8.41\n\n\nMotor Fuel Taxes\n1.66\n3.82\n3.48\n13.44\n7.39\n2.76\n\n\nReceipts from Revenue Producing\n8.47\n5.70\n5.99\n0.89\n2.69\n5.21\n\n\nSales Tax\n4.84\n8.04\n9.75\n6.67\n4.71\n3.30\n\n\nAll Other Sources **\n14.47\n14.13\n13.76\n6.89\n4.75\n4.30\n\n\nTotal Revenue\n-3.69\n8.35\n11.52\n8.89\n5.88\n5.13\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\n###### Yearly change summary table for Top 10 Revenues #####\nrevenue_change_majorcats &lt;- rev_long_majorcats %&gt;%\n  #select(-c(Category)) %&gt;%\n  filter(Year &gt; 2021) %&gt;%\n  pivot_wider(names_from = Year , values_from = Dollars,   names_prefix = \"Dollars_\") %&gt;%\n  mutate(\n    \"FY 2023 ($ billions)\" = round(Dollars_2023/1000, digits = 1),\n            \"FY 2022 ($ billions)\" = round(Dollars_2022/1000, digits = 1),\n\n         \"1-Year Change\" = percent(((Dollars_2023 -Dollars_2022)/Dollars_2022), accuracy = .1)) %&gt;%\n  left_join(CAGR_revenue_majorcats_tot, by = c(\"Category_name\" = \"Revenue Category\")) %&gt;% \n    arrange(-`FY 2023 ($ billions)`)%&gt;%\n  #select(-c(Dollars_2021, Dollars_2021, `1 Year CAGR`:`10 Year CAGR`)) %&gt;%\n  mutate(\"25-Year Change\" = percent(`25-Year CAGR`/100, accuracy=.1)) %&gt;%\n  rename(\"Revenue Category\" = Category_name ) %&gt;%\n  select(-c(Dollars_2023, Dollars_2022, `1 Year CAGR`:`25-Year CAGR`)) \n\nrevenue_change_majorcats &lt;- move_to_last(revenue_change_majorcats,5)\n\nrevenue_change_majorcats &lt;- move_to_last(revenue_change_majorcats,1)\n\nrevenue_change_majorcats%&gt;% \n  kbl(caption = \"Yearly Change in Revenue for Main Revenue Sources\", row.names = FALSE, align = \"l\") %&gt;% \n   kable_classic() %&gt;%\n    row_spec(12, bold = T, color = \"black\", background = \"gray\")\n\n\n\n\nTable 3.5: Top 10 Revenue Sources with CAGRs\n\n\n\n\n\nYearly Change in Revenue for Main Revenue Sources\n\n\nRevenue Category\nFY 2023 ($ billions)\nFY 2022 ($ billions)\n1-Year Change\n25-Year Change\n\n\n\n\nIncome Tax\n25.3\n26.4\n-4.3%\n5.4%\n\n\nFederal Medicaid Reimbursements\n20.2\n19.0\n6.1%\n7.5%\n\n\nSales Tax\n16.2\n15.5\n4.8%\n3.3%\n\n\nFederal Other\n10.9\n19.4\n-43.9%\n4.3%\n\n\nCorporate Income Tax\n10.5\n10.0\n4.6%\n7.2%\n\n\nMedical Provider Assessments\n4.1\n3.7\n9.5%\n8.4%\n\n\nMotor Fuel Taxes\n2.6\n2.5\n1.7%\n2.8%\n\n\nReceipts from Revenue Producing\n2.6\n2.4\n8.5%\n5.2%\n\n\nFederal Transportation\n2.1\n1.8\n15.3%\n3.8%\n\n\nLicenses, Fees, Registration\n2.1\n1.9\n9.2%\n7.9%\n\n\nAll Other Sources **\n15.3\n13.3\n14.5%\n4.3%\n\n\nTotal Revenue\n111.8\n116.1\n-3.7%\n5.1%\n\n\n\n\n\n\n\n\n\n\n\nExport summary file with Totals\n\n\nCode\n#install.packages(\"openxlsx\")\nlibrary(openxlsx)\n\ndataset_names &lt;- list('Aggregate Revenues' = revenue_wide2, \n                      'Aggregate Expenditures' = expenditure_wide2, \n\n                      \n                      'Table 1' = revenue_change_majorcats, #Top categories with yearly change, 23 yr cagr\n                      'Table 2' = expenditure_change_majorcats,\n                      \n                      'Table 1a. AllCats' = revenue_change2,\n                      'Table 2a. AllCats' = expenditure_change2,\n                      \n                      'CAGR Rev-MajorCats' = CAGR_revenue_majorcats_tot, # Categories Match Table 1 in paper\n                      'CAGR Exp-MajorCats' = CAGR_expenditures_majorcats_tot, \n                                            \n                     # 'Table 1-AllCats' = expenditure_change_allcats,  # All Categories by Year\n                    #  'Table 2-AllCats' = revenue_change_allcats,\n                      \n                    #  'CAGR_Revenue-AllCats' = CAGR_revenue_summary_tot, \n                   #   'CAGR_Expenditures-AllCats' = CAGR_expenditures_summary_tot, \n                      \n                      'Fiscal Gap' = year_totals,    # Total Revenue, Expenditure, and Fiscal gap per year\n                      \n                      'aggregated_totals_long' = aggregated_totals_long # all data in long format. Good for creating pivot tables in Excel\n                      )\n\n# write.xlsx(dataset_names, file = 'summary_file_FY23_wTotals_DATE_2023.xlsx')\n\n\nSaves main items in one excel file named summary_file.xlsx. Delete eval=FALSE to run on local computer.",
    "crumbs": [
      "About",
      "Reports",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Calculating the Fiscal Gap</span>"
    ]
  },
  {
    "objectID": "Everything.html#all-categories-with-totals",
    "href": "Everything.html#all-categories-with-totals",
    "title": "1  Calculating the Fiscal Gap",
    "section": "4.1 All Categories with Totals",
    "text": "4.1 All Categories with Totals\n\n\n\nTable 4.2: Revenue without State CURE\n\n\n\nCode\nexp_totals &lt;- ff_exp %&gt;% rowwise() %&gt;% mutate(exp_TOTALS = sum(across(exp_402:exp_970)))\nrev_totals &lt;- ff_rev %&gt;%    rowwise() %&gt;% \n  mutate(rev_TOTALS = sum(across(rev_02:rev_78)))\n\nrev_long &lt;- pivot_longer(rev_totals, rev_02:rev_TOTALS, names_to = c(\"type\",\"Category\"), values_to = \"Dollars\", names_sep = \"_\") %&gt;% \n  rename(Year = fy) %&gt;%\n  mutate(Category_name = case_when(\n    Category == \"02\" ~ \"INDIVIDUAL INCOME TAXES\" ,\n    Category == \"03\" ~ \"CORPORATE INCOME TAXES\" ,\n    Category == \"06\" ~ \"SALES TAXES\" ,\n    Category == \"09\" ~ \"MOTOR FUEL TAX\" ,\n    Category == \"12\" ~ \"PUBLIC UTILITY TAXES\" ,\n    Category == \"15\" ~ \"CIGARETTE TAXES\" ,\n    Category == \"18\" ~ \"LIQUOR GALLONAGE TAXES\" ,\n    Category == \"21\" ~ \"INHERITANCE TAX\" ,\n    Category == \"24\" ~ \"INSURANCE TAXES&FEES&LICENSES\" ,\n    Category == \"27\" ~ \"CORP FRANCHISE TAXES & FEES\" ,\n    Category == \"30\" ~ \"HORSE RACING TAXES & FEES\",  # in Other\n    Category == \"31\" ~ \"MEDICAL PROVIDER ASSESSMENTS\" ,\n    Category == \"32\" ~ \"GARNISHMENT-LEVIES\" , # dropped\n    Category == \"33\" ~  \"LOTTERY RECEIPTS\" ,\n    Category == \"35\" ~  \"OTHER TAXES\" ,\n    Category == \"36\" ~  \"RECEIPTS FROM REVENUE PRODUCING\", \n    Category == \"39\" ~  \"LICENSES, FEES & REGISTRATIONS\" ,\n    Category == \"42\" ~  \"MOTOR VEHICLE AND OPERATORS\" ,\n    Category == \"45\" ~  \"STUDENT FEES-UNIVERSITIES\",   # dropped\n    Category == \"48\" ~  \"RIVERBOAT WAGERING TAXES\" ,\n    Category == \"51\" ~  \"RETIREMENT CONTRIBUTIONS\" , # dropped\n    Category == \"54\" ~ \"GIFTS AND BEQUESTS\", \n    Category == \"57\" ~  \"FEDERAL OTHER\" ,\n    Category == \"58\" ~  \"FEDERAL MEDICAID\", \n    Category == \"59\" ~  \"FEDERAL TRANSPORTATION\" ,\n    Category == \"60\" ~  \"OTHER GRANTS AND CONTRACTS\", #other\n    Category == \"63\" ~  \"INVESTMENT INCOME\", # other\n    Category == \"66\" ~ \"PROCEEDS,INVESTMENT MATURITIES\" , #dropped\n    Category == \"72\" ~ \"BOND ISSUE PROCEEDS\",  #dropped\n    Category == \"75\" ~  \"INTER-AGENCY RECEIPTS \",  #dropped\n    Category == \"76\" ~  \"TRANSFER IN FROM OUT FUNDS\",  #other\n    Category == \"78\" ~  \"ALL OTHER SOURCES\" ,\n    Category == \"79\" ~   \"COOK COUNTY IGT\", #dropped\n    Category == \"98\" ~  \"PRIOR YEAR REFUNDS\", #dropped\nCategory == \"TOTALS\" ~ \"Total\"\n\n  ) ) %&gt;% \n  select(-type, -Category) %&gt;%  # drop extra columns type and Category number\n  group_by(Year, Category_name) %&gt;%\n  summarise(Dollars= round(sum(Dollars),digits=2)) %&gt;% \n  mutate(Category_name = str_to_title(Category_name))\n\n# creates wide version of table where each revenue source is a column\nrevenue_wide2 &lt;- rev_long %&gt;% pivot_wider(names_from = Category_name, \n              values_from = Dollars) %&gt;%\n#  relocate(\"Other Revenue Sources **\", .after = last_col()) %&gt;%\n  relocate(\"Total\", .after =  last_col())\n\n\n\n\n\n\nCode\nexp_long &lt;- pivot_longer(exp_totals, exp_402:exp_TOTALS , names_to = c(\"type\", \"Category\"), values_to = \"Dollars\", names_sep = \"_\") %&gt;% \n  rename(Year = fy ) %&gt;% \n  mutate(Category_name = \n           case_when(\n            Category == \"402\" ~ \"AGING\" ,\n            Category == \"406\" ~ \"AGRICULTURE\", \n             Category == \"416\" ~ \"Central Management\",\n            Category == \"418\" ~ \"CHILDREN AND FAMILY SERVICES\", \n             Category == \"420\" ~ \"Community Development\",\n            Category == \"422\" ~ \"NATURAL RESOURCES\" ,\n             Category == \"426\" ~ \"CORRECTIONS\",\n            Category == \"427\" ~ \"EMPLOYMENT SECURITY\" ,\n             Category == \"444\" ~ \"Human Services\" ,\n           Category == \"478\" ~ \"HEALTHCARE & FAM SER NET OF MEDICAID\", \n            Category == \"482\" ~ \"PUBLIC HEALTH\", \n            Category == \"492\" ~ \"REVENUE\", \n             Category == \"494\" ~ \"Transportation\" ,\n             Category == \"532\" ~ \"ENVIRONMENTAL PROTECT AGENCY\" ,\n             Category == \"557\" ~ \"Tollway\" ,\n             Category == \"684\" ~ \"IL COMMUNITY COLLEGE BOARD\", \n             Category == \"691\" ~ \"IL STUDENT ASSISTANCE COMM\" ,\n             Category == \"900\" ~ \"NOT IN FRAME\",\n             Category == \"901\" ~ \"State Pension Contribution\",\n             Category == \"903\" ~ \"Debt Service\",\n             Category == \"904\" ~ \"State Employee Healthcare\",\n             Category == \"910\" ~ \"LEGISLATIVE\"  ,\n             Category == \"920\" ~ \"JUDICIAL\" ,\n             Category == \"930\" ~ \"ELECTED OFFICERS\" , \n             Category == \"940\" ~ \"OTHER HEALTH-RELATED\", \n             Category == \"941\" ~ \"Public Safety\" ,\n             Category == \"942\" ~ \"ECON DEVT & INFRASTRUCTURE\" ,\n             Category == \"943\" ~ \"CENTRAL SERVICES\",\n             Category == \"944\" ~ \"BUS & PROFESSION REGULATION\" ,\n             Category == \"945\" ~ \"Medicaid\" ,\n             Category == \"946\" ~ \"Capital Improvement\" , \n             Category == \"948\" ~ \"OTHER DEPARTMENTS\" ,\n             Category == \"949\" ~ \"OTHER BOARDS & COMMISSIONS\" ,\n             Category == \"959\" ~ \"K-12 Education\" ,\n             Category == \"960good\" ~ \"UNIVERSITY EDUCATION\",\n             Category == \"970\" ~ \"Local Govt Revenue Sharing\",\n          Category == \"TOTALS\" ~ \"Total\") #,T ~ \"All Other Expenditures **\")\n           ) %&gt;% \n  select(-type, -Category) %&gt;% \n  group_by(Year, Category_name) %&gt;% \n  summarise(Dollars= round(sum(Dollars),digits=2)) %&gt;% \n  mutate(Category_name = str_to_title(Category_name))\n\nexpenditure_wide2 &lt;- exp_long%&gt;% \n  pivot_wider(names_from = Category_name, \n              values_from = Dollars) %&gt;%\n  #relocate(\"All Other Expenditures **\", .after = last_col()) %&gt;%\n  relocate(\"Total\", .after =  last_col())",
    "crumbs": [
      "About",
      "Reports",
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Calculating the Fiscal Gap</span>"
    ]
  },
  {
    "objectID": "OwnSourceRev.html",
    "href": "OwnSourceRev.html",
    "title": "2  Own Source Revenue",
    "section": "",
    "text": "2.1 Income Taxes\nIncome taxes include Individual income taxes and corporate income taxes.\nFigure 2.1: Break down of ALL Income Tax\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.2: Break down of ALL Income Tax",
    "crumbs": [
      "About",
      "Illinois State Budget Data",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Own Source Revenue</span>"
    ]
  },
  {
    "objectID": "OwnSourceRev.html#income-taxes",
    "href": "OwnSourceRev.html#income-taxes",
    "title": "2  Own Source Revenue",
    "section": "",
    "text": "Code\nrev_temp  %&gt;% \n  filter(rev_type == \"03\" | rev_type == \"02\") %&gt;%\n  mutate(label = if_else(fy == max(fy), as.character(source_name_AWM), NA_character_)) %&gt;%\n  group_by(fy, source, source_name_AWM, label) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot(aes(x=fy, y=receipts/1000000000, color = source_name_AWM)) + \n  geom_line() + \n  geom_text(aes(label = label)) +\n  theme_classic() +\n    theme(legend.position = \"bottom\" ,\n                   plot.margin = margin(0, 4, 0, 0, \"cm\")) +\n\n  scale_x_continuous(expand = c(0,0)) +\n  scale_y_continuous(labels = comma) +\n  labs(title = \"All Income Tax by Revenue Source\", \n       y = \"Billions of Nominal Dollars\")  +\n    coord_cartesian(clip = 'off', expand = TRUE)\n\n\nrev_temp  %&gt;% \n  filter(rev_type == \"03\") %&gt;%\n  mutate(label = if_else(fy == max(fy), as.character(fund_name_ab), NA_character_)) %&gt;%\n  group_by(fy, fund_name_ab, label) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot(aes(x=fy, y=receipts/1000000000, color = fund_name_ab)) +\n  geom_line() + \n    geom_text_repel(aes(label = label),   \n              hjust = 0, \n            direction = \"y\",\n              segment.linetype = \"dotted\",\n            # nudge_x = 0.1,\n            # nudge_y = 0.1,\n            # size = \n            xlim = c(2023.5, NA)\n              ) +\n  theme_classic() +\n  \n  theme(legend.position = \"none\",\n                   plot.margin = margin(0, 3, 0, 0, \"cm\")\n        ) +\n    coord_cartesian(clip = 'off') +\n  \n  scale_x_continuous(expand = c(0,0), limits = c(1998, 2023.5), breaks = c(1998, 2005, 2010, 2015, 2020, 2023)) +\n  scale_y_continuous(labels = comma) +\n\n  labs(title = \"All Income Tax Money by Receiving Fund\", \n       y = \"Billions of Nominal Dollars\") \n\n\n\n2.1.0.1 Individual Income Tax\n\nCode\nrev_temp  %&gt;% \n  filter(rev_type == \"02\") %&gt;%\n  group_by(fy, source, source_name_AWM) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + \n  geom_line(aes(x=fy, y=receipts/1000000000, color = source_name_AWM)) + \n  theme_classic() +\n  scale_x_continuous(expand = c(0,0)) +\n  scale_y_continuous(labels = comma) +\n  labs(title = \"Individual Income Tax  Breakdown\", subtitle = \"Revenue sources for rev_type == 02\",\n       y = \"Billions of Nominal Dollars\") \n\n\nrev_temp  %&gt;% \n  filter(rev_type == \"02\") %&gt;%\n  group_by(fy, fund_name_ab) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + \n  geom_line(aes(x=fy, y=receipts/1000000000, color = fund_name_ab)) + \n  theme_classic() +\n  scale_x_continuous(expand = c(0,0)) +\n  scale_y_continuous(labels = comma) +\n  labs(title = \"Individual Income Tax  Breakdown\", \n       subtitle = \"Funds receiving rev_type == 02\",\n       y = \"Billions of Nominal Dollars\")\n\n\n\n\n\n\n\nFigure 2.3: Break down of Individual Income Tax\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.4: Break down of Individual Income Tax\n\n\n\n\n\n\n\n\n\n\n\n2.1.0.2 Corporate Income Tax\n\nCode\nrev_temp  %&gt;% \n  filter(rev_type == \"03\" ) %&gt;%\n  group_by(fy, source, source_name_AWM) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + \n  geom_line(aes(x=fy, y=receipts/1000000000, color = source_name_AWM)) + \n  theme_classic() +\n  scale_x_continuous(expand = c(0,0)) +\n  scale_y_continuous(labels = comma) +\n  labs(title = \"Corporate Income Tax  Breakdown\", \n       subtitle = \"Corporate Income Taxes include money transfered straight to local governments and funds saved for tax refunds.\",\n       y = \"Billions of Nominal Dollars\") \n\nrev_temp  %&gt;% \n  filter(rev_type == \"03\") %&gt;%\n  group_by(fy, fund_name_ab) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + \n  geom_line(aes(x=fy, y=receipts/1000000000, color = fund_name_ab)) + \n  theme_classic() +\n  scale_x_continuous(expand = c(0,0)) +\n  scale_y_continuous(labels = comma) +\n\n  labs(title = \"Corporate Income Tax Breakdown\", \n       subtitle = \"Corporate Income Taxes include money transfered straight to local governments and funds saved for tax refunds.\",\n       y = \"Billions of Nominal Dollars\")\n\n\n\n\n\n\n\nFigure 2.5: Break down of Corporte Income Tax\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.6: Break down of Corporte Income Tax\n\n\n\n\n\n\n\n\n\n\n\n2.1.1 Sales Tax\n\nCode\nrev_temp  %&gt;% \n  filter(rev_type == \"06\" ) %&gt;%\n  group_by(fy, source, source_name_AWM) %&gt;% \n  summarize(receipts = round(sum(receipts))) %&gt;% \n  pivot_wider(names_from = \"fy\", values_from = \"receipts\")\nrev_temp  %&gt;% \n  filter(rev_type == \"06\" ) %&gt;%\n  group_by(fy, source, source_name_AWM) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + \n  geom_line(aes(x=fy, y=receipts/1000000000, color = source_name_AWM)) + \n  theme_classic() +\n  scale_x_continuous(expand = c(0,0)) +\n  scale_y_continuous(labels = comma) +\n  theme(legend.position = \"bottom\") +\n  labs(title = \"Sales Tax Breakdown\", \n       y = \"Billions of Nominal Dollars\") \n\nrev_temp  %&gt;% \n  filter(rev_type == \"06\" & fy &gt; 2015) %&gt;%\n  group_by(fy, fund_name_ab) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + \n  geom_line(aes(x=fy, y=receipts/1000000000, color = fund_name_ab)) + \n  #geom_text(data = annotation, aes(x=x, y=y, label=label)) +\n  theme_classic() +\n  scale_x_continuous(expand = c(0,0)) +\n  scale_y_continuous(labels = comma) +\n # scale_linetype_manual(values = c(\"dotted\", \"dashed\", \"solid\")) +\n  theme(legend.position = \"bottom\") +\n  labs(title = \"Sales Tax Breakdown\", \n       #subtitle = \"Sales Taxes include money transfered straight to local governments and funds saved for tax refunds.\",\n       y = \"Billions of Nominal Dollars\")\n\n\n\n\n\n\n\nFigure 2.7: Break down of Sales Tax. Sales Taxes include money transfered straight to local governments and funds saved for tax refunds.\n\n\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.8: Break down of Sales Tax. Sales Taxes include money transfered straight to local governments and funds saved for tax refunds.\n\n\n\n\n\n\n\n\n\n\n\nFigure 2.9: Break down of Sales Tax. Sales Taxes include money transfered straight to local governments and funds saved for tax refunds.\n\n\n\n\n\n\n\n\n\n\n\n2.1.2 Online retailers\n\n\n\n\n\n\n\nWarning\n\n\n\nOnline Retailer Warning\nNot edited or double checked. Randomly looked into online retailers recently and didn’t finish thoughts on it. Just general notes pulled together while looking into online sales tax.\n\n\n\nLaw was passed in 2018 that required out of state retailers to pay the 6.25% state sales tax. The Rebuild Illinois law expanded the law to require remote retailers to charge all state and local retailers occupation taxes beginning in July 1, 2020. Before Jan. 1 2021, only state sales taxes were required to be collected (related to South Dakota v Wayfair court decision). Now required to pay state and local tax based on where product is delivered.\n“On June 28, 2019, Public Act 101-0031, the”Leveling the Playing Field for Illinois Retail Act,” was signed into Illinois law and on December 13, 2019 an amendment to the Act was signed into law in Public Act 101-0604. In an effort to create more equity between remote sellers and local brick-and-mortar retailers, the new law requires remote sellers without a physical presence in the state and marketplace facilitators (e.g., Amazon and Walmart) to collect both state and local sales taxes effective January 1, 2021.” CivicFed.org\nRequires remote sellers and marketplace facilitators to collect and remit the state and locally-imposed Retailers’ Occupation Tax (ROT) for the jurisdictions where the product is delivered (destination sourcing) rather than collecting and remitting solely the state use tax. \n\n\n\nIllinois’ State sales tax rate is 6.25%, of which 5.0% of the sales tax revenue goes to the State, 1.0% goes to all municipalities, including Chicago, and the remaining 0.25% goes to the counties. However, Cook County’s 0.25% share of the State sales tax is distributed to the Regional Transportation Authority.\n“The amended”Leveling the Playing Field for Illinois Retail Act” was passed by the General Assembly on November 14, 2019, to require both Remote Retailers and Marketplace Facilitators to collect and remit the state and locally-imposed Retailers’ Occupation Tax (ROT, aka sales tax) for the jurisdictions where the product is delivered (its destination) starting January 1, 2021.”- Illinois Municipal League\n\nMarketplace Facilitators, like Amazon, were required to collect Use Tax on sales starting January 1, 2020\nOther sellers required to collect state and local sales tax on sales on January 2021.\nThere is a state tax rate of 6.25% and Illinois municipalities may impose an additional local sales tax called the Retailer’s Occupation Tax.\n\nFor remote sellers, the state tax rate is referred to as “use tax” and for intrastate sellers, “ROT” simply means sales tax.  \nThe ROT is measured upon the seller’s gross receipts and the seller is statutorily required to collect the use tax from their customers.\n\nsource 0482 is State ROT-2.2%\n\nILGA info - leveling the playing field went into effect on July 1 2020 which is the beginning of FY21\n\n\nCode\n## State Retailers Occupation Tax. \nrev_temp %&gt;% filter(source == \"0481\") %&gt;%\n  group_by(fy, source_name_AWM) %&gt;% summarize(revenue=sum(receipts))\n\n\n\n\nFigure 2.10: Leveling the Playing Field went into effect for Amazon on January 1, 2020(mid-FY21) and for other remote retailers starting January 1, 2021 (mid-FY22)\n\n\n\n\n\n\n\n\n\nCode\nrev_temp %&gt;% \n  filter(source == \"0481\") %&gt;%\n  group_by(fy, source_name_AWM, fund_name_ab) %&gt;% \n  summarize(revenue=sum(receipts))%&gt;%\n  arrange(-fy, -revenue)%&gt;%\n  pivot_wider(names_from = \"fy\", values_from=\"revenue\")\n\n\n\n\nFigure 2.11: Leveling the Playing Field went into effect for Amazon on January 1, 2020(mid-FY21) and for other remote retailers starting January 1, 2021 (mid-FY22)\n\n\n\n\n\n\n\n\n\nCode\nrev_temp %&gt;% \n  filter(source == \"0481\") %&gt;%\n  ggplot(aes(x=fy, y=receipts))+\n  geom_recessions()+\n  geom_line(aes(color=fund_name_ab))+\n  geom_vline(xintercept = 2018)+\n  geom_vline(xintercept = 2021)+\n  theme_classic()+\n  scale_x_continuous(expand = c(0,0))\n  labs(title=\"State Retailers' Occupation Tax, Source 0481\")\n\n\n$title\n[1] \"State Retailers' Occupation Tax, Source 0481\"\n\nattr(,\"class\")\n[1] \"labels\"\n\n\n\n\n\nFigure 2.12: Leveling the Playing Field went into effect for Amazon on January 1, 2020(mid-FY21) and for other remote retailers starting January 1, 2021 (mid-FY22)\n\n\n\n\n\n\n\n\n\n\nState tax began being collected for remote retailers based on destination beginning in Leveling the Playing Field went into effect for Amazon on January 1, 2020 (mid-FY21) and for other remote retailers starting January 1, 2021 (mid-FY22).\n\n\nCode\n### Remote Occupation Tax\n# STATE ROT-2.2%\nrev_temp %&gt;% \n  filter(source == \"0482\") %&gt;%\n  group_by(fy, source_name_AWM) %&gt;% \n  summarize(revenue=sum(receipts))\nrev_temp %&gt;% \n  filter(source == \"0482\") %&gt;%\n  group_by(fy, source_name_AWM, fund_name_ab) %&gt;% \n  summarize(revenue=sum(receipts))%&gt;%\n  arrange(-fy, -revenue)%&gt;%\n  pivot_wider(names_from = \"fy\", values_from=\"revenue\")\n\n\n\n\nTable 2.1: Remote Occupation Tax: State ROT\n\n\n\n\n  \n\n\n\n\n  \n\n\n\n\n\n\n\nCode\nrev_temp %&gt;% \n  filter(source == \"0482\") %&gt;%\n  ggplot(aes(x=fy, y=receipts))+\n  geom_line(aes(color=fund_name_ab))+\n  geom_recessions()+\n  geom_vline(xintercept = 2018)+\n  geom_vline(xintercept = 2020)+\n  theme_classic() +\n  scale_x_continuous(expand = c(0,0)) +\n  labs(title=\"State Retailers' Occupation Tax\")\nrev_temp %&gt;% \n  filter(source == \"0482\") %&gt;%\n  group_by(fy, source_name_AWM, fund_name_ab) %&gt;% \n  summarize(revenue=sum(receipts))  %&gt;% \n  ggplot()+\n  geom_line(aes(x=fy, y=revenue, color=fund_name_ab))+\n  geom_vline(xintercept = 2018) +\n  geom_vline(xintercept = 2021) +\n  theme_classic()+\n  scale_x_continuous(expand = c(0,0)) +\n  labs(title=\"State ROT - 2.2%\")\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nrev_temp %&gt;% \n  filter(source == \"0482\" | source == \"0481\") %&gt;%\n  group_by(fy, source_name_AWM) %&gt;% \n  summarize(revenue=sum(receipts))  %&gt;% \n  ggplot()+\n  geom_line(aes(x=fy, y=revenue, color=source_name_AWM))+\n  geom_vline(xintercept = 2018)+\n  geom_vline(xintercept = 2021)+\n  theme_classic()+\n  scale_x_continuous(expand = c(0,0)) + \n  labs(title=\"State ROT - 2.2% & \",\n       subtitle = \"Large increases due to Leveling the Playing Field Act & Online shopping during pandemic??\")\n\n\n\n\n\nFigure 2.13: Large increases due to Leveling the Playing Field Act & Online shopping during pandemic. Leveling the Playing Field went into effect for Amazon on January 1, 2020(mid-FY21) and for other remote retailers starting January 1, 2021 (mid-FY22)\n\n\n\n\n\n\n\n\nAs of Feb. 6 2023, Source 481 Retailers Occupation Tax has collected $9.3 billion already. FY22 had $14.7 million. Around half goes to the General Revenue Fund.\n\n\nCode\nrev_temp  %&gt;% \n  filter(rev_type == \"03\" | \n          rev_type == \"02\" | \n           rev_type == \"06\") %&gt;%\n  filter(!str_detect(source_name_AWM, \"PPRT\") & !str_detect(fund, \"REFUND\")) %&gt;%\n\n  group_by(fy, source, source_name_AWM) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + # aes(x=fy, y=receipts/1000, group = source))+\n     # geom_recessions(text = FALSE)+\n  geom_line(aes(x=fy, y=receipts/1000000000, color = source_name_AWM)) + \n  #geom_text(data = annotation, aes(x=x, y=y, label=label)) +\n  theme_classic() +\n  scale_x_continuous(expand = c(0,0)) +\n  scale_y_continuous(labels = comma) +\n scale_linetype_manual(values = c(\"dotted\", \"dashed\", \"solid\")) +\n  theme(legend.position = \"none\") +\n  labs(title = \"What the State Actually Gets to Keep\", \n       subtitle = \"Tax Revenue collected by the State - (refund fund $ & Local Transfers)\",\n       y = \"Billions of Nominal Dollars\") \n\n\n\n\n\n\n\n\n\n\n\nCode\nrev_temp  %&gt;% \n  filter(rev_type == \"03\" | \n           rev_type == \"02\" | \n           rev_type == \"06\") %&gt;%\n  filter(!str_detect(source_name_AWM, \"PPRT\") & !str_detect(fund, \"REFUND\")) %&gt;%\n\n  group_by(fy,\n           rev_type\n           # source, source_name_AWM\n           ) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + # aes(x=fy, y=receipts/1000, group = source))+\n  geom_line(aes(x=fy, y=receipts/1000000000,\n                group = rev_type, color=rev_type\n                ) )+ \n  theme_classic() +\n  scale_x_continuous(expand = c(0,0)) +\n  scale_y_continuous(labels = comma) +\n\n  theme(legend.position = \"none\") +\n  labs(title = \"What the State Actually Gets to Keep\", \n       subtitle = \"Tax Revenue collected by the State - (refund fund $ & Local Transfers)\",\n       y = \"Billions of Nominal Dollars\")",
    "crumbs": [
      "About",
      "Illinois State Budget Data",
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Own Source Revenue</span>"
    ]
  },
  {
    "objectID": "FederalRevenue.html",
    "href": "FederalRevenue.html",
    "title": "3  Federal Revenue",
    "section": "",
    "text": "The Fiscal Futures Model divides federal funds (IOC revenue type = 57) into Medicaid, Transportation, and All Other Federal Funds. “All Other” federal revenue can include: Health and Human Services Grants, Federal Stimulus Package, Department of Education Grants, Department of Transportation Grants, Department of Agriculture Grants, TANF Grants, and Department of Labor Grants.\nFederal Medicaid: DHFS receives money for Medicaid that is deposited into the General Revenue Fund. There are also Special State Funds used for Medicaid that receive specific revenues (e.g. Healthcare Provider Taxes) which are matched with Federal Funds. The federal receipts in these special funds are aggregated and added to the federal receipts in the GRF that are received by DHFS.\nRevenue Sources:\n\n618 = Health and Human Services (not used)\n660 = HHS/Hospital Participation\n676 = Medical Assistance\n692 = Medical Assistance\n1552 = DHHS/ FFP-Medicaid Rehab Option\n2306 = Enhanced Fed Fin PART-ARRA\n2076 = IDPH-HHS/CMS\n2364 = Department of Insurance (not used)\nRevenue Source=1530 is labeled Medicaid Matching in IOC Sources list but it isn’t used? 2140 is Matching Grant Monies but is also not used?\nOther potential medicaid sources from CTRL-Fing “med” in revenue sources: Sources: 2104 = Medicare Part D & 675 = Medical Administration\n\nThe Department of Healthcare and Family Services (DHFS) receives federal monies for Medicaid that are deposited into the General Revenue Fund. In addition, a number of special state funds are used for Medicaid. These funds receive specific revenues –e.g., Healthcare Provider Taxes—which are then matched with federal monies at approximately 50 percent. There are differences in the proportion of federal vs. state monies in the various funds, but the key is that there is a significant federal component to the receipts in the funds. The federal receipts in these special funds are aggregated and added to the federal receipts in the GRF that are received by DHFS.\nFederal Transportation: If Agency is 494 and considered Federal Revenue, then it is recoded to its own category of “Federal Transportation”.\nFederal revenue broken down into Transportation, Medicaid, and Other:\n\n\nCode\nrev_temp &lt;- rev_temp %&gt;% \n  mutate(\n    rev_type = ifelse(rev_type==\"57\" & agency==\"478\" & (source==\"0618\"|source==\"2364\"|source==\"0660\"|source==\"1552\"| source==\"2306\"| source==\"2076\"|source==\"0676\"|source==\"0692\"), \"58\", rev_type),\n    rev_type_name = ifelse(rev_type==\"58\", \"Federal Medicaid Reimbursements\", rev_type_name),\n    rev_type = ifelse(rev_type==\"57\" & agency==\"494\", \"59\", rev_type),\n    rev_type_name = ifelse(rev_type==\"59\", \"Federal Transportation\", rev_type_name),\n    rev_type_name = ifelse(rev_type==\"57\", \"Federal - Other\", rev_type_name),\n    rev_type = ifelse(rev_type==\"6\", \"06\", rev_type),\n    rev_type = ifelse(rev_type==\"9\", \"09\", rev_type)) \n\nrev_temp %&gt;% \n  filter(rev_type == \"58\" | rev_type == \"59\" | rev_type == \"57\") %&gt;% \n  group_by(fy, rev_type, rev_type_name) %&gt;% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000) %&gt;% \n  ggplot(aes(x=fy, y=receipts,color=rev_type_name)) +\n    geom_recessions(xformay = \"numeric\",text = FALSE)+\n\n  geom_line(aes(x=fy, y=receipts,color=rev_type_name)) +\n      theme_classic() +\n  scale_y_continuous(labels = comma)+\n  labs(title = \"Federal to State Transfers\", \n       caption = \"These values include stimulus funds after the Great Recession and the COVID pandemic response.\",\n       y = \"Millions of Dollars\", x = \"\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  )\n\n\n\n\n\n\n\n\n\nCode\nrev_temp %&gt;% \n  filter(rev_type == \"58\" | rev_type == \"59\" | rev_type == \"57\") %&gt;% \n  filter(source_name_AWM != \"FEDERAL STIMULUS PACKAGE\" & source_name_AWM != \"STATE CURE\") %&gt;%\n  group_by(fy, rev_type, rev_type_name) %&gt;% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000) %&gt;% \n  ggplot() +\n  geom_line(aes(x=fy, y=receipts,color=rev_type_name)) +\n      theme_classic() +\n  scale_y_continuous(labels = comma)+\n  labs(title = \"Federal to State Transfers\", \n       caption = \"These values include stimulus funds after the Great Recession and the COVID pandemic response.\",\n       y = \"Millions of Dollars\", x = \"\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  )\n\n\n\n\n\n\n\n\n\n\nAll federal revenue summed together:\n\n\nCode\nfedrev&lt;- rev_temp %&gt;% \n  filter(rev_type == \"58\" | rev_type == \"59\" | rev_type == \"57\") \n\nfedrev %&gt;% \n  group_by(fy) %&gt;% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000) %&gt;% \n  ggplot() +\n  geom_line(aes(x=fy, y=receipts)) +\n      theme_classic() +\n  scale_y_continuous(labels = comma)+\n  labs(title = \"All Federal Revenue\", \n       y = \"Millions of Dollars\", x = \"\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  )+\n    scale_y_continuous(limits = c(0,45000))\n\n\n\n\n\n\n\n\n\n\n\nCode\nfedrev %&gt;% \n  filter(source_name_AWM != \"FEDERAL STIMULUS PACKAGE\") %&gt;%\n  group_by(fy) %&gt;% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000) %&gt;% \n  ggplot() +\n  geom_line(aes(x=fy, y=receipts)) +\n      theme_classic() +\n  scale_y_continuous(labels = comma)+\n  labs(title = \"All Federal EXCEPT Federal Stimulus Package\", \n       y = \"Millions of Dollars\", x = \"\",\n       caption = \"Note: Dropping Federal Stimulus Package revenue only removes the $3.5 billion from FY20, $0.3 billion from FY21, and \n       $8.5 billion from FY22. There is still over $12 billion more in Federal Revenue compared to FY19.\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  ) +\n  scale_y_continuous(limits = c(0,45000))",
    "crumbs": [
      "About",
      "Illinois State Budget Data",
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Federal Revenue</span>"
    ]
  },
  {
    "objectID": "LocalTransfers.html",
    "href": "LocalTransfers.html",
    "title": "4  Local Transfers",
    "section": "",
    "text": "4.1 By Revenue Type\nCode\nrev_temp  %&gt;% \n  filter(rev_type == \"03\" | rev_type == \"02\") %&gt;%\n  group_by(fy, source, source_name_AWM) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + # aes(x=fy, y=receipts/1000, group = source))+\n     # geom_recessions(text = FALSE)+\n  geom_line(aes(x=fy, y=receipts/1000000000, color = source_name_AWM)) + \n  #geom_text(data = annotation, aes(x=x, y=y, label=label)) +\n  theme_classic() +\n  scale_x_continuous(expand = c(0,0)) +\n  scale_y_continuous(labels = comma) +\n # scale_linetype_manual(values = c(\"dotted\", \"dashed\", \"solid\")) +\n  # theme(legend.position = \"none\") +\n  labs(title = \"All Income Tax by Revenue Source\", \n       subtitle = \"Income Taxes include money transfered straight to local governments and funds saved for tax refunds.\",\n       y = \"Billions of Nominal Dollars\")\nCode\nrev_temp  %&gt;% \n  filter(rev_type == \"03\" | rev_type == \"02\" | rev_type == \"06\") %&gt;%\n  filter(str_detect(source_name_AWM, \"PPRT\") | str_detect(fund_name_ab, \"REPLACE\") | str_detect(fund_name_ab, \"DISTRIBU\") )  %&gt;%\n  group_by(fy, source, source_name_AWM) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + \n  geom_line(aes(x=fy, y=receipts/1000000000, color = source_name_AWM)) + \n  #geom_text(data = annotation, aes(x=x, y=y, label=label)) +\n  theme_classic() +\n  scale_x_continuous(expand = c(0,0)) +\n  scale_y_continuous(labels = comma) +\n  labs(title = \"Tax Revenue by Revenue Source - For Local Transfers\", \n       subtitle = \"Tax Revenue collected by the State that is transfered straight to local governments\",\n       y = \"Billions of Nominal Dollars\") \n\n\n\n\n\n\n\n\n\nCode\nrev_temp  %&gt;% \n  filter(rev_type == \"03\" | rev_type == \"02\" | rev_type == \"06\") %&gt;%\n  filter(str_detect(source_name_AWM, \"PPRT\") | str_detect(fund_name_ab, \"REFUND\") ) %&gt;%\n  group_by(fy, source, source_name_AWM) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + \n  geom_line(aes(x=fy, y=receipts/1000000000, color = source_name_AWM)) + \n  theme_classic() +\n  scale_x_continuous(expand = c(0,0)) +\n  scale_y_continuous(labels = comma) +\n  labs(title = \"Tax Revenue Collected by State for Local Transfers\", \n       subtitle = \"Source contains PPRT or Refund in name\",\n       y = \"Billions of Nominal Dollars\")\nCode\nrev_temp  %&gt;% \n  filter(#rev_type == \"03\" | \n         #  rev_type == \"02\" | \n           rev_type == \"06\") %&gt;%\n  filter(!str_detect(source_name_AWM, \"PPRT\") & !str_detect(fund_name_ab, \"REFUND\")) %&gt;%\n\n  group_by(fy, source, source_name_AWM) %&gt;% \n  summarize(receipts = sum(receipts)) %&gt;%\n  ggplot() + # aes(x=fy, y=receipts/1000, group = source))+\n     # geom_recessions(text = FALSE)+\n  geom_line(aes(x=fy, y=receipts/1000000000, color = source_name_AWM)) + \n  #geom_text(data = annotation, aes(x=x, y=y, label=label)) +\n  theme_classic() +\n  scale_x_continuous(expand = c(0,0)) +\n  scale_y_continuous(labels = comma) +\n scale_linetype_manual(values = c(\"dotted\", \"dashed\", \"solid\")) +\n  theme(legend.position = \"none\") +\n  labs(title = \"What the State Actually Gets to Keep\", \n       subtitle = \"Tax Revenue collected by the State - (refund fund $ & Local Transfers)\",\n       y = \"Billions of Nominal Dollars\")",
    "crumbs": [
      "About",
      "Illinois State Budget Data",
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Local Transfers</span>"
    ]
  },
  {
    "objectID": "Medicaid.html",
    "href": "Medicaid.html",
    "title": "5  Medicaid",
    "section": "",
    "text": "5.1 Federal Medicaid Reimbursements and Medicaid Costs\nCode\nmedicaid_cost &lt;- exp_temp %&gt;% \n  filter(agency==\"478\" & (appr_org==\"01\" | appr_org == \"65\" | appr_org==\"88\") & (object==\"4900\" | object==\"4400\")) %&gt;% \n  group_by(fy) %&gt;% \n  summarize(sum=sum(expenditure))\n\nmed_reimburse &lt;- rev_temp %&gt;% \n  filter(rev_type==\"57\" & agency==\"478\" & (source==\"0618\"|source==\"2364\"|source==\"0660\"|source==\"1552\"| source==\"2306\"| source==\"2076\"|source==\"0676\"|source==\"0692\")) %&gt;% \n  group_by(fy) %&gt;% \n  summarize(sum=sum(receipts))\n\n\n\nggplot()+\n  geom_line(data=medicaid_cost, aes(x=fy, y=sum), color = \"red\") + \n  geom_line(data=med_reimburse, aes(x=fy, y = sum), color=\"black\") + \n  labs(title = \"Medicaid reimbursements and Medicaid expenditures\", \n       caption = \"Medicaid expenditures include funds provided to medical providers. \")\nMedicaid.That portion of the Healthcare and Family Services (or Public Aid in earlier years, agency code 478) budget for Medical (appr_organization code 65) for awards and grants (object codes 4400 and 4900).\nFederal Medical Assistance Program (FMAP): in 1965. The FMAP formula compares the state per-capita income to the national per-capita income. There is no cap on the dollar amount that the federal government pays, so the more that a state spends the more that it receives. a maximum of 83%. States with a higher per-capita income receive lower FMAP funding but no less than 50%, and the states that have a lower per-capita income receive higher FMAP funding. Those that need more, get more.",
    "crumbs": [
      "About",
      "Illinois State Budget Data",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Medicaid</span>"
    ]
  },
  {
    "objectID": "Medicaid.html#federal-medicaid-reimbursements-and-medicaid-costs",
    "href": "Medicaid.html#federal-medicaid-reimbursements-and-medicaid-costs",
    "title": "5  Medicaid",
    "section": "",
    "text": "State CURE revenue will remain in the Medicaid category due to the nature of it being federal funds providing public health services and funding to locations that provide public services.\n\n\nUses same appropriation name of “HEALTHCARE PROVIDER RELIEF” and fund == 0793 and obj_seq_type == 49000000. So can defend the “mistake” of including healthcare provider relief as Medicaid expenditure.",
    "crumbs": [
      "About",
      "Illinois State Budget Data",
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Medicaid</span>"
    ]
  },
  {
    "objectID": "Debt.html",
    "href": "Debt.html",
    "title": "6  Debt Service Discussion",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(formatR)\nlibrary(lubridate)\nlibrary(smooth)\nlibrary(forecast)\nlibrary(scales)\nlibrary(kableExtra)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(quantmod)\nlibrary(geofacet)\nlibrary(janitor)\n\ntheme_set(theme_classic())\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)\n\nexp_temp &lt;- read_csv(\"./data/exp_temp.csv\") %&gt;% \n  filter(agency != \"799\") \n\nrev_temp &lt;- read_csv(\"./data/rev_temp.csv\") %&gt;% \n  filter(agency != \"799\")\n\n\nDebt Service expenditures include interest payment on both short-term and long-term debt. We do not include escrow or principal payments. Bond proceeds are not considered a revenue for the state.\nMethodological Change, Sept. 30 2022: We are no longer including short term principal payments as a cost; only interest on borrowing is a cost. Pre FY22 and the FY21 correction, we did include an escrow payment and principle payments as costs but not bond proceeds as revenues. This caused expenditures to be inflated because we were essentially counting debt twice - the principle payment and whatever the money was spent on in other expenditure categories, which was incorrect.\n\n6.0.1 Coding Details\nExpenditure Debt Objects:\n\n8811 is for principle payments EXCLUDE\n\nGeneral principle payments: obj_seq_type == 88110008\nShort term borrowing principle: obj_seq_type == 88110108\n\n8813 interest payments INCLUDE AS COST\n\nGeneral Obligation Bond Interest: obj_seq_type == 88130000 & 88130008\nInterest on short-term borrowing: 88130108\n\n8841 is for escrow payments EXCLUDE\n\nEscrow payment: obj_seq_type == 88410008\n\n8800 is for all capital projects debt service (e.g. Build Illinois Bonds, Civic Center) INCLUDE AS COST\n\nNote: debt principle and interest are both included in capital projects because they are combined in the data observations; bond proceeds are not considered a revenue source. Can’t include capital projects interest as easily as the GO bonds.\nBuild IL Bonds, capital projects principal AND interest (object ==8800)\n\nTollway fund 0455 EXCLUDE in debt cost\n\nEither filter out Tollway obj_seq_type == 88000055 or filter out fund == 0455 to remove tollway fund items from capital project debt service\n\n\n\n6.0.1.1 State Principal and Interest\nFiltering for interest on short term borrowing and GO bonds (88130008, 88130000, and 88130108) and GO bond principal amounts (88110008). Object == 8813 is for all debt service interest but obj_seq_type is used to specify short term borrowing versus regular debt service. An Interest to Principal ratio is also calculated in the table below.\nLooking only at general obligation principal payments and interest payments:\n\n\nCode\n# GO bond principal and GO bond interest\n\nGObond_debt &lt;- exp_temp %&gt;% \n  filter(obj_seq_type == \"88110008\" |obj_seq_type == \"88130000\" | obj_seq_type == \"88130008\") %&gt;% \n  group_by(fy, obj_seq_type) %&gt;% \n  summarize(sum = sum(expenditure, na.rm=FALSE)) %&gt;% \n  pivot_wider(names_from = obj_seq_type, values_from = sum) %&gt;% \n  mutate(principal = `88110008`,\n         interest = sum(`88130008`+`88130000`, na.rm = FALSE),\n         ratio = (as.numeric(interest)/as.numeric(principal)))\n\nGObond_debt %&gt;% \n  select(principal, interest, ratio) %&gt;%\n  mutate(across(principal:interest, ~format(., big.mark= \",\", scientific = F)))\n\n\n\n  \n\n\n\nCode\n# GObond_debt %&gt;% ggplot() + \n#   geom_line(aes(x=fy, y=principal, color = \"Principal\"))+ \n#   geom_line(aes(x=fy, y=interest, color = \"Interest\")) + \n#   labs(title = \"General Obligation principal and interest payments\")\n\n\n\nGObond_debt %&gt;% \n  ggplot() +   \n    geom_col(aes(x=fy, y=interest/1000000, fill = \"Interest\")) + \n    geom_col(aes(x=fy, y=principal/1000000, fill = \"Principal\"))+ \n    labs(title = \"Debt Service\", \n         subtitle = \"General Obligation Principal and Interest Payments\")\n\n\n\n\n\n\n\n\n\nLooking only at short term borrowing principal and interest payments:\n\n\nCode\n# short term borrowing, first observation is in 2004?\n\nshort_debt &lt;- exp_temp %&gt;% \n  filter(obj_seq_type == 88110108 |obj_seq_type == 88130108) %&gt;% \n  group_by(fy, obj_seq_type) %&gt;% \n  summarize(sum = sum(expenditure, na.rm=FALSE)) %&gt;% \n  pivot_wider(names_from = obj_seq_type, values_from = sum) %&gt;% \n  mutate(principal = `88110108`,\n         interest = `88130108`,\n         ratio = (as.numeric(interest)/as.numeric(principal)))\n\nshort_debt %&gt;% select(principal, interest, ratio) %&gt;%\n  mutate(across(principal:interest, ~format(., big.mark= \",\",  scientific = F)))\n\n\n\n  \n\n\n\nCode\nshort_debt %&gt;% ggplot() + \n  geom_col(aes(x=fy, y=principal/1000000000, fill = \"Principal\"))+ \n  geom_col(aes(x=fy, y=interest/1000000000, fill = \"Interest\")) + \n  labs(title = \"Debt Service\", subtitle = \"Short Term Borrowing: Principal and Interest Payments\", y=\"Billions of Dollars\")\n\n\n\n\n\n\n\n\n\n\nWhen including short term borrowing and normal debt service together, the debt ratio seems more c anonsistent d the total interest and principal payments over the years are smoothed out.\n\nDebt service for Capital projects (object==8800) is examined below. Tollway debt service is EXCLUDED from these values. The ratio calculated in the table below is interest/principal.\n\n\nCode\ncapitalprojects &lt;- exp_temp %&gt;% \n  filter(object == \"8800\" & fund != \"0455\") # capital debt service except tollway\n\nall_debt &lt;- exp_temp %&gt;%     # all principal, interest, and debt service except Tollway\n  filter(fund != \"0455\" & (object == \"8811\" |object == \"8813\" | object == \"8800\") )%&gt;% \n  group_by(fy, object) %&gt;% \n  summarize(sum = sum(expenditure, na.rm=TRUE)) %&gt;% \n  pivot_wider(names_from = object, values_from = sum) %&gt;% \n  mutate(principal = `8811`,\n         interest = `8813`,\n         CapitalProjects = `8800`,\n         ratio = (as.numeric(interest)/as.numeric(principal)))\n\nall_debt %&gt;% \n  select(principal, interest, CapitalProjects, ratio) %&gt;%\n  mutate(across(principal:CapitalProjects, ~format(., big.mark= \",\", scientific = F)))\n\n\n\n  \n\n\n\nCode\nall_debt %&gt;% \n  ggplot() + \n  theme_classic() +\n    geom_line(aes(x=fy, y=principal/1000000, color = \"Principal\"))+ \n    geom_line(aes(x=fy, y=interest/1000000, color = \"Interest\"))+\n    geom_line(aes(x=fy, y = CapitalProjects / 1000000, color = \"Capital Projects\"))+\n    labs(y = \"Debt ($Millions)\",\n         title = \"Illinois Principal and Interest payments\", \n         subtitle = \"Principal and interest from short term borrowing and GO Bonds debt service\", \n         caption = \"Capital projects does not include Illinois tollway debt service.\n         Capital projects data include interest and principal values as one value and is graphed separately.\")\n\n\n\n\n\n\n\n\n\n\n\n6.0.1.2 \nFor additional context on bond proceeds coming in compared to the debt service being paid, here is a very simple graph of all bond proceeds. Bond proceeds are not considered a revenue source in the Fiscal Futures model. We do not dive into the different types of proceeds but that could be an interesting topic by itself.\n\n\nCode\nrev_temp %&gt;% \n  filter(rev_type == \"72\")\n\n\n\n  \n\n\n\nCode\nbond_proceeds &lt;- rev_temp %&gt;% \n  filter(rev_type == \"72\") %&gt;% #bond proceeds\n#  filter(agency == \"370\" & source == \"0571\") %&gt;%     \n  group_by(fy, fund_cat_name) %&gt;% \n  summarize(sum = sum(receipts/1000000000, na.rm=FALSE))\n\nrev_temp %&gt;% filter(rev_type == \"72\") %&gt;% ggplot() + geom_col(aes(x=fy, y=receipts)) + labs(title = \"All Bond Proceeds\") + theme_classic()\n\n\n\n\n\n\n\n\n\nCode\nbond_proceeds %&gt;% ggplot() + \n theme_classic() +\n  geom_line(aes(x=fy, y=sum, color=fund_cat_name)) + \n  labs(title = \"Bond Proceeds, Revenue Type = 72\", y=\"Billions of Dollars\")\n\n\n\n\n\n\n\n\n\n\n\n6.0.1.3 Tollway Debt, Revenue, and Expenditures\nA note on what is considered Transportation vs. Tollway vs. Capital Projects:\n\nTransportation costs is made up of the road fund (0011) , capital administrative costs, and maintenance costs for the agency=494, Department of Transportation.\nTollway expenditures include maintenance and operation, principle and interest payments occurring from fund 0455 and agency = 577.\nCapital improvement has a lot of projects that use bond financed funds for schools, sports facilities, etc. Agencies 511, 554, 574, and 598 are coded together as group 946, capital improvement (Capital Development Board, Sports Facilities Development Authority, Metro Pier and Exposition Authority, and Upper River Development Authority which is no longer used). IOC uses object 8800.\n\nCoding Notes: Filtering by Tollway agency 577 expenditures = SAME as filtering by fund == 0455 expenditures\n\nTotal Tollway expenditure = Debt service costs + maintenance & operation costs\n\nPrincipal and interest amounts calculated for the state exclude the Illinois Tollway debt service and debt service for capital projects (mostly because principal and interest are included as one item in the data). Examples of capital projects include the IL Civic Center and Build Illinois Bonds. Tollway principal and interest IS included in the Illinois Tollway expenditures.\nThe object tollway includes all Tollway expenditures (capital improvements, principal and interest payments, operations, etc).\n\n\nCode\n# exp_temp %&gt;% \n#   filter(fund == \"0455\") %&gt;%       # tollway fund\n#   group_by(fy) %&gt;% \n#   summarize(sum = sum(expenditure)) %&gt;% \n#   arrange(-fy)\n\nalltollway_exp &lt;- exp_temp %&gt;% \n  filter(fund == \"0455\") %&gt;% # all tollway expenditures, including debt service\n  group_by(fy) %&gt;% \n  summarize(expenditure = sum(expenditure))\nalltollway_exp\n\n\n\n  \n\n\n\nCode\ntollway_exp &lt;- exp_temp %&gt;% #expenditures without debt service\n  filter(fund == \"0455\" & object != \"8800\") %&gt;% \n  group_by(fy) %&gt;% \n  summarize(expenditure = sum(expenditure))\n\n#tollway debt principal and interest\ntollwaydebt &lt;- exp_temp %&gt;%\n  filter(object == \"8800\" & fund == \"0455\") %&gt;% \n  group_by(fy) %&gt;% \n  summarize(sum=sum(expenditure)) \n\n\ncapitalproject_debtservice &lt;- exp_temp %&gt;%\n  filter(object == \"8800\") # ALL Capital projects debt service including tollway\n\n# look at Illinois tollway bond proceeds and debt service: \n# rev_temp %&gt;% filter(fund == \"0455\") # examine revenue to fund 0455\n\n\nalltollway_rev &lt;- rev_temp %&gt;% \n  filter(fund == \"0455\") %&gt;%  # includes bond proceeds\n  group_by(fy) %&gt;% \n  summarize(sum = sum(receipts)) %&gt;% \n  arrange(-fy)\n\ntollway_rev &lt;- rev_temp %&gt;% #tollway revenue without bond proceeds\n  filter(fund == \"0455\" & source != \"0571\") %&gt;% \n  group_by(fy) %&gt;% \n  summarize(sum = sum(receipts, na.rm = TRUE))\n\n\n\n# tollway bond proceeds\ntollway_bondproc &lt;- rev_temp %&gt;% \n  filter(fund == \"0455\" & source == \"0571\" ) %&gt;% \n  group_by(fy) %&gt;% \n  summarize(sum = sum(receipts, na.rm = TRUE))\n\n#alltollway %&gt;%  ggplot() + geom_line(aes(x=fy, y=sum)) + labs(title = \"Fund 0455 - All Tollway Revenue\", caption = \"Data from IOC Revenue Files. Fund 0455 is the IL State Tollway Revenue\") \n\n#tollway_bondproc %&gt;% ggplot() + geom_line(aes(x=fy, y=sum)) + labs(title = \"Fund 0455 - Tollway Revenue: Tollway Bond Proceeds\", caption = \"Data from IOC Revenue Files. Fund 0455 is the IL State Tollway Revenue\")\n\n  \n\n#ggplot() + geom_line(data=tollway_bondproc, aes(x=fy, y=sum)) + labs(title = \"Fund 0455 - Tollway Revenue: Tollway Bond Proceeds\", caption = \"Data from IOC Revenue Files. Fund 0455 is the IL State Tollway Revenue\")\n\n#tollwaydebt %&gt;% ggplot() + geom_line(aes(x=fy, y=sum)) + labs(title = \"Tollway Debt Service\", caption = \"Debt service includes principal and interest for the Illinois Tollway. Object = 8800 and fund = 0455\")\n\n\n\n\n## Tollway agency 577 expenditures = SAME as filtering by tollway fund == 0455 ##\n\n# tollway&lt;-exp_temp %&gt;% filter(agency == \"557\")\n\n# exp_temp %&gt;% filter(agency == \"557\") %&gt;% group_by(fy) %&gt;% summarize(sum = sum(expenditure)) %&gt;% arrange(-fy)\n\n\n\nggplot()+\n    theme_classic() +\n\n  geom_col(data=tollway_bondproc, aes(x=fy, y=sum)) +\n  geom_line(data= tollwaydebt, aes(x=fy, y = sum, color = 'Debt Service'))+ \n  geom_line(data= tollway_exp, aes(x=fy, y = expenditure, color = 'Tollway Expenditures'))+ \n  geom_line(data= tollway_rev, aes(x=fy, y = sum, color = \"Tollway Revenue\"))+ \n  scale_color_manual(values = c(\n    'Bond Proceeds' = 'darkgray',\n    'Debt Service' = 'red',\n    'Tollway Expenditures' = 'orange',\n    'Tollway Revenue' = 'light green')) +\n  labs(title=\"Tollway bond procreeds, debt service, revenue, and expenditures.\", \n       caption = \"Tollway revenue + bond proceeds should be roughly equal to tollway expenditures + debt service.\", \n       y = \"Dollars\")\n\n\n\n\n\n\n\n\n\nCode\nggplot()+\n  theme_classic() +\n  geom_line(data=alltollway_exp, aes(x=fy, y=expenditure/1000000000, color = \"All Tollway Revenue\")) +\n  geom_line(data= alltollway_rev, aes(x=fy, y = sum/1000000000, color = 'All Tollway Expenditures'))+ \n  scale_color_manual(values = c(\n    'All Tollway Revenue' = 'darkgray',\n    'All Tollway Expenditures' = 'red')) +\n  theme(legend.position = \"bottom\")+\n  labs(title=\" All revenues (Tolls + bond proceeds) and all expenditures (operations, capital improvements, & debt service.)\", \n       caption = \"Tollway revenue + bond proceeds should be \n       roughly equal to tollway expenditures + debt service.\n       Capital improvements and the cost of principal payments\n       may be double counting those costs.\n       (The cost of the project and then the cost of debt service).\", \n       y = \"Billions of Dollars\")\n\n\n\n\n\n\n\n\n\n\n\n6.0.1.4 \n\n\nCode\nall_debt %&gt;%  # all debt does NOT include the tollway expenditures\n  ggplot() + \n    theme_classic() +\n\n    geom_line(aes(x=fy, y=principal/1000000, color = \"Principal\"))+ \n    geom_line(aes(x=fy, y=interest/1000000, color = \"Interest\"))+\n    geom_line(aes(x=fy, y = CapitalProjects / 1000000, color = \"Capital Projects Debt Service\"))+\n    geom_line(data = tollwaydebt, aes( x=fy, y=sum/1000000, color = \"Tollway Debt Service\"))+\n  theme(legend.position = \"bottom\") +\n    labs(y = \"Debt ($Millions)\", title = \"Short term borrowing and GO Bonds\",\n         subtitle = \"Principal and Interest payments\", \n         caption = \"Capital projects (object 8800) does not include Illinois tollway debt service (fund 0455).\n         Tollway debt service is graphed separately.\n         \") \n\n\n\n\n\n\n\n\n\nCode\nall_debt %&gt;% \n  ggplot() + \n    theme_classic() +\n\n    geom_line(aes(x=fy, y=(principal+interest+CapitalProjects)/1000000, color = \"All Principal & Interest\"))+ \n    #geom_line(aes(x=fy, y=interest/1000000, color = \"Interest\"))+\n  #  geom_line(aes(x=fy, y = CapitalProjects / 1000000, color = \"Capital Projects Debt Service\"))+\n    geom_line(data = tollwaydebt, aes( x=fy, y=sum/1000000, color = \"Tollway Debt Service\"))+\n    theme(legend.position = \"bottom\") +\n    labs(y = \"Debt ($Millions)\", title = \"Illinois Debt Service Expenditure\",\n         subtitle = \"All Principal and Interest payments\", caption = \"All principal and interest includes short-term borrowing, GO bonds, and capital projects debt service \n         EXCEPT the Illinois Tollway debt service. Illinois tollway debt service is graphed separately.\")",
    "crumbs": [
      "About",
      "Illinois State Budget Data",
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Debt Service Discussion</span>"
    ]
  },
  {
    "objectID": "Pensions.html",
    "href": "Pensions.html",
    "title": "7  Pensions",
    "section": "",
    "text": "7.0.1 Data coding details",
    "crumbs": [
      "About",
      "Illinois State Budget Data",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Pensions</span>"
    ]
  },
  {
    "objectID": "Pensions.html#footnotes",
    "href": "Pensions.html#footnotes",
    "title": "7  Pensions",
    "section": "",
    "text": "Brown, Jeffrey R. & Richard F. Dye. 2015. “Illinois Pensions in a Fiscal Context: A (Basket) Case Study” NBER Working Paper Series. http://www.nber.org/papers/w21293.↩︎",
    "crumbs": [
      "About",
      "Illinois State Budget Data",
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Pensions</span>"
    ]
  },
  {
    "objectID": "Healthcare.html",
    "href": "Healthcare.html",
    "title": "8  State Employee Healthcare Discussion",
    "section": "",
    "text": "State Employee Health Care = Sum of expenditures for “health care coverage as elected by members per state employees group insurance act.” The payments are made from the Health Insurance Reserve Fund. Employee contributions are not considered a revenue source or an expenditure in our analysis.\nFunding for the State Employees Group Insurance plan originates from two funds. The Health Insurance Reserve Fund (HIRF) and the Group Insurance Premium Fund (GIPF). Contributions and payment for Health coverage benefits are deposited INTO HIRF and contributions for life insurance are deposited into the GIPF.\nHIRF is the fund mainly used to administer the group insurance program. Funding for HIRF comes from several different revenue sources: the General Revenue Fund (GRF), Road Fund, reimbursements, university funds, and misc funds. Source: CGFA Report.\n\n8.0.1 Coding details\nIn FY2013, the Local Government Health Insurance fund was transferred to the department of Central Management Services (agency changes from 478 to 416 in data.)\nEmployer group insurance contributions for health insurance are excluded to avoid double counting the cost of healthcare provision. All employer group insurance contributions are coded as object = 1180. BUT the last two fiscal years (FY21 and FY22) were coded as 1900 instead of 1180 for lump sums instead of employer contributions. This caused an ~$2 billion miscalculation when writing the FY21 paper that was caught before publishing.\n\nFund = 0907 = Health Insurance Reserve Fund, in_ff = 1\nFund = 0457 is “Group Insurance Premium Fund”, in_ff = 1\nFund = 0193 is “Local govt health insurance reserve”, in=ff = 0\nfund = 0477 is “Community College Health Insurance”, in=ff = 0.\n\nhad large amount in early years\n\nFund = 9939 is “group self-insurers’ insolv”, in_ff = 1\nFund = 0940 is Self-Insurers security, in_ff = 0\nFund = 0739 is Group Workers Comp Pool Insol, in_ff = 1\n\neehc = 0 means it is NOT a state healthcare cost but it is an employer contribution of some type to some fund\neehc = 1 means it is a state employee healthcare cost and it is an employer contribution to health insurance\n\n\nIf observation is a group insurance contribution, then the expenditure amount is set to $0 (essentially dropped from analysis).\n\n\nCode\nexp_temp &lt;- read_csv(\"./data/exp_temp.csv\")\nrev_temp &lt;- read_csv(\"./data/rev_temp.csv\")\n\n\nhealth_ins_reserve &lt;- exp_temp %&gt;% \n  filter(fund == \"0907\") %&gt;%  \n  group_by(fy) %&gt;% \n  summarize(fund_0907 = sum(expenditure)) \n\nhealth_ins_reserve %&gt;% \n  ggplot(aes(x=fy, y=fund_0907)) + \n  geom_col() + \n  labs(title=\"Health Insurance Reserve\", subtitle = \"Sum of expenditures from fund 907\")\n\n\n\n\n\n\n\n\n\nCode\n# object 1180 is inconsistently coded over time form the IOC \n\n# object 1180 should be employer contributions to healthcare group insurance\n\nemployer_contributions &lt;- exp_temp %&gt;% \n  filter(object == \"1180\") %&gt;% \n  group_by(fy) %&gt;% \n  summarize(object1180 = sum(expenditure)) \n\nemployer_contributions%&gt;% \n  ggplot(aes(x=fy, y=object1180)) + \n  geom_col() + \n  labs(title=\"Employer Contributions to Healthcare Group Insurance, IOC Object 1180\")\n\n\n\n\n\n\n\n\n\nCode\nemployer_contributions2 &lt;- exp_temp %&gt;% \n  filter(object == \"1180\" & fund==\"0001\") %&gt;% \n  group_by(fy) %&gt;% \n  summarize(object1180 = sum(expenditure)) \n\nemployer_contributions2 %&gt;% \n  ggplot(aes(x=fy, y=object1180)) + \n  geom_col() + \n  labs(title=\"Employer Contributions to Healthcare Group Insurance\", \n       subtitle = \"IOC Object 1180 from Fund 001\")\n\n\n\n\n\n\n\n\n\nCode\n# examine combined group insurance totals per year\n\ngroup_ins2 &lt;- exp_temp %&gt;% \n  mutate(eehc = ifelse(\n    # group insurance contributions for 1998-2005 and 2013-present\n    # CMS took over health insurance in 2013\n   fund == \"0001\" & (object == \"1180\" | object ==\"1900\") & agency == \"416\" & appr_org==\"20\", 1, 0) )%&gt;% \n  mutate(eehc = ifelse(\n    # group insurance contributions for 2006-2012\n    # health insurance was in healthcare and family services, agency 478 for a few years\n    fund == \"0001\" & object == \"1180\" & agency == \"478\" & appr_org==\"80\", 1, eehc) )%&gt;%\n  filter(eehc == 1) %&gt;% \n    group_by(fy) %&gt;% \n    summarize(dropped_group_premiums = sum(expenditure, na.rm=TRUE))\n\ngroup_ins2 %&gt;% ggplot(aes(x=fy, y=dropped_group_premiums)) + \n  geom_col() + \n  labs(title=\"Employer Healthcare Group Insurance Contributions\", \n       subtitle= \" - Dropped from analysis to avoid double counting healthcare expenditures\", \n       caption = \"Objects 1180 and 1900 from fund 0001. See code for additional coding details.\")\n\n\n\n\n\n\n\n\n\n\n\n8.0.2 Health Insurance Premiums - Revenue Side\nEmployee insurance premiums for healthcare are a revenue source for the state in the IOC data but are NOT included in the Fiscal Futures analysis as a revenue or in fiscal gap calculations.\nSource #’s:\n\n0120 = ins prem-option life\n0120 = ins prem-optional life/univ\n0347 = optional health - HMO\n0348 = optional health - dental\n0349 = optional health - univ/local SI\n0350 = optional health - univ/local\n0351 = optional health - retirement\n0352 = optional health - retirement SI\n0353 = optional health - retire/dental\n0354 = optional health - retirement hmo\n2199-2209 = various HMOs, dental, health plans from Health Insurance Reserve (fund)\n\n\n\nCode\nhealth_insurance_fund_rev&lt;- rev_temp %&gt;% \n  filter(fund==\"0907\") %&gt;% # everything that goes to fund 0907\n    group_by(fy) %&gt;%\n  summarize(health_ins_rev = sum(receipts)) \n\n\nhealth_insurance_fund_rev %&gt;% \n  ggplot(aes(x=fy, y = health_ins_rev)) + \n  geom_col() + labs( title = \"Health insurance fund - All revenue, Fund 0907\")\n\n\n\n\n\n\n\n\n\nCode\n#Old Stata step: collect optional insurance premiums to fund 0907 for use in eehc expenditure  \nemployee_health_premiums &lt;- rev_temp %&gt;% \n  mutate(employee_premiums = ifelse(\n    fund==\"0907\" & (source==\"0120\"| source==\"0121\"| (source&gt;\"0345\" & source&lt;\"0357\")|(source&gt;\"2199\" & source&lt;\"2209\")), 1, 0)) %&gt;%\n  filter(employee_premiums == 1)\n\n# optional insurance premiums (a term from old Stata Code) = employee insurance premiums\nemp_premium &lt;- employee_health_premiums %&gt;%\n  group_by(fy) %&gt;%\n  summarize(employee_premiums_sum = sum(receipts))\n\n  \n\nemp_premium %&gt;% \n  ggplot(aes(x=fy, y = employee_premiums_sum)) + \n  geom_col() + \n  labs( title = \"Employee health insurance premiums\")\n\n\n\n\n\n\n\n\n\n\n\nCode\n# contributions and benefits paid comparison\nggplot()+\n  #  geom_line(data=group_ins, aes(x=fy, y=object1180, color='Group Insurance1')) +\n      geom_line(data=health_insurance_fund_rev, aes(x=fy, y=health_ins_rev, color='Health Insurance Fund - All Revenue')) +\n geom_line(data = emp_premium, aes(x=fy, y = employee_premiums_sum, color = 'Revenue from Employee Premiums')) +\n    geom_line(data=health_ins_reserve, aes(x=fy, y=fund_0907, color='Cost of Provision')) +\n    geom_line(data=employer_contributions, aes(x=fy, y=object1180, color='Group Insurance-Object1180')) +\n\n #   geom_line(data=employer_contributions2, aes(x=fy, y=object1180, color='Employer Contributions-General Fund')) +\n  geom_line(data=group_ins2, aes(x=fy, y=dropped_group_premiums, color='Group Insurance - 1180 & 1900')) +\n\n  #geom_line(data= healthcare_costs, aes(x=fy, y = cost_of_provision, color = 'Healthcare Costs'))+ \nguides(fill=guide_legend(nrow=2,byrow=TRUE))+\n  scale_color_manual(values = c(\n    'Cost of Provision' = 'darkblue',\n    'Health Insurance Fund - All Revenue' = 'light green',\n    'Revenue from Employee Premiums' = 'dark green',\n    'Group Insurance - 1180 & 1900' = 'blue',\n    'Group Insurance-Object1180' = 'light blue'\n   #     'Employer Contributions-General Fund' = 'light blue'\n)) +\n  theme(legend.position=\"bottom\") +\n  labs(title=\"Healthcare costs and group insurance contributions\", \n       caption = \"Healthcare costs and group insurance contributions\", \n       y = \"Dollars\", x = \"\")\n\n\n\n\n\n\n\n\n\nAfter removing a few of those lines, we are left with the overall cost providing healthcare and the total amount of money that flows into the Health Insurance Fund.\n\n\nCode\n# contributions and benefits paid comparison\nggplot()+\n  #  geom_line(data=group_ins, aes(x=fy, y=object1180, color='Group Insurance1')) +\n      geom_line(data=health_insurance_fund_rev, aes(x=fy, y=health_ins_rev, color='Health Insurance Fund - All Revenue')) +\n# geom_line(data = emp_premium, aes(x=fy, y = employee_premiums_sum, color = 'Revenue from Employee Premiums')) +\n    geom_line(data=health_ins_reserve, aes(x=fy, y=fund_0907, color='Cost of Provision')) +\n  #  geom_line(data=employer_contributions, aes(x=fy, y=object1180, color='Group Insurance-Object1180')) +\n #   geom_line(data=employer_contributions2, aes(x=fy, y=object1180, color='Employer Contributions-General Fund')) +\n  #geom_line(data=group_ins2, aes(x=fy, y=dropped_group_premiums, color='Group Insurance - 1180 & 1900')) +\n\n  #geom_line(data= healthcare_costs, aes(x=fy, y = cost_of_provision, color = 'Healthcare Costs'))+ \n\n  scale_color_manual(values = c(\n    'Cost of Provision' = 'darkblue',\n    'Health Insurance Fund - All Revenue' = 'light green'\n  #  'Revenue from Employee Premiums' = 'dark green',\n  #  'Group Insurance - 1180 & 1900' = 'blue',\n  #  'Group Insurance-Object1180' = 'light blue'\n   #     'Employer Contributions-General Fund' = 'light blue'\n)) +\n  theme(legend.position=\"bottom\") +\n  labs(title=\"Healthcare costs and health insurance fund revenue\", \n       caption = \"Healthcare costs and total revenue that flowed into the Health Insurance Fund\", \n       y = \"Dollars\", x = \"\" )",
    "crumbs": [
      "About",
      "Illinois State Budget Data",
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>State Employee Healthcare Discussion</span>"
    ]
  },
  {
    "objectID": "TaxRefunds.html",
    "href": "TaxRefunds.html",
    "title": "9  Tax Refunds",
    "section": "",
    "text": "Code\nlibrary(tidyverse)\nlibrary(haven)\nlibrary(formatR)\nlibrary(lubridate)\nlibrary(smooth)\nlibrary(forecast)\nlibrary(scales)\nlibrary(kableExtra)\nlibrary(ggplot2)\nlibrary(readxl)\nlibrary(tidyverse)\nlibrary(data.table)\nlibrary(quantmod)\nlibrary(geofacet)\nlibrary(janitor)\nlibrary(cmapplot)\n\ntheme_set(theme_classic() )\n\nknitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE\n                      )\n\n\nexp_temp &lt;- read_csv(\"./data/exp_temp.csv\") # %&gt;%\n # mutate(in_ff = if_else( fund %in% c(\"0278\", \"0378\", \"0121\", \"0380\"), 0, in_ff))\n\n\nrev_temp &lt;- read_csv(\"./data/rev_temp.csv\") # %&gt;%  \n # mutate(in_ff = if_else( fund %in% c(\"0278\", \"0378\", \"0121\", \"0380\"), 0, in_ff))\n\n\n\n\nCode\n#\nexp_temp %&gt;% \n  mutate(\n    obj_type = str_sub(obj_seq_type, 1, 1),\n    obj_2dig = str_sub(obj_seq_type, 1, 2),\n    obj_of_exp = str_sub(obj_seq_type, 1, 3),\n    obj_of_exp = str_pad(obj_of_exp, width = 4,  \"right\", pad = \"0\"),\n    obj_expenditure_label = case_when(\n      obj_of_exp == \"9900\" ~ \"9900 - One-Time Rebates\",\n      obj_of_exp == \"9910\" ~ \"9910 - Income Tax Refunds\",\n      obj_of_exp == \"9920\"~ \"9920 - Other Tax Refunds\",\n      obj_of_exp == \"9930\" ~ \"9930 - Other Refunds\",\n      obj_of_exp &gt; 9930 ~ \"9931 & Up - Other Refunds\")\n  )  %&gt;%\n  filter(#fy == 2023 & \n           object &gt;= 9000 #& object &lt;=9930\n         # & agency == 492\n  ) %&gt;% summarize(Refunds = round(sum(expenditure)), .by = c(fy, obj_expenditure_label )) %&gt;% \n  pivot_wider (names_from = \"obj_expenditure_label\", values_from = \"Refunds\") %&gt;% arrange(fy) \n\n\n\n  \n\n\n\n\n\nCode\n# only income tax refund funds from Department of Revenue\nrev_refundfund &lt;- rev_temp %&gt;% \n  filter(agency!= \"799\" & !rev_type %in% c(\"99\", \"98\", \"72\") & fund == \"0278\" & agency == \"492\") %&gt;% \n  reframe(Refund_Rev = sum(receipts), .by = fy)\n\nrev_temp %&gt;% \n  filter(agency!= \"799\" & fund == \"0278\" & !rev_type %in% c(\"99\", \"98\", \"72\")) %&gt;% \n  reframe(Refund_Rev = sum(receipts), .by = c(fy, source_name_AWM)) %&gt;% \n  pivot_wider(names_from = source_name_AWM, values_from = Refund_Rev) %&gt;% kable %&gt;%  kable_classic()\n\n\n\n\n\n\nfy\nINDIVIDUAL\nCORPORATE\nPPRT-PERSON PROP TAX REPLACE\nRETURNED DIRECT DEPOSIT\nFED MONIES - TANF GRANT\nINDIV. INCOME TAX AMNESTY\nCORP INCOME TAX AMNESTY\nHOUSELHOLD PAYROLL\nINDIV. INCOME TAX PASS-THROUGH\n\n\n\n\n1998\n421566027\n266377476\n169994427\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n1999\n552238121\n263094990\n172002247\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n2000\n587397800\n290211287\n194853400\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n2001\n611088673\n243021127\n176778590\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n2002\n614529506\n239817087\n173532249\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n2003\n638346245\n273133862\n205179347\nNA\nNA\nNA\nNA\nNA\nNA\n\n\n2004\n958926988\n369412260\n268839236\nNA\n12824817\n4698258\n113020635\nNA\nNA\n\n\n2005\n893705780\n375940530\n255571025\nNA\n14759942\nNA\nNA\nNA\nNA\n\n\n2006\n932878308\n356863108\n243204046\nNA\n15433946\nNA\nNA\nNA\nNA\n\n\n2007\n1016423894\n371101867\n251761976\nNA\n14050853\nNA\nNA\nNA\nNA\n\n\n2008\n867011988\n341138469\n230362910\nNA\n17653951\nNA\nNA\nNA\nNA\n\n\n2009\n996390877\n362693366\n221138923\nNA\n13680433\nNA\nNA\nNA\nNA\n\n\n2010\n918797544\n288563316\n177207828\nNA\n16211543\nNA\nNA\n610739.8\nNA\n\n\n2011\n1071615996\n347098804\n207941849\nNA\n17309670\n3576057\n78446483\n1213294.6\nNA\n\n\n2012\n1485894471\n522019523\n216585391\nNA\n8595178\nNA\nNA\n1587400.4\nNA\n\n\n2013\n1783431807\n502376164\n206992824\nNA\n19932803\nNA\nNA\n1696879.9\nNA\n\n\n2014\n1743908216\n475720935\n196671293\nNA\n42752461\nNA\nNA\n1599450.9\nNA\n\n\n2015\n1766627219\n438437395\n221559526\nNA\n42660505\nNA\nNA\n1574581.2\nNA\n\n\n2016\n1492960768\n362373284\n206726374\nNA\n51292449\nNA\nNA\n1409327.8\nNA\n\n\n2017\n1670384828\n278491517\n294194456\nNA\n46034182\nNA\nNA\n1644437.1\n51078078\n\n\n2018\n1984177136\n456748940\n275528937\n139003\n68876855\nNA\nNA\n1867117.0\n50877306\n\n\n2019\n2120625068\n469546139\n262156518\n16760499\n89499452\nNA\nNA\n2184740.8\n69758874\n\n\n2020\n1997744181\n370365615\n233987435\n11859145\n83549845\nNA\nNA\n2318111.1\n57469314\n\n\n2021\n2300366675\n625480081\n352721841\n16788643\n100880597\nNA\nNA\n2447866.0\n69069244\n\n\n2022\n2460503163\n1026093146\n745856683\n18990273\n90271974\nNA\nNA\n2858976.0\n232365135\n\n\n2023\n2367855037\n1061582212\n716829413\n46039351\n88401628\nNA\nNA\n3029431.4\n209430318\n\n\n\n\n\n\n\n\nCode\nexp_refundfund &lt;- exp_temp %&gt;% \n  filter(agency!= \"799\" & fund == \"0278\" & agency == \"492\") %&gt;% \n  reframe(Refund_Exp = sum(expenditure), .by = fy)\n\nexp_temp %&gt;% \n  filter(agency!= \"799\" & fund == \"0278\") %&gt;% \n  reframe(Refund_Exp = sum(expenditure), .by = c(fy, sequence, object)) %&gt;%\n  pivot_wider(names_from = sequence, values_from = Refund_Exp) %&gt;% kable %&gt;%  kable_classic()\n\n\n\n\n\n\nfy\nobject\n00\n01\n02\n\n\n\n\n1998\n9910\n513005729\n229098806.1\nNA\n\n\n1999\n9910\n616908650\n277503590.9\nNA\n\n\n2000\n9910\n775422887\n370281598.4\nNA\n\n\n2001\n9910\n840259580\n239387492.6\nNA\n\n\n2002\n9910\n832755690\n211480996.8\nNA\n\n\n2002\n9914\n23310\nNA\nNA\n\n\n2003\n9910\n1245098851\n356982288.3\nNA\n\n\n2004\n9910\n1102106609\n609058270.9\nNA\n\n\n2005\n9910\n1042809475\n367468015.6\nNA\n\n\n2006\n9910\n1097661440\n339088519.8\nNA\n\n\n2007\n9910\n1137658843\n291751793.7\nNA\n\n\n2008\n9910\n1214885081\n180814059.5\nNA\n\n\n2009\n9910\n1365083481\n212704578.7\nNA\n\n\n2009\n1993\n73\nNA\nNA\n\n\n2010\n9910\n1336317406\n8.8\nNA\n\n\n2011\n9910\n1530979396\n21889877.7\nNA\n\n\n2012\n9910\n1367159183\n774357376.3\nNA\n\n\n2013\n9910\n1734346078\n524499829.8\nNA\n\n\n2014\n9910\n1927457499\n528414832.8\nNA\n\n\n2015\n9910\n1919766890\n515803476.1\nNA\n\n\n2016\n9910\n1856414695\n276671666.8\nNA\n\n\n2017\n9910\n1923820315\n358135955.2\nNA\n\n\n2018\n9910\n1916202732\n589884877.1\n139003\n\n\n2019\n9910\n2113826707\n318985893.5\n16554474\n\n\n2020\n9910\n1978586807\n392025302.6\n11721070\n\n\n2021\n9910\n2791580132\n509486255.6\n16478729\n\n\n2022\n9910\n2583749368\n341933370.2\n18830873\n\n\n2023\n9900\n1093890247\nNA\nNA\n\n\n2023\n9910\n3158752297\n381447728.4\n45364248\n\n\n\n\n\n\n\n\nCode\nexp_temp %&gt;% \n  filter(agency!= \"799\" & fund == \"0278\" & object &gt;= 9000) %&gt;% \n  reframe(Refund_Exp = sum(expenditure), .by = c(fy, obj_seq_type)) %&gt;%\n  pivot_wider(names_from = obj_seq_type, values_from = Refund_Exp) %&gt;% kable %&gt;%  kable_classic()\n\n\n\n\n\n\nfy\n99100008\n99100108\n99140008\n99100208\n99000008\n\n\n\n\n1998\n513005729\n229098806.1\nNA\nNA\nNA\n\n\n1999\n616908650\n277503590.9\nNA\nNA\nNA\n\n\n2000\n775422887\n370281598.4\nNA\nNA\nNA\n\n\n2001\n840259580\n239387492.6\nNA\nNA\nNA\n\n\n2002\n832755690\n211480996.8\n23310\nNA\nNA\n\n\n2003\n1245098851\n356982288.3\nNA\nNA\nNA\n\n\n2004\n1102106609\n609058270.9\nNA\nNA\nNA\n\n\n2005\n1042809475\n367468015.6\nNA\nNA\nNA\n\n\n2006\n1097661440\n339088519.8\nNA\nNA\nNA\n\n\n2007\n1137658843\n291751793.7\nNA\nNA\nNA\n\n\n2008\n1214885081\n180814059.5\nNA\nNA\nNA\n\n\n2009\n1365083481\n212704578.7\nNA\nNA\nNA\n\n\n2010\n1336317406\n8.8\nNA\nNA\nNA\n\n\n2011\n1530979396\n21889877.7\nNA\nNA\nNA\n\n\n2012\n1367159183\n774357376.3\nNA\nNA\nNA\n\n\n2013\n1734346078\n524499829.8\nNA\nNA\nNA\n\n\n2014\n1927457499\n528414832.8\nNA\nNA\nNA\n\n\n2015\n1919766890\n515803476.1\nNA\nNA\nNA\n\n\n2016\n1856414695\n276671666.8\nNA\nNA\nNA\n\n\n2017\n1923820315\n358135955.2\nNA\nNA\nNA\n\n\n2018\n1916202732\n589884877.1\nNA\n139003\nNA\n\n\n2019\n2113826707\n318985893.5\nNA\n16554474\nNA\n\n\n2020\n1978586807\n392025302.6\nNA\n11721070\nNA\n\n\n2021\n2791580132\n509486255.6\nNA\n16478729\nNA\n\n\n2022\n2583749368\n341933370.2\nNA\n18830873\nNA\n\n\n2023\n3158752297\n381447728.4\nNA\n45364248\n1093890247\n\n\n\n\n\n\n\n\nCode\nexp_temp %&gt;% \n  filter(agency!= \"799\" & fund == \"0278\" & object &gt;= 9000) %&gt;% \n  # mutate(wh_approp_name = ifelse(is.na(wh_approp_name), \"INCOME TAX REFUNDS\",\n  #                                ifelse(wh_approp_name == \"INCOME TAX REFUND (RETURN DD)\", \"INCOME TAX REFUNDS (RETURN DD)\", wh_approp_name) )\n#) %&gt;% \n  reframe(Refund_Exp = sum(expenditure), .by = c(fy, wh_approp_name)) %&gt;%\n  pivot_wider(names_from = wh_approp_name, values_from = Refund_Exp) %&gt;%\n  mutate(TotalRefund = sum(`INCOME TAX REFUNDS` + `INCOME TAX REFUNDS (RETURN DD)` + `INCOME TAX REFUNDS (UNITARY)` + `INCOME TAX REFUNDS (NON-UNI)` + `ONE TIME TAX REBATES`, na.rm=TRUE ) ) %&gt;% kable %&gt;%  kable_classic()\n\n\n\n\n\n\nfy\nNA\nINCOME TAX REFUNDS\nINCOME TAX REFUND (RETURN DD)\nINCOME TAX REFUNDS (UNITARY)\nINCOME TAX REFUNDS (NON-UNI)\nINCOME TAX REFUNDS (RETURN DD)\nONE TIME TAX REBATES\nTotalRefund\n\n\n\n\n1998\n742104535\nNA\nNA\nNA\nNA\nNA\nNA\n0\n\n\n1999\n894412241\nNA\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2000\n1145704485\nNA\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2001\n1079647073\nNA\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2002\n1044259996\nNA\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2003\n1602081139\nNA\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2004\n1711164879\nNA\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2005\n1410277490\nNA\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2006\n1436749960\nNA\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2007\n1429410637\nNA\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2008\n1395699141\nNA\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2009\nNA\n1577788060\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2010\nNA\n1336317415\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2011\nNA\n1552869274\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2012\nNA\n2141516559\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2013\nNA\n2258845908\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2014\nNA\n2455872332\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2015\nNA\n2435570366\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2016\nNA\n2133086362\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2017\nNA\n2281956270\nNA\nNA\nNA\nNA\nNA\n0\n\n\n2018\nNA\n2506087609\n139003\nNA\nNA\nNA\nNA\n0\n\n\n2019\nNA\n2432812601\n16554474\nNA\nNA\nNA\nNA\n0\n\n\n2020\nNA\nNA\nNA\n1978586807\n392025303\n11721070\nNA\n0\n\n\n2021\nNA\nNA\nNA\n2791580132\n509486256\n16478729\nNA\n0\n\n\n2022\nNA\nNA\nNA\n2583749368\n341933370\n18830873\nNA\n0\n\n\n2023\nNA\nNA\nNA\n3158752297\n381447728\n45364248\n1093890247\n0\n\n\n\n\n\n\n\n\nCode\nleft_join(rev_refundfund, exp_refundfund) %&gt;% mutate(Refund_diff = Refund_Rev - Refund_Exp) %&gt;% kable %&gt;%  kable_classic()\n\n\n\n\n\n\nfy\nRefund_Rev\nRefund_Exp\nRefund_diff\n\n\n\n\n1998\n857937930\n742104535\n115833395\n\n\n1999\n987335358\n894412241\n92923117\n\n\n2000\n1072462487\n1145704485\n-73241998\n\n\n2001\n1030888390\n1079647073\n-48758683\n\n\n2002\n1027878841\n1044259996\n-16381155\n\n\n2003\n1116659453\n1602081139\n-485421686\n\n\n2004\n1714897377\n1711164879\n3732498\n\n\n2005\n1525217335\n1410277490\n114939845\n\n\n2006\n1532945462\n1436749960\n96195502\n\n\n2007\n1639287737\n1429410637\n209877101\n\n\n2008\n1438513368\n1395699141\n42814227\n\n\n2009\n1580223167\n1577788060\n2435107\n\n\n2010\n1385179429\n1336317415\n48862014\n\n\n2011\n1709892482\n1552869274\n157023209\n\n\n2012\n2226086785\n2141516559\n84570226\n\n\n2013\n2494497675\n2258845908\n235651767\n\n\n2014\n2417899895\n2455872332\n-37972437\n\n\n2015\n2428198721\n2435570366\n-7371645\n\n\n2016\n2063469754\n2133086362\n-69616609\n\n\n2017\n2295793316\n2281956270\n13837046\n\n\n2018\n2769199435\n2506226612\n262972823\n\n\n2019\n2924271340\n2449367074\n474904266\n\n\n2020\n2661884656\n2382333180\n279551476\n\n\n2021\n3350085708\n3317545117\n32540591\n\n\n2022\n4467677103\n2944513611\n1523163491\n\n\n2023\n4358726411\n4679454521\n-320728109\n\n\n\n\n\n\n\n\n\nCode\n# get all individual and corporate income tax revenue items \nincome_rev &lt;- rev_temp %&gt;% \n  filter(!rev_type %in% c(\"99\", \"98\", \"72\")) %&gt;%\n  filter(rev_type %in% c( \"02\", \"03\" ) )\n\nrev_temp %&gt;%  \n  # no transfers, bond proceeds, prior year refunds\n  filter(!rev_type %in% c(\"99\", \"98\", \"72\")) %&gt;%\n  filter(rev_type %in% c( \"02\") ) %&gt;% group_by(fy) %&gt;% \n  summarize(\"Ind. Inc. Receipts, gross refunds & PPRT\" = sum(receipts))\nrev_temp %&gt;%  filter(!rev_type %in% c(\"99\", \"98\", \"72\") &\n                       fund != \"0278\" &\n                       rev_type %in% c( \"02\") ) %&gt;% \n  group_by(fy) %&gt;% summarize(\" Ind. Inc. Receipts, gross PPRT, net Refunds\" = sum(receipts))\n\n\n\n\n\n  \n\n\n\n\n  \n\n\n\n\n\n\nCode\ntax_refunds_rev &lt;- rev_temp %&gt;% \n  filter(!rev_type %in% c(\"99\", \"98\", \"72\")) %&gt;%\n  filter(str_detect(fund_name_ab, \"REFUND\") |                   # search string for refund, just in case\n           fund %in% c(\"0121\", \"0278\", \"0378\") #|             # refund funds\n         #  source %in% c(\"1905\", \"1906\", \"1923\", \"2138\")     # amnesty rev sources\n         )\n\ntax_refunds_rev %&gt;% \n  #filter(rev_type_name == )\n  group_by(fy, rev_type, source, source_name_AWM ) %&gt;% \n  arrange(fy) %&gt;%\n  summarize(refunds_rev = round(sum(receipts)) ) %&gt;% \n  pivot_wider(id_cols = c(rev_type, source, source_name_AWM), names_from = fy, values_from = refunds_rev) %&gt;%\n  arrange(rev_type)\ntax_refunds_rev %&gt;% \n  group_by(fy, rev_type, source, source_name_AWM, fund ) %&gt;% \n  arrange(fy) %&gt;%\n  summarize(refunds_rev = round(sum(receipts)) ) %&gt;% \n  pivot_wider(id_cols = c(rev_type, source, source_name_AWM, fund), names_from = fy, values_from = refunds_rev)\n# expenditure Objects related to refunds \nrefund_expenses &lt;- exp_temp %&gt;% filter( #agency == 492 | \n                                         (object &gt;= 9900 & object &lt;=9941) & expenditure &gt; 0) \n\n\nrefund_expenses %&gt;% \n  group_by(object, fy) %&gt;% \n  summarize(exp = round(sum(expenditure))) %&gt;% \n  pivot_wider(names_from = \"fy\", values_from = \"exp\")\n# excellist &lt;- list(income_rev, tax_refunds_exp, tax_refunds_rev)\n# writexl::write_xlsx(excellist,  \"taxrefunds_check.xlsx\")\n\n\n\n\nTable 9.1\n\n\n\n\n  \n\n\n\n\n  \n\n\n\n\n  \n\n\n\n\n\n\n\n\nCode\nexp_temp &lt;- exp_temp %&gt;% \n  mutate(\n    wh_approp_name = if_else(obj_seq_type == \"99100008\", \"INCOME TAX REFUNDS (UNITARY)\", \n                             if_else(obj_seq_type == \"99100108\", \"INCOME TAX REFUNDS (NON-UNI)\", \n                                    if_else(obj_seq_type == \"99100208\", \"INCOME TAX REFUNDS (RETURN DD)\", as.character(wh_approp_name)), as.character(wh_approp_name))))\n\ntax_refunds_exp &lt;- exp_temp %&gt;% \n  filter(agency != 799) %&gt;%\n  filter(str_detect(fund_name_ab, \"REFUND\")\n           | fund %in% c(#\"0121\", \n                         \"0278\" \n                        # \"0378\", \"0380\", \"0671\"\n                        )\n                        )\n\ntax_refunds_exp %&gt;% group_by(fy, fund, fund_name_ab) %&gt;% summarize(refunds_exp = sum(expenditure)) %&gt;% pivot_wider(id_cols = c(fund, fund_name_ab), names_from = fy, values_from = refunds_exp)\n# Matches IOC\n# Includes the $1 billion one-time abatement in FY 2023\n\ntax_refunds_exp %&gt;% \n  group_by(fy, obj_seq_type, wh_approp_name) %&gt;% \n  summarize(refunds_exp = sum(expenditure)) %&gt;% \n  pivot_wider(names_from = fy, values_from = refunds_exp)\n\n\n\n\nTable 9.2\n\n\n\n\n  \n\n\n\n\n  \n\n\n\n\n\n\nAfter exporting the expenditures and revenues that were related to Refund funds (identified by searching for string containing “refund” and then also identifying the fund number because, in early years, data requested did not have fund labels associated with fund numbers. Yes, you could do just the fund numbers in the command, but if anything changes, looking for strings that contain “refund” would hopefully alert the coder that something new existed which would otherwise be more difficult if only using fund numbers).",
    "crumbs": [
      "About",
      "Illinois State Budget Data",
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Tax Refunds</span>"
    ]
  },
  {
    "objectID": "K12_Education.html",
    "href": "K12_Education.html",
    "title": "10  K-12 Spending & ESSER Funds",
    "section": "",
    "text": "$3.4266 billion Total spent through FY23 from ARP and ESSER Funds. - 1.694 billion spent in 2023 (ARP = ESSER III) but that money arrived in 2022 (=&gt; Fiscal Gap Implications!)\n$2.34 Billion of ARP Emergency Relief Funds (aka ESSER III) spent in 2022 and 2023 combined\n583 million for ESSER II in 2021\n376 million with ESSER I in 2021 and 128 million in 2020.\nISBE received around an additional $7.9 billion total from ESSER compared to its normal federal funding because of COVID\nAt end of State’s FY23, $3.43/$7.9 billion = ~ 50% spent\nAs of Dec.7th, it has spent 74.1% of these funds (“ESSER Spending Dashboard” 2023)\n640 million allocated for FY24 (according to CPS, I think they have different fiscal years though…)\n\n\nCode\n#|\nrev_temp &lt;- rev_temp %&gt;% \n  mutate(\n    rev_type = ifelse(rev_type==\"57\" & agency==\"478\" & (source==\"0618\"|source==\"2364\"|source==\"0660\"|source==\"1552\"| source==\"2306\"| source==\"2076\"|source==\"0676\"|source==\"0692\"), \"58\", rev_type),\n    rev_type_name = ifelse(rev_type==\"58\", \"Federal Medicaid Reimbursements\", rev_type_name),\n    rev_type = ifelse(rev_type==\"57\" & agency==\"494\", \"59\", rev_type),\n    rev_type_name = ifelse(rev_type==\"59\", \"Federal Transportation\", rev_type_name),\n    rev_type_name = ifelse(rev_type==\"57\", \"Federal - Other\", rev_type_name),\n    rev_type = ifelse(rev_type==\"6\", \"06\", rev_type),\n    rev_type = ifelse(rev_type==\"9\", \"09\", rev_type)) \n\nrev_temp %&gt;% \n  filter(rev_type == \"57\") %&gt;% \n  group_by(fy, rev_type, rev_type_name) %&gt;% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000000) %&gt;% \n  ggplot(aes(x=fy, y=receipts, color=rev_type_name)) +\n  geom_recessions(xformat = \"numeric\",text = FALSE)+\n    geom_smooth(aes(x=fy, y = receipts), method = lm, se = FALSE, lty = \"dashed\", color = \"red\", alpha = .5, lwd = .5) + \n\n  geom_line(aes(x=fy, y=receipts,color=rev_type_name), lwd = 1.5) +\n  theme_classic() +\n  scale_y_continuous(labels = comma)+\n  scale_x_continuous(expand = c(0,0)) +\n  labs(title = \"Other Federal Revenue\n       with federal stimulus funds\", \n       caption = \"These values include stimulus funds after the Great Recession and the COVID pandemic response.\",\n       y = \"Billions of Dollars\", x = \"\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  )\nrev_temp %&gt;% \n  filter(rev_type == \"57\") %&gt;% \n  filter(source_name_AWM != \"FEDERAL STIMULUS PACKAGE\" & source_name_AWM != \"STATE CURE\") %&gt;%\n  group_by(fy, rev_type, rev_type_name) %&gt;% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000000) %&gt;% \n  ggplot(aes(x=fy, y=receipts, color=rev_type_name) )+\n  geom_recessions(xformat = \"numeric\",text = FALSE)+\n  geom_line(aes(x=fy, y=receipts, color=rev_type_name), lwd = 1.5) +\n  geom_smooth(aes(x=fy, y = receipts), method = lm, se = FALSE, lty = \"dashed\", color = \"red\", alpha = .5, lwd = .5) + \n  theme_classic() +\n  scale_y_continuous(limits = c(0,20), labels = comma)+\n  scale_x_continuous(expand = c(0,0)) +\n  labs(title = \"Federal to State Transfers: All Other Fed Rev \n       without Federal Stimulus $\", \n       caption = \"These values do NOT include stimulus funds after the Great Recession and the COVID pandemic response.\",\n       y = \"Billions of Dollars\", x = \"\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  )\n\n\n\n\n\n\n\n\n\n\n\n\n\nCode\nrev_temp %&gt;% \n  filter(rev_type == \"57\" #fund_name == \"SBE FEDERAL DEPT OF EDUCATION\"\n         ) %&gt;% \n  group_by(fy) %&gt;% \n  summarise(receipts = sum(receipts, na.rm = TRUE)) %&gt;%\n  mutate(adj_receipts = case_when(\n    fy==2020 ~ receipts - 677964975, # ESSER 1 from CARES\n    fy==2022 ~ receipts - 7353697183, # ARPA ESSER3 + CRRSA ESSER2 $ to ISBE\n  )\n         )\n\n\n\n\nFigure 10.1\n\n\n\n  \n\n\n\n\n\nCode\nrev_temp %&gt;% \n  filter(fund_name == \"SBE FEDERAL DEPT OF EDUCATION\") %&gt;% \n  group_by(fy, rev_type, rev_type_name) %&gt;% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000000) %&gt;% \n  ggplot(aes(x=fy, y=receipts, color=rev_type_name)) +\n  geom_recessions(xformat = \"numeric\",text = FALSE)+\n    geom_smooth(aes(x=fy, y = receipts), method = lm, se = FALSE, lty = \"dashed\", color = \"red\", alpha = .5, lwd = .5) + \n  geom_line(aes(x=fy, y=receipts,color=rev_type_name), lwd = 1.5) +\n  theme_classic() +\n  scale_y_continuous(limits = c(0,4), labels = comma)+\n  scale_x_continuous(expand = c(0,0)) +\n  labs(title = \"K-12 Federal Revenue (all revenue received)\", \n       caption = \"All funds received by the SBE fund\",\n       y = \"Billions of Dollars\", x = \"\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  )\n\n\n\nrev_temp %&gt;% \n  filter(rev_type == \"57\" & fund_name == \"SBE FEDERAL DEPT OF EDUCATION\") %&gt;% \n  filter(source_name_AWM != \"FEDERAL STIMULUS PACKAGE\") %&gt;%\n  group_by(fy, rev_type, rev_type_name) %&gt;% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000000) %&gt;% \n  ggplot(aes(x=fy, y=receipts, color=rev_type_name) )+\n  geom_recessions(xformat = \"numeric\",text = FALSE)+\n  geom_line(aes(x=fy, y=receipts, color=rev_type_name), lwd = 1.5) +\n  geom_smooth(aes(x=fy, y = receipts), method = lm, se = FALSE, lty = \"dashed\", color = \"red\", alpha = .5, lwd = .5) + \n  theme_classic() +\n  scale_y_continuous(limits= c(0,4),labels = comma)+\n  scale_x_continuous(expand = c(0,0)) +\n  labs(title = \"Federal Revenue for K-12\", \n       caption = \"These values do NOT include stimulus funds after the Great Recession and the COVID pandemic response.\",\n       y = \"Billions of Dollars\", x = \"\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  )\n\n\n\n\n\nFigure 10.2\n\n\n\n\n\n\n\n\n\n\n\nFigure 10.3\n\n\n\n\n\n\n\n\n\n\nCode\nK12rev &lt;- rev_temp %&gt;% \n  filter( fund_name == \"SBE FEDERAL DEPT OF EDUCATION\" &  agency_name == \"STATE BOARD OF EDUCATION\") %&gt;%\n  group_by(fy) %&gt;% \n  summarize(receipts =round(sum(receipts)/1000000)) %&gt;% \n  arrange(-receipts)\n\nK12exp &lt;- exp_temp %&gt;% \n  filter( fund_name == \"SBE FEDERAL DEPT OF EDUCATION\" & agency_name == \"STATE BOARD OF EDUCATION\") %&gt;%\n  group_by(fy) %&gt;% \n  summarize(expenditure =round(sum(expenditure)/1000000)) %&gt;% \n  arrange(-expenditure)\n\nggplot() +\n  geom_line(data = K12rev, aes(x=fy, y = receipts), lty = 1 ) +\n  geom_line(data = K12exp, aes(x=fy, y = expenditure), lty = 2) +\n  scale_x_continuous(expand = c(0,0)) \n\n\n\n\n\n\n\n\n\n\n# looks at ISBE federal funding after 2018\n# gives a sort of base comparison of funding before pandemic\n# ESSER revenue sources had multiple source names so lots of scrolling and CTRL-F searching was done\nrev_temp %&gt;% \n  filter(\n  #rev_type == \"57\" & \n           fy &gt; 2018 & fund_name == \"SBE FEDERAL DEPT OF EDUCATION\") %&gt;%\n  group_by(source_name_AWM , fund_name, fy) %&gt;% \n  summarize(receipts =round(sum(receipts)/1000000)) %&gt;% \n  arrange(-receipts)\n\n\n  \n\n\n\n\nCode\nfedrev&lt;- rev_temp %&gt;% \n  filter(rev_type == \"58\" | rev_type == \"59\" | rev_type == \"57\") \n\nfedrev %&gt;% \n  group_by(fy) %&gt;% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000000) %&gt;% \n  ggplot() +\n  geom_line(aes(x=fy, y=receipts)) +\n  theme_classic() +\n  scale_y_continuous(labels = comma)+\n  labs(title = \"All Federal Revenue w/ Fed. Stimulus Package\", y = \"Billions of Dollars\", x = \"\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  )+\n  scale_y_continuous(limits = c(0,45))\n\n\nfedrev %&gt;% \n  filter(source_name_AWM != \"FEDERAL STIMULUS PACKAGE\") %&gt;%\n  group_by(fy) %&gt;% \n  summarise(receipts = sum(receipts, na.rm = TRUE)/1000000000) %&gt;% \n  ggplot() +\n  geom_line(aes(x=fy, y=receipts)) +\n      theme_classic() +\n  scale_y_continuous(labels = comma)+\n  labs(title = \"All Federal Rev EXCEPT Federal Stimulus Package\", \n       y = \"Billions of Dollars\", x = \"\",\n       caption = \"Note: Dropping Federal Stimulus Package revenue only removes the $3.5 billion from FY20, $0.3 billion from FY21, and \n       $8.5 billion from FY22. There is still over $12 billion more in Federal Revenue compared to FY19.\") + \n  theme(legend.position = \"bottom\", legend.title = element_blank()  ) +\n  scale_y_continuous(limits = c(0,45))\n\n\n\n\n\n\nAll Federal Revenue\n\n\n\n\n\n\n\nAll Federal Revenue\n\n\n\n\n\n\n\n## Looking at ESSER funds spent per year ## \n\nexp_temp %&gt;% \n  filter(fy &gt;2018 & fund_name == \"SBE FEDERAL DEPT OF EDUCATION\" & \n           agency_name == \"STATE BOARD OF EDUCATION\") %&gt;% \n  group_by(wh_approp_name) %&gt;% \n  summarize(expenditures = round(sum(expenditure)/1000000, digits = 2))\n\n\n\nTable 10.1: All Appropriations made by State Board of Education - funds spent per state fiscal year\n\n\n\n\n  \n\n\n\n\n\n\nKey words and phrases from the appropriations above were used to identify appropriations that specifically used ESSER funds.\n\n\nCode\nK12_ESSER_words &lt;- c(\"CRRSA\",\"ESSER\",\"EMER R\", \"EMR R\", \"CARES\", \"AMER R\", \"EMER ED\")\n\nK12 &lt;- exp_temp %&gt;% \n  filter(agency_name == \"STATE BOARD OF EDUCATION\") %&gt;%\n  mutate(ESSERfunds = case_when(\n    str_detect(wh_approp_name, \"CRRSA\") ~ \"ESSER\",\n    str_detect(wh_approp_name, \"ESSER\") ~ \"ESSER\",\n    str_detect(wh_approp_name, \"EMER R\") ~ \"ESSER\",\n    str_detect(wh_approp_name, \"EMR R\") ~ \"ESSER\",\n    str_detect(wh_approp_name, \"CARES\") ~ \"ESSER\",\n    str_detect(wh_approp_name, \"AMER R\") ~ \"ESSER\",\n    str_detect(wh_approp_name, \"EMER ED\") ~ \"ESSER\",\n    \n    TRUE ~ 'not_esser')) %&gt;%\n  filter(ESSERfunds == \"ESSER\")\n\n\n\n# amount of ESSER money spent total (all years summed together)\n\nK12 %&gt;% \n  summarize(esser_spent = sum(expenditure))\n\n\n\nTable 10.2: Amount of ESSER money spent total (all years summed together)\n\n\n\n\n  \n\n\n\n\n\n\n\n# grouped by fiscal year\nK12 %&gt;% \n  group_by(fy) %&gt;% \n  summarize(esser_spent = sum(expenditure))\n\n\n\nTable 10.3: ESSER spent each year\n\n\n\n\n  \n\n\n\n\n\n\n\n# Grouped by fiscal year and appropriation description\nK12 %&gt;% \n  group_by(fy, wh_approp_name) %&gt;% \n  summarize(esser_spent = sum(expenditure))\n\n\n\nTable 10.4: ESSER items grouped by fiscal year and appropriation description",
    "crumbs": [
      "About",
      "Illinois State Budget Data",
      "<span class='chapter-number'>10</span>  <span class='chapter-title'>K-12 Spending & ESSER Funds</span>"
    ]
  },
  {
    "objectID": "FedMoneyReceived.html",
    "href": "FedMoneyReceived.html",
    "title": "11  Federal COVID Money Received",
    "section": "",
    "text": "11.1 Comptroller Revenue Data\nRead the charts from the top to the bottom. Most of the graphs below begin with either the year the money was committed or the name of the Law that provided the funds and then shows it flowing down to either who received the money or how it was spent.\nSankey2023.csv file totals $32 billion flowing into the state. $3.5 came in FY20, $12.6 billion came in FY21 and $16.1 billion in FY22. These values include both the State CURE and other federal grants to state departments for education, health providers, and much more. These observations are based more on the IOC revenue data for revenue received.\nNote: $57 million in Federal Transportation dollars are grouped with the billions of other federal revenue for simplified graphs and summaries.\nPPP & Health Care Enhancement act contributed to $2.778 billion for Provider Relief Fund. This is considered within the Medicare category in both revenues and expenditures.\nFamilies First Act: $4.469 billion for Medicaid (from Health and Human Services and deposited into Healthcare Provider Relief fund; Data Source IOC revenue data). This fund-revenue source combo grew from $4 billion in 2019, $6 billion in 2020, $7.5 billion in 2021 and $8.4 billion 2022.\nCARES & ESSER impacts: Revenue from source “Department of Education-Fed” and deposited into “SBE Federal Dept of Education”. Was $1.45 billion in 2019 and 2020 and grew to $2.26 billion in 2021 and $3.35 billion in 2022.\nAccording to federal data publicly available, $52 billion has been committed to Illinois (including local governments) but $32 billion has been received by the state at the end of Fiscal Year 2022 (as of June 30, 2022, excluding local governments). An additional $8.86 billion was committed straight to local governments. More money has been received in FY23 but is not focused on in this analysis. To see a graph of federal funds committed to the State, jump to Section 11.4.\nCode\nsankey_rev_ioc &lt;- read_csv(\"./data/sankey2023.csv\") %&gt;% \n  filter(StFund == \"Total\")\n\n\n\nsankey_rev_ioc &lt;- sankey_rev_ioc %&gt;% select(Federal, FF_Cat, StateFunds, StFund, Expenditures, value, Notes, Notes2, stfundname) %&gt;%\n  filter(StFund == \"Total\") %&gt;%\n  mutate(value=as.numeric(value),\n         # keeps order of year received from oldest to newest in graphs\n    StateFunds = factor(StateFunds, levels = c(\"Total_received_fy20\",\"Total_received_fy21\", \"Total_received_fy22\", \"Total_received_fy23\")),\n    # other includes transit and public health grants\n                 Expenditures_ordered = factor(Expenditures, levels = c(\"Federal Other\", \"Other\",  \"K-12\",  \"Medicaid\", \"Medicare\", \"Misc.\")),\n    FF_Cat_ordered=factor(FF_Cat, levels = c(\"Other\", \"Transit\", \"Medicare\",\"Medicaid\", \"Federal Other\")),\n    Federal_ordered = factor(Federal, levels = \"Medicaid\", \"Medicare\", \"Federal Other\"),\n    # keeps Legislation in chronological order,\n    # groups FFRCA and PPP legislation into Other *, helps simplify some graphs \n         Notes2 = factor(Notes2, levels = c(\"CARES\", \"Other *\", \"CRRSA\", \"ARPA\")),\n        # keeps legislation in chronological order\n         Notes = factor(Notes, levels = c(\"CARES\",  \"PPP\", \"FFCRA\",\"CRRSA\", \"ARPA\")))\n\nsankey_rev_ioc %&gt;% filter( Federal == \"Federal Stimulus Packages\") %&gt;%\nggplot( \n       aes(y = value, \n            axis3=FF_Cat, axis2=Expenditures, axis1 = StateFunds, label = \"stratum\")) +\n  geom_flow(aes(fill = Notes), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n  theme(legend.position = \"bottom\") + \n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  labs(title = \"Over $8 billion in FY22, $11.6 Billion in State CURE total\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(sankey_rev_ioc, \n       aes(y = value, \n           axis4 = Federal, axis3=FF_Cat, axis2=Expenditures, axis1 = StateFunds, label = \"stratum\")) +\n  geom_flow(aes(fill = Notes), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n  theme(legend.position = \"bottom\") + \n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  labs(title = \"$30.6 billion recieved FY20-FY22\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(sankey_rev_ioc, \n       aes(y = value, \n           axis3 = Federal, axis2 = StateFunds, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = Notes), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n  theme(legend.position = \"bottom\", legend.title = element_blank()) + \n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  labs(title = \"$30.6 billion in federal aid recieved by Illinois FY20-FY22\",\n       subtitle = \"$11.6 Billion for State CURE\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(sankey_rev_ioc, \n       aes(y = value, \n           axis3 = Notes, axis2 = StateFunds, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = Federal), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n  theme(legend.position = \"bottom\", legend.title = element_blank()) + \n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  labs(title = \"$30.6 billion in federal aid recieved by Illinois FY20-FY22\",\n       subtitle = \"$11.6 Billion for State CURE\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(sankey_rev_ioc, \n       aes(y = value, \n           axis3 = Notes, axis1 = StateFunds, axis2=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = Federal), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n  theme(legend.position = \"bottom\", legend.title = element_blank()) + \n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  labs(title = \"$30.6 billion in federal aid recieved by Illinois FY20-FY22\",\n       subtitle = \"$11.6 Billion for State CURE\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(sankey_rev_ioc, \n       aes(y = value, \n           axis4 = Notes, axis2 = StateFunds, axis3=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = Federal), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n  theme(legend.position = \"bottom\", legend.title = element_blank()) + \n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  labs(title = \"$30.6 billion in federal aid recieved by Illinois FY20-FY22\",\n       subtitle = \"$11.6 Billion for State CURE\")\n\n\n\n\n\n\n\n\n\nCode\nggplot(sankey_rev_ioc, \n       aes(y = value, \n           axis3 = Federal,   axis2 = StateFunds, axis1=Expenditures_ordered,  label = \"stratum\")) +\n  geom_flow(aes(fill = Notes), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n  theme(legend.position = \"bottom\", legend.title = element_blank()) + \n  labs(title = \"$30.6 billion in federal aid recieved by Illinois FY20-FY22\",\n       subtitle = \"$11.6 Billion for State CURE\")\nSome of the grouping and summarizing of data to calculate the values used in graph labels:\nsankey_rev_ioc %&gt;% #group_by(StateFunds) %&gt;% \n  summarize(sum=sum(value))\n\n\n  \n\n\nsankey_rev_ioc %&gt;% group_by(Federal) %&gt;% \n  summarize(sum=sum(value))\n\n\n  \n\n\nsankey_rev_ioc %&gt;% group_by(FF_Cat) %&gt;% \n  summarize(sum=sum(value))\n\n\n  \n\n\nsankey_rev_ioc %&gt;% group_by(StateFunds) %&gt;% \n  summarize(sum=sum(value))\n\n\n  \n\n\nsankey_rev_ioc %&gt;% group_by(Notes) %&gt;% \n  summarize(sum=sum(value))\nAnother way to try to understand the use for the federal funds is to look at what grants were received and what expenditure fiscal category they would be included in.\nCode\n# Color indicates state fund name. this way STate CURE funds are the same color from CARES and ARPA\nggplot(sankey_rev_ioc, \n       aes(y = value, axis3 = Notes, axis2 = stfundname, axis1=Expenditures_ordered, label = \"stratum\")) +\n  geom_flow(aes(fill = stfundname), color = \"black\",reverse=FALSE) +\n  guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +  \n  theme(legend.position=\"bottom\") +\n\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  labs(title = \"Where the State CURE funds came from and other federal revenue received\",\n       caption = \"State CURE funds broken down by expenditure purpose in later graphs.\n       HPF = Healthcare Provider Fund\")\n\n\n\n\n\n\n\n\n\nCode\n# Color indicates state fund name. this way STate CURE funds are the same color from CARES and ARPA\nggplot(sankey_rev_ioc, \n       aes(y = value, axis3 = Notes, \n         #  axis2 = stfundname, \n           axis1=Expenditures_ordered, label = \"stratum\")) +\n  geom_flow(aes(fill = StateFunds), color = \"black\",reverse=FALSE) +\n  guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = 1)+\n  theme_void() +  \n  theme(legend.position=\"bottom\") +\n\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  labs(title = \"Where the State CURE funds came from and other federal revenue received\",\n       caption = \"State CURE funds broken down by expenditure purpose in later graphs.\n       HPF = Healthcare Provider Fund\")\n\n\n\n\n\n\n\n\n\nCode\n# Color indicates state fund name. this way State CURE funds are the same color from CARES and ARPA\nggplot(sankey_rev_ioc, \n       aes(y = value, axis3 = Notes, axis2 = stfundname, axis1=Expenditures_ordered, label = \"stratum\")) +\n  geom_flow(aes(fill = stfundname), color = \"black\",reverse=FALSE) +\n  guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = 1)+\n  theme_void() +  \n  theme(legend.position=\"bottom\") +\n\n # geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  labs(title = \"Where the State CURE funds came from and other federal revenue received\",\n       caption = \"State CURE funds broken down by expenditure purpose in later graphs.\n       HPF = Healthcare Provider Fund\")\nCode\nsankey_rev_ioc %&gt;% group_by(StateFunds, Expenditures) %&gt;% \n  summarize(sum=sum(value))\n\n\n\n  \n\n\n\nCode\nsankey_rev_ioc %&gt;% group_by(Expenditures) %&gt;% \n  summarize(sum=sum(value))\n\n\n\n  \n\n\n\nCode\nsankey_rev_ioc %&gt;% group_by( Notes, Federal, StateFunds, FF_Cat) %&gt;% \n  summarize(sum=sum(value))\n\n\n\n  \n\n\n\nCode\n# Color indicates legislation\nggplot(sankey_rev_ioc, \n       aes(y = value, axis4 = Federal, axis3 = Notes, axis2 = stfundname, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = Notes), color = \"black\",reverse=FALSE) +\n  guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +  \n  theme(legend.position=\"bottom\") +\n\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  labs(title = \"$32 Billion in Federal Funds Received, Legislation, State Fund \n       that Received Money, and FF Expenditure Category\",\n       caption = \"State CURE funds broken down by expenditure purpose in later graphs.\n       HPF = Healthcare Provider Fund\")\n\n\n\n\n\n\n\n\n\nCode\n# Same as graph above but gets rid of top axis for federal funds\n# Color indicates State CURE funds or State Departments grants\n# ggplot(sankey_rev_ioc, \n#        aes(y = value, axis3 = Notes, axis2 = stfundname, axis1=Expenditures, label = \"stratum\")) +\n#   geom_flow(aes(fill = Federal), color = \"black\", reverse=FALSE) +\n#   guides(fill = FALSE) +   \n#   geom_stratum(reverse=FALSE)+\n#   coord_flip()+\n#   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n#   theme(legend.position=\"bottom\") +\n#   \n#   theme_void() +  \n#   \n#   geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n#   \n#   labs(title = \"$32 Billion in Federal Funds Received, Legislation, State Fund \n#        that Received Money, and FF Expenditure Category\",\n#        caption = \"State CURE funds broken down by expenditure purpose in later graphs.\n#        HPF = Healthcare Provider Fund.\n#        Color indicates State CURE funds and Grants to State Department.\")\nHighlights legislation, fund money went into, and its intended purpose using Fiscal Futures expenditure categories. The State CURE expenditures are listed as miscellaneous here but are described in more detail farther below.\nCode\n# color indicates fund\nggplot(sankey_rev_ioc, \n       aes(y = value, axis3 = Notes, axis2 = stfundname, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = stfundname), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n  theme(legend.position=\"bottom\") +\n\n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2,reverse=FALSE) +\n   labs(title = \"Legislation that provided funds, state fund receiving revenue, \n   and how funds were used\", caption = \"State CURE expenditures are not broken down in this image for readibility. \n         Please see graphs focused on State CURE expenditures below.\")\nThese revenue graphs label State CURE as being for miscellaneous purposes due to the difficulty of representing that information broken down cleanly in the graphs. To see how ARPA funds (and State CURE funds in general) were spent, jump to Section 11.2.\nCode\nggplot(sankey_rev_ioc, \n       aes(y = value, \n           axis3 = Notes, axis2 = StateFunds, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = stfundname), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n  theme(legend.position=\"bottom\") +\n\n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse = FALSE)\n\n\n\n\n\n\n\n\n\nCode\nggplot(sankey_rev_ioc, \n       aes(y = value, \n           axis4 = Notes, axis3 = StateFunds, axis2= Federal, axis1=Expenditures, label = \"stratum\")) +\n  geom_flow(aes(fill = Notes), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n  theme(legend.position=\"bottom\") +\n\n      geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse = FALSE)",
    "crumbs": [
      "About",
      "Illinois State Budget Data",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Federal COVID Money Received</span>"
    ]
  },
  {
    "objectID": "FedMoneyReceived.html#comptroller-revenue-data",
    "href": "FedMoneyReceived.html#comptroller-revenue-data",
    "title": "11  Federal COVID Money Received",
    "section": "",
    "text": "Note\n\n\n\nVariable names in the sankeyattempt2022 file do not have the most useful names due to the information within morphing over time as I figured out the format to necessary for making the graphs. Any variable names used while making these graphs might not actually contain the data one would expect given the variable names. I do intend on renaming the file and changing the variable names and code to something more intuitive but have not had time to complete that task.\n\n\n\n\n\n\nFigure 11.3: COVID-related legislation and federal revenue into Illinois\n\n\n\n\n\n\n\n\n\nFigure 11.4: Illinois Expenditures and Allocations for $11.6 Billion in State CURE funds\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nImportant\n\n\n\nRemember: Medicare includes Healthcare Provider Assistance, reimbursements for the Continuous Coverage Mandate, and reimbursements for the Matching Funds Increase. This is different than GOMB categorization.\n\n\n\n\n\n\n\n\n\n\n\nNote\n\n\n\nNote: CARES funds were originally received and spent in Disaster Response & Recovery Fund. In FY22, unspent aid was transferred to the State CURE and then transferred again to state agencies for COVID-related expenditures. Remaining CARES funds were transferred to State CURE fund for FY22. $337 million was also transferred from the Illinois Department of Revenue into the Illinois Housing Development Authority (IHDA). (LBOC June 2021 Report).",
    "crumbs": [
      "About",
      "Illinois State Budget Data",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Federal COVID Money Received</span>"
    ]
  },
  {
    "objectID": "FedMoneyReceived.html#sec-state-expenditure-graphs",
    "href": "FedMoneyReceived.html#sec-state-expenditure-graphs",
    "title": "11  Federal COVID Money Received",
    "section": "11.2 State Expenditure Graphs",
    "text": "11.2 State Expenditure Graphs\nFederal expenditures from CURE and other major funds . Uses the fedCUREexpenditures.xlsx file.\nThis data comes from Illinois Comptroller expenditure data, Legislative Budget Oversight Commission (LBOC) Reports, and the ARPA Annual Recovery Plan detailing the State’s use of State and Local Fiscal Recovery Funds (SLFRF) which is prepared by the Governor’s Office of Management and Budget (GOMB).\nDates on top are Fiscal Year received. Dates in the middle of the graph are Fiscal Year expenditures. Remember, federal funds for COVID recovery have been received and spent in different years.\nRevenue from Local Cure is the Local Government Transfers. A small amount of the State CURE was also transferred to local governments ($240 million in FY2021). There was also $700 million ARPA State CURE funds transferred to local governments during FY21 and FY22.\n\n11.2.1 Fiscal Years 2020-2023\nDuring fiscal years 2020 through 2023 $11.03 billion ($8.4 CURE + $3.4266 ESSER) in State CURE and ESSER funds have been spent by the state. An additional $6.9 billion of grants from CARES, CRRSA, and ARPA has been spent by state departments.\nOver $9 billion of State CURE funds (includes both CARES Act and ARP Act State Fiscal Recovery Fund) was received in in FY2020-2023 (nearly all of it in FY 2022).\n\n11.2.1.1 CURE Dollars\n\nAs of FY23, $6.648 billion of the $9 billion received has been spent. 2.352 billion allocated for the future in FY24 +\n\n\nRemember: All revenue was recieved in FY22 and the Fiscal Futures model ignores Statutory Transfers to the Fiscal Gap will look negative in FY22 (i.e. it looks “good”) and the gap will be positive in FY23 and beyond (i.e. it looks “bad” because expenses &gt; revenues when ignoring transfers).\n\nCARES State CURE money:\n\n$370 million was spent in the initial pandemic response in the very end of FY2020 and $2.858 billion CARES dollars were spent in FY21.\nIn FY2022, almost all remaining CARES funds were used up (~250 million).\nAround $3.5 billion total spent during FY20-FY22.\n\nARPA State CURE money:\n\nIn FY22, $4.9 billion (of $8.127 billion received) ARPA-State CURE dollars were spent:\n\n$2.7 billion for repaying unemployment insurance trust fund, $1 billion transferred to the general revenue fund to make up for any lost revenue caused by the pandemic (aka “Essential Government Services”), and $1.23 billion on other programs and services (e.g. hospital stability payments, operational expenses, back to business grants and economic development).\n\nIn FY23, $2.47 billion spent:\n\n1.36 billion for UI Trust fund repayment, and $1.1 billion on additional areas: $212 million for nursing home financial assistance, $150 million for affordable housing grants, plus many more\n\nAs of the end of FY23, $8.01 billion of State CURE funds have been spent\n\nValues presented in LBOC documents for the end of FY22 are slightly different than the values calculated using IOC expenditure data. IOC expenditure data includes all lag period expenditures through October so values are slightly higher than end of June calculations.\nK-12 Spending and ESSER Money\n\n$3.4266 billion Total spent through FY23 from ARP and ESSER Funds. - 1.694 billion spent in 2023 (ARP = ESSER III) but that money arrived in 2022 (=&gt; Fiscal Gap Implications!)\n\n\n$2.34 Billion of ARP Emergency Relief Funds (aka ESSER III) spent in 2022 and 2023 combined\n583 million for ESSER II in 2021\n376 million with ESSER I in 2021 and 128 million in 2020.\nISBE received around an additional $7.9 billion total from ESSER compared to its normal federal funding because of COVID\nAt end of State’s FY23, $3.43/$7.9 billion = ~ 50% spent\nAs of Dec.7th, it has spent 74.1% of these funds (“ESSER Spending Dashboard” 2023)\n640 million allocated for FY24 (according to CPS, I think they have fiscal years though…)\n\n\ncure_exp &lt;- read_xlsx(\"./data/fedCUREexpenditures.xlsx\")\n\n\ncure_exp2023 &lt;- cure_exp %&gt;%\n  mutate(\n         FY_Spent = factor(FY_Spent, levels = c(\"2020\", \"2021\", \"2022\", \"2023\")),\n         FY_Received = factor(FY_Received, levels = c(\"2020\", \"2021\", \"2022\", \"2023\")))\n\n\ncure_exp2023 %&gt;% #expenditures per year\n  filter(State_local == \"State CURE\") %&gt;%\n  group_by(`FY_Spent`)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n  \n\n\n# State CURE expenditures only\ncure_exp2023%&gt;%  \n    filter(State_local == \"State CURE\") %&gt;%\n  summarize(Expenditures=sum(`FY Expenditures`)) \n\n\n  \n\n\ncure_exp2023 %&gt;% \n  filter(State_local == \"State CURE\") %&gt;%\n  group_by(Law, FF_Cat2)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`)) %&gt;%\n  pivot_wider(names_from = Law, values_from = Expenditures)\n\n\n  \n\n\n\nCode chunk below is for State CURE funds spent through FY 2022.\n\n\nCode\n# State CURE only, \n# without 2023 allocations\n\ncure_exp2023  %&gt;% \n  filter(State_local == \"State CURE\") %&gt;% # for only state CURE funds\n  ggplot(aes(y = `FY Expenditures`, axis4 = FY_Received, axis3 = `Agency`,  \n             axis2 = FY_Spent, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = FF_Cat2), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n  scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n  theme(legend.position=\"bottom\")+\n  \n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  labs(title = \"Expenditures using State CURE funds: $8.4 spent FY20-FY22\", \n  subtitle = \"Year Received by State Department, Year Spent, and how it was spent so far\", \n  caption = \"Expenditures occured during FY20, FY21 and FY22. \n       Additional funds have been allocated for FY23 and can be spent until FY26.\n  Public Health & Public Safety combined due to overlap with IEMA's involvemnt in pandemic response.\")\n\n\n\n\n\n\n\n\n\nCode\n## State CURE only\n# through FY23\ncure_exp2023  %&gt;% \n  filter(State_local == \"State CURE\") %&gt;% \n  ggplot(aes(y = `FY Expenditures`, axis3 = `State_local2`, axis2 = Agency_grouped, axis1=FF_Cat2, label = \"stratum\"))+\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n  theme(legend.position=\"bottom\")+\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  theme(legend.position=\"bottom\")+\n\n  labs(title = \"State CURE Expenditures: Department that Received Revenue\n       & Purpose of Expenditure\",\n       subtitle = \"$8.4 billion spent by end of FY22\")\n\n\n\n\n\n\n\n\n\nCode\ncure_exp2023 %&gt;% #expenditures for State government (with CURE $) and state departments\n  group_by(State_local2)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n\n  \n\n\n\nCode\n# State CURE & ESSER grants\ncure_exp2023 %&gt;% # total expenditures \n  summarize(Expenditures=sum(`FY Expenditures`)) \n\n\n\n  \n\n\n\nMajor uses of the State CURE funds include $2.7 billion for repaying the unemployment insurance trust fund deficit, $1 billion was transferred to general revenue to make up for lost revenue during the pandemic, $1.2 billion was transferred to multiple funds for reimbursements of pandemic response related expenses, $705 million for Public Healthcare Providers (within Medicare), and over $1.5 billion has gone toward various forms of economic recovery and development.\nMultiple billions of dollars of spending were funded with other federal grants. For example, some CRRSA dollars were spent in FY22: $1.1 billion ESSER II, $332 million from a child care development block grant, $349 million for housing stability, and $664 million for other public health services like testing and contact tracing.\n\n# ESSER Expenditures per year\n# from simplified file, not the IOC expenditure file\ncure_exp2023 %&gt;% \n  filter(Fund == \"ESSER\") %&gt;%\n  group_by(`FY_Spent`)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n  \n\n\n#4 levels with labels\n# all federal funds in cure_exp file through 2022\nggplot(cure_exp2023, \n       aes(y = `FY Expenditures`, \n           axis4 = `FY_Received`,  axis3 = `Federal Funds`, \n           axis2 = FY_Spent, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n    theme(legend.position=\"bottom\")+\n\n  labs( title = \"Expenditures through FY2023: Year Received, Federal Fund Revenue Source, \n        Year Spent, & How Money was Used\",\n        subtitle = \"$15.3 of federal aid spent\",\n        caption = \"CRF & SLFRF make up the Federal Stimulus Packages, aka State CURE funds.\")\n\n\n\n\n\n\n\n\nIn FY21, $1.8 billion from the CARES-State CURE went to operations and grants for programs and services (e.g. business interruptions, child care grants, healthcare providers, rent/mortgage assistance, public health response, etc.), $1 billion was transferred to other Agencies for reimbursing pandemic related costs, and $569 million CARES-ESSER I funds for K-12 education.\nApproximately $3.08 billion of the ESSER funds had been spent through FY 2022 (of the $7.88 billion received from ESSER I, II, and III received) and in FY 2022 alone, the Illinois School Board for Education received over $5 billion from ARPA-ESSER III and spent under $1 billion of it that fiscal year. These unspent funds do roll over to the next fiscal year but must be used by 2024. Around $4 billion remain.\nAccording to the ISBE Spending Dashboard as of February 2, 2023, $1.6 billion of ESSER II and $1.6 billion of ESSER III funds have been spent so far. ESSER I has been nearly completely spent, ISBE has spent 79% of its ESSER II allocations and has spent 33% of its ESSER III allocations.\n\n\nCode\n# all funds through FY22 spent\n# Year Spent, Agency received, FF Spending Category \nggplot(cure_exp2023, \n       aes(y = `FY Expenditures`, axis3 = FY_Spent, axis2 = Agency, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n #geom_text(stat = \"stratum\", label.strata = TRUE, reverse=FALSE) + \n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  theme_void() + \n  theme(legend.position=\"bottom\")+\n  labs( title = \"CURE, ESSER, and other Federal Grants = $15.3 Billion Spent FY20-FY23\", \n        subtitle = \"Year Spent, Agency that Spent it & FF Spending Category\")\n\n\n\n\n\n\n\n\n\n\n$500 million spent in FY2020 (CARES State CURE & CARES-ESSER I)\n$3.82 billion spent in FY2021 (CARES State CURE, CRRSA-ESSER II,… )\n$11.03 billion spent in FY 2022 (remaining $0.5 billion CARES-State CURE, $5.2 billion from ARPA-State CURE, $2 billion from ESSER II & III, plus other funds from federal grants to state agencies).\n\n\n\nCode\ncure_exp2023 %&gt;% \n  group_by(`Federal Funds`)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n\n  \n\n\n\nCode\ncure_exp2023 %&gt;% #expenditures per year\n  group_by(`FY_Spent`)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n\n  \n\n\n\nCode\ncure_exp2023 %&gt;% \n  group_by(`FF_Cat`)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n\n  \n\n\n\nCode\ncure_exp2023 %&gt;% \n  group_by(Law)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n\n  \n\n\n\nCode\ncure_exp2023 %&gt;% \n  group_by(Law, FY_Spent, FF_Cat2)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`)) %&gt;%\n  pivot_wider(names_from = FY_Spent, values_from = Expenditures) \n\n\n\n  \n\n\n\nCode\ncure_exp2023 %&gt;% \n  group_by(Law, FY_Received)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`)) %&gt;%\n  pivot_wider(names_from = Law, values_from = Expenditures) %&gt;% arrange(FY_Received)\n\n\n\n  \n\n\n\nCode\ncure_exp2023 %&gt;% \n  group_by(Law, FY_Spent)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`)) %&gt;%\n  pivot_wider(names_from = Law, values_from = Expenditures) %&gt;%\n  arrange(FY_Spent)\n\n\n\n  \n\n\n\n\n\n\n11.2.2 Fiscal Years 2020-2022\nDuring fiscal years 2020 through 2022 $11.03 billion ($8.4 CURE + $3.082 ESSER) in State CURE and ESSER funds have been spent by the state. An additional $6.9 billion of grants from CARES, CRRSA, and ARPA has been spent by state departments.\nSo far, over $8.4 billion of the State CURE funds (includes both CARES Act and ARP Act State Fiscal Recovery Fund) have been spent in FY2020-2022.\nCARES State CURE money:\n\n$370 million was spent in the initial pandemic response in the very end of FY2020 and $2.858 billion CARES dollars were spent in FY21.\nIn FY2022, almost all remaining CARES funds were used up (~250 million).\nAround $3.5 billion total spent during FY20-FY22.\n\nARPA State CURE money:\n\nIn FY22, $4.9 billion (of $8.127 billion received) ARPA-State CURE dollars were spent:\n\n$2.7 billion for repaying unemployment insurance trust fund, $1 billion transferred to the general revenue fund to make up for any lost revenue caused by the pandemic, and $1.23 billion on other programs and services (e.g. hospital stability payments, operational expenses, back to business grants and economic development).\n\n\nValues presented in LBOC documents for the end of FY22 are slightly different than the values calculated using IOC expenditure data. IOC expenditure data includes all lag period expenditures through October so values are slightly higher than end of June calculations.\n\ncure_exp &lt;- read_xlsx(\"./data/fedCUREexpenditures.xlsx\")\n\ncure_exp2022 &lt;- cure_exp %&gt;%\n  filter(FY_Spent &lt;2023) %&gt;% # excludes FY23 and beyond\n  \n  mutate(\n         FY_Spent = factor(FY_Spent, levels = c(\"2020\", \"2021\", \"2022\")),\n         FY_Received = factor(FY_Received, levels = c(\"2020\", \"2021\", \"2022\"))#,\n      #   FF_Cat = factor(FF_Cat, levels = c(\"Econ Dev\", \"Human Services\", \"K-12\", \"Local Transfers\", \"Public Health\", \"Medicaid\", \"Public Safety\",  \"UI Fund\", \"Lost Revenue\")),\n     #    FF_Cat2 = factor(FF_Cat, levels = c(\"Econ Dev\", \"Human Services\", \"K-12\", \"Local Transfers\", \"Public Health & Safety\", \"Medicare\",  \"UI Fund\", \"Lost Revenue\", \"FY23+\"))\n     )\n\ncure_exp2022 %&gt;% #expenditures per year\n  filter(State_local == \"State CURE\") %&gt;%\n  group_by(FY_Spent) %&gt;% \n  summarize(Expenditures = sum(as.numeric(`FY Expenditures`), na.rm=TRUE))\n\n\n  \n\n\n# State CURE expenditures only\ncure_exp2022%&gt;%  \n    filter(State_local == \"State CURE\") %&gt;%\n  summarize(Expenditures=sum(`FY Expenditures`)) \n\n\n  \n\n\ncure_exp2022 %&gt;% \n  filter(State_local == \"State CURE\") %&gt;%\n  group_by(Law, FF_Cat2)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`)) %&gt;%\n  pivot_wider(names_from = Law, values_from = Expenditures)\n\n\n  \n\n\n\nCode chunk below is for State CURE funds spent through FY 2022.\n\n\nCode\n# State CURE only, \n# without 2023 allocations\n\ncure_exp2022 %&gt;% \n  filter(State_local == \"State CURE\") %&gt;% # for only state CURE funds\n  ggplot(aes(y = `FY Expenditures`, axis4 = FY_Received, axis3 = `Agency`,  \n             axis2 = FY_Spent, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = FF_Cat2), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n  scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n  theme(legend.position=\"bottom\")+\n  \n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  labs(title = \"Expenditures using State CURE funds: $8.4 spent FY20-FY22\", \n  subtitle = \"Year Received by State Department, Year Spent, and how it was spent so far\", \n  caption = \"Expenditures occured during FY20, FY21 and FY22. \n       Additional funds have been allocated for FY23 and can be spent until FY26.\n  Public Health & Public Safety combined due to overlap with IEMA's involvemnt in pandemic response.\")\n\n\n\n\n\n\n\n\n\nCode\n## State CURE only\n# through FY22\ncure_exp2022 %&gt;% \n  filter(State_local == \"State CURE\") %&gt;% \n  ggplot(aes(y = `FY Expenditures`, axis3 = `State_local2`, axis2 = Agency_grouped, axis1=FF_Cat2, label = \"stratum\"))+\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n  theme(legend.position=\"bottom\")+\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  theme(legend.position=\"bottom\")+\n\n  labs(title = \"State CURE Expenditures: Department that Received Revenue\n       & Purpose of Expenditure\",\n       subtitle = \"$8.4 billion spent by end of FY22\")\n\n\n\n\n\n\n\n\n\nCode\ncure_exp2022 %&gt;% #expenditures for State government (with CURE $) and state departments\n  group_by(State_local2)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n\n  \n\n\n\nCode\n# State CURE & ESSER grants\ncure_exp2022%&gt;% # total expenditures \n  summarize(Expenditures=sum(`FY Expenditures`)) \n\n\n\n  \n\n\n\nMajor uses of the State CURE funds include $2.7 billion for repaying the unemployment insurance trust fund deficit, $1 billion was transferred to general revenue to make up for lost revenue during the pandemic, $1.2 billion was transferred to multiple funds for reimbursements of pandemic response related expenses, $705 million for Public Healthcare Providers (within Medicare), and over $1.5 billion has gone toward various forms of economic recovery and development.\nMultiple billions of dollars of spending were funded with other federal grants. For example, some CRRSA dollars were spent in FY22: $1.1 billion ESSER II, $332 million from a child care development block grant, $349 million for housing stability, and $664 million for other public health services like testing and contact tracing.\n\n# ESSER Expenditures per year\n# from simplified file, not the IOC expenditure file\ncure_exp2022 %&gt;% \n  filter(Fund == \"ESSER\") %&gt;%\n  group_by(`FY_Spent`)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n  \n\n\n#4 levels with labels\n# all federal funds in cure_exp file through 2022\nggplot(cure_exp2022, \n       aes(y = `FY Expenditures`, \n           axis4 = `FY_Received`,  axis3 = `Federal Funds`, \n           axis2 = FY_Spent, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n    theme(legend.position=\"bottom\")+\n\n  labs( title = \"Expenditures through FY2022: Year Received, Federal Fund Revenue Source, \n        Year Spent, & How Money was Used\",\n        subtitle = \"$15.3 of federal aid spent\",\n        caption = \"CRF & SLFRF make up the Federal Stimulus Packages, aka State CURE funds.\")\n\n\n\n\n\n\n\n\nIn FY21, $1.8 billion from the CARES-State CURE went to operations and grants for programs and services (e.g. business interruptions, child care grants, healthcare providers, rent/mortgage assistance, public health response, etc.), $1 billion was transferred to other Agencies for reimbursing pandemic related costs, and $569 million CARES-ESSER I funds for K-12 education.\nApproximately $3.08 billion of the ESSER funds had been spent through FY 2022 (of the $7.88 billion received from ESSER I, II, and III received) and in FY 2022 alone, the Illinois School Board for Education received over $5 billion from ARPA-ESSER III and spent under $1 billion of it that fiscal year. These unspent funds do roll over to the next fiscal year but must be used by 2024. Around $4 billion remain.\nAccording to the ISBE Spending Dashboard as of February 2, 2023, $1.6 billion of ESSER II and $1.6 billion of ESSER III funds have been spent so far. ESSER I has been nearly completely spent, ISBE has spent 79% of its ESSER II allocations and has spent 33% of its ESSER III allocations.\n\n\nCode\n# all funds through FY22 spent\n# Year Spent, Agency received, FF Spending Category \nggplot(cure_exp2022, \n       aes(y = `FY Expenditures`, axis3 = FY_Spent, axis2 = Agency, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n #geom_text(stat = \"stratum\", label.strata = TRUE, reverse=FALSE) + \n  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n  theme_void() + \n  theme(legend.position=\"bottom\")+\n  labs( title = \"CURE, ESSER, and other Federal Grants = $15.3 Billion Spent FY20-FY22\", \n        subtitle = \"Year Spent, Agency that Spent it & FF Spending Category\")\n\n\n\n\n\n\n\n\n\n\n$500 million spent in FY2020 (CARES State CURE & CARES-ESSER I)\n$3.82 billion spent in FY2021 (CARES State CURE, CRRSA-ESSER II,… )\n$11.03 billion spent in FY 2022 (remaining $0.5 billion CARES-State CURE, $5.2 billion from ARPA-State CURE, $2 billion from ESSER II & III, plus other funds from federal grants to state agencies).\n\n\n\nCode\ncure_exp2022 %&gt;% \n  group_by(`Federal Funds`)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n\n  \n\n\n\nCode\ncure_exp2022 %&gt;% #expenditures per year\n  group_by(`FY_Spent`)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n\n  \n\n\n\nCode\ncure_exp2022 %&gt;% \n  group_by(`FF_Cat`)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n\n  \n\n\n\nCode\ncure_exp2022 %&gt;% \n  group_by(Law)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n\n  \n\n\n\nCode\ncure_exp2022 %&gt;% \n  group_by(Law, FY_Spent, FF_Cat2)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`)) %&gt;%\n  pivot_wider(names_from = FY_Spent, values_from = Expenditures) \n\n\n\n  \n\n\n\nCode\ncure_exp2022 %&gt;% \n  group_by(Law, FY_Received)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`)) %&gt;%\n  pivot_wider(names_from = Law, values_from = Expenditures) %&gt;% arrange(FY_Received)\n\n\n\n  \n\n\n\nCode\ncure_exp2022 %&gt;% \n  group_by(Law, FY_Spent)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`)) %&gt;%\n  pivot_wider(names_from = Law, values_from = Expenditures) %&gt;%\n  arrange(FY_Spent)\n\n\n\n  \n\n\n\n\n\n11.2.3 State CURE Expenditures with FY2023 and beyond allocations\nGraphs below include how money has been spent through FY22 with unspent funds labeled as FY2023+. Only State CURE funds are included. ESSER and other federal grants to state departments are excluded. Funds may be used for expenses obligated through December 31, 2024 and expended by December 31, 2026.\nAn additional $254 million is expected to come to Illinois from the Coronavirus Capital Projects Fund to be used for Connect Illinois broadband projects (GOMB December 2022 LBOC report). This has been left out of all graphs and summaries.\n\n\n$3.54 Billion received in FY20 for State Fiscal Recovery Fund (SFRF)+ $11.8 billion received in FY22 = $15.3 billion total expenditures and allocations included in this image.\nAround $10.8 billion has gone into the State CURE fund (Coronavirus Relief Funds (CRF) and SFRF into the State CURE fund) and another $4.5 billion was received by State Departments (mostly ISBE for K-12 )\nSo far, over $13 billion has been spent.\n\n$2.7 billion was spent in FY21 and $8.5 Billion was spent in FY22.\nThe remaining $2 Billion State CURE funds have been fully allocated and some have been spent already in FY23 ($500 million transferred to General Revenue for “Lost Revenue” during COVID disruption, remaining dollars on programs and services).\n\n\n\n\nCode\n# cure_exp2023 keeps State CURE only!\ncure_exp2023 &lt;- cure_exp %&gt;%\n  filter(State_local == \"State CURE\") %&gt;%\n  mutate(Law = factor(Law, levels = c(\"CARES\", \"ARPA\")),\n         FY_Spent = factor(FY_Spent, levels = c(\"2020\", \"2021\", \"2022\", \"2023\")),\n         FY_Received = factor(FY_Received, levels = c(\"2020\", \"2021\", \"2022\")),\n        FF_Cat = factor(FF_Cat, levels = c(\"Econ Dev\", \"Human Services\", \"K-12\", \"Local Transfers\", \"Public Health\", \"Medicare\", \"Public Safety\", \"Transportation\", \"Reimbursements\",  \"UI Fund\", \"Capital Projects\", \"Lost Revenue\", \"FY23+\")),\n        FF_Cat2 = factor(FF_Cat2, levels = c(\"Econ Dev\", \"Human Services\", \"K-12\", \"Local Transfers\", \"Public Health & Safety\", \"Medicaid\", \"Medicare\", \"Transportation\", \"Reimbursements\", \"UI Fund\", \"Capital Projects\", \"Lost Revenue\",\"FY23+\"))\n      )\n\n\ncure_exp2023 &lt;- cure_exp2023 %&gt;% \n  group_by(State_local) %&gt;% \n  mutate(pct = `FY Expenditures` / sum(`FY Expenditures`))\n\ncure_exp2023 %&gt;% \n  filter(State_local == \"State CURE\")%&gt;% \n  summarize(sum=sum(`FY Expenditures`))\n\n\n\n  \n\n\n\nCode\ncure_exp2023 %&gt;% \n  filter(State_local == \"State CURE\") %&gt;%\n  ggplot(aes(y = pct, \n             axis4 = FY_Received, \n             axis3 = Agency,  \n             axis2 = FY_Spent, \n             axis1 = FF_Cat)) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  coord_flip()+\n  theme_void() + \n  theme(legend.position=\"bottom\")+\n # geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  geom_text(aes(label = paste0(..stratum.., \"\\n\", scales::percent(..count.., accuracy = .1))), stat = \"stratum\", reverse=FALSE, size=2) +\n\n # geom_text(stat = \"stratum\", aes(label = scales::dollar(after_stat(stratum),accuracy =0.01)), size = 2, nudge_x = 0.4) +\n\n  labs(title = \"Expenditures & Allocations of State CURE fund = 11.6 Billion\", \n  subtitle = \"Year Received by State Department, Year Spent, and Expenditure Purpose\", \n  caption = \"Expenditures occured during FY20, FY21 and FY22. \n       Additional funds will continue to be spent in FY23-FY26.\")\n\n\n\n\n\n\n\n\n\nCode\ncure_exp2023 %&gt;% \n  filter(State_local == \"State CURE\") %&gt;%\n  ggplot(aes(y = round(`FY Expenditures`, digits=2), \n             axis4 = FY_Received, \n             axis3 = Agency_grouped,  \n             axis2 = FY_Spent, \n             axis1 = FF_Cat2)) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  coord_flip()+\n  theme_void() + \n  theme(legend.position=\"bottom\")+\n geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n#  geom_text(aes(label = paste0(..stratum.., \"\\n\", scales::percent(..count.., accuracy = .1))), stat = \"stratum\") +\n\n # geom_text(stat = \"stratum\", aes(label = scales::dollar(after_stat(stratum),accuracy =0.01)), size = 2, nudge_x = 0.4) +\n\n  labs(title = \"(Same as above but without percentages)Expenditures using State CURE funds\", \n  subtitle = \"Year Received by State Department, Year Spent, and how it was spent so far\", caption = \"Expenditures occured during FY21 and FY22. \n       Additional funds will continue to be spent in FY23-FY26.\")\n\n\n\n\n\n\n\n\n\nCode\n#5 levels with labels\nggplot(cure_exp2023, \n       aes(y = `FY Expenditures`,  \n           axis6 = `Federal Funds`, \n           axis5=State_local2, \n      #     axis4 = `FY_Received`,\n           axis3 = Agency_grouped, \n           axis2 = FY_Spent, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+  coord_flip()+\n  scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n  theme(legend.position = \"bottom\")+\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) + \n  labs(title = \"$11.6 Billion in Expenditures and Allocations from Federal Stimulus Packages\",\n       subtitle = \"Only State CURE funds are included in image\")\n\n\n\n\n\n\n\n\n\nCode\n#5 levels with labels\nggplot(cure_exp2023, \n       aes(y = `FY Expenditures`,  \n           axis6 = `Federal Funds`, axis5=State_local2, \n         axis3 = Agency_grouped, \n           axis2 = FY_Spent, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = FY_Spent), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+  coord_flip()+\n  scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n  theme(legend.position = \"bottom\")+\n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) + \n  labs(title = \"$11.6 Billion in Expenditures and Allocations from Federal Stimulus Packages\",\n       subtitle = \"Only State CURE funds are included in image\")\n\n\n\n\n\n\n\n\n\nCode\n#4 levels with labels\n\n\n# State CURE funds only\ncure_exp2023 %&gt;% \n  filter(State_local2 == \"State\") %&gt;%\nggplot(aes(y = `FY Expenditures`, \n           axis4 = `Federal Funds`,  axis3 = Agency_grouped, \n           axis2 = FY_Spent, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+  coord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n  theme(legend.position = \"bottom\")+\n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) + \n  labs(title = \"$11.6 Billion in Expenditures and Allocations from Federal Stimulus Packages\", \n          caption =\" Expenditures and Allocations match State CURE revenues from CARES and ARP Acts.\")\n\n\n\n\n\n\n\n\n\nCode\ncure_exp2023 %&gt;% \n  filter(State_local == \"State CURE\") %&gt;% # for only state CURE funds\n  ggplot(aes(y = `FY Expenditures`, axis4 = FY_Received, axis3 = `Agency`,  \n             axis2 = FY_Spent, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = FF_Cat2), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n  scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n  theme(legend.position=\"bottom\", legend.title = element_blank())+\n  \n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  labs(title = \"Expenditures using State CURE funds: $8.4 of $11.6 Billion spent FY20-FY22\", \n  subtitle = \"Year Received by State Department, Year Spent, and how it was spent so far\", \n  caption = \"Public Health & Public Safety combined due to overlap with IEMA's involvemnt in pandemic response.\")\n\n\n\n\n\n\n\n\n\nCode\ncure_exp2023 %&gt;% \n  filter(State_local == \"State CURE\") %&gt;% # for only state CURE funds\n  ggplot(aes(y = `FY Expenditures`, axis4 = FY_Received,  \n             axis2 = FY_Spent, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = FF_Cat2), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n  scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() + \n  theme(legend.position=\"bottom\", legend.title = element_blank())+\n  \n  geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  labs(title = \"Expenditures using State CURE funds: $8.4 of $11.6 Billion spent FY20-FY22\", \n  subtitle = \"Year Received by State Department, Year Spent, and how it was spent so far\", \n  caption = \"Public Health & Public Safety combined due to overlap with IEMA's involvemnt in pandemic response.\")\n\n\n\n\n\n\n\n\n\nCode\nbrewer.pal(n = 8, name = 'YlOrRd')\n\n\n[1] \"#FFFFCC\" \"#FFEDA0\" \"#FED976\" \"#FEB24C\" \"#FD8D3C\" \"#FC4E2A\" \"#E31A1C\"\n[8] \"#B10026\"\n\n\nCode\nspending_plot &lt;- ggplot(cure_exp2023, \n       aes(y = `FY Expenditures`, \n           axis3 = `State_local2`, axis2 = FY_Spent, \n           axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n  scale_fill_manual(values = c(\"#B10026\", \"#FFFFCC\"))+\n  # scale_fill_brewer(palette = \"YlOrRd\")+\n  theme_void() + \n      theme(legend.position = \"bottom\", legend.title = element_blank())+\n\n        geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE) +\n  labs(title = \"ARPA & CARES State CURE funds, Year Spent/Allocated, and Purpose of Expendture\",\n       caption = \"Purpose of Expenditures using Fiscal Futures Categorization. \n       The UI Trust Fund repayments and \n       FY23+ allocations are not included in the Fiscal Gap calculation.\")\n\nspending_plot\n\n\n\n\n\n\n\n\n\nCode\n ggplot(cure_exp2023, \n       aes(y = `FY Expenditures`, \n           axis3 = `State_local2`, axis2 = FY_Spent, \n           axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Law), color = \"black\", reverse=FALSE) +\n  geom_stratum(reverse=FALSE)+\n  coord_flip()+\n  scale_fill_manual(values = c(\"#B10026\", \"#FFFFCC\"))+\n  theme_void() + \n      theme(legend.position = \"bottom\", legend.title = element_blank())+\n  labs(title = \"ARPA & CARES State CURE funds, Year Spent/Allocated, and Purpose of Expendture\")\n\n\n\n\n\n\n\n\n\nPurpose of Expenditures using Fiscal Futures Categorization. The UI Trust Fund repayments and FY23+ allocations are not included in the Fiscal Gap calculation.\n\ncure_exp2023 %&gt;% \n  group_by(FY_Received, Law, `Federal Funds`) %&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n  \n\n\ncure_exp2023 %&gt;% \n  group_by(`FY_Spent`)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n  \n\n\ncure_exp2023 %&gt;%\n  group_by(FF_Cat2)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`))\n\n\n  \n\n\ncure_exp2023 %&gt;%\n  group_by(FF_Cat2, FY_Spent)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`)) %&gt;%\n  pivot_wider(names_from = FY_Spent, values_from = Expenditures)\n\n\n  \n\n\ncure_exp2023 %&gt;% \n  group_by(Law, FY_Spent)%&gt;% \n  summarize(Expenditures=sum(`FY Expenditures`)) %&gt;%\n  pivot_wider(names_from = Law, values_from = Expenditures) %&gt;% \n  arrange(FY_Spent)\n\n\n  \n\n\ncure_exp2023 %&gt;% summarize(Sum=sum(`FY Expenditures`))",
    "crumbs": [
      "About",
      "Illinois State Budget Data",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Federal COVID Money Received</span>"
    ]
  },
  {
    "objectID": "FedMoneyReceived.html#revenue-expenditures-before-and-during-covid-response",
    "href": "FedMoneyReceived.html#revenue-expenditures-before-and-during-covid-response",
    "title": "11  Federal COVID Money Received",
    "section": "11.3 Revenue & Expenditures Before and During COVID Response",
    "text": "11.3 Revenue & Expenditures Before and During COVID Response\nLooking at Federal Revenue received right before and during the pandemic:\nAll revenue sources within “Federal - Other” source.\nNote: Increased Matching Grant and Medicaid Continuous Coverage Requirement dollars all count as Federal Medicare Revenue.\n\n\nCode\n# all Federal revenue source observations after 2018\nrev_temp %&gt;% \n  filter(rev_type == \"57\" & fy &gt;2018) %&gt;% \n  group_by(fund_name, source_name_AWM,  fy) %&gt;% \n  summarize(receipts =sum(receipts)) %&gt;% \n  arrange(fy, -receipts) %&gt;% \n  pivot_wider(names_from = fy, values_from = receipts)\n\n\n\n  \n\n\n\nCode\n# brought all federal revenue into a separate dataframe to look at it more closely\nfed_rev_compare &lt;- \n  rev_temp %&gt;% filter((rev_type == \"57\" | rev_type == \"58\" | rev_type == \"59\") & (fy == 2022 | fy==2021 | fy==2020 | fy == 2019)) %&gt;%  arrange(-receipts)\n\n# write_csv(fed_rev_compare, \"comparefedrev.csv\")\n\n\n# all Federal Stimulus Package revenue sources\n# State CURE items from CARES and ARPA & Great Recession federal aid\nrev_temp %&gt;% \n  filter(source_name_AWM == \"FEDERAL STIMULUS PACKAGE\") %&gt;% \n  group_by(fy, fund_name) %&gt;% \n  summarize(receipts =sum(receipts)) %&gt;% \n  arrange(-fy)\n\n\n\n  \n\n\n\nCode\nrev_temp %&gt;% # State CURE items\n  filter(fy &gt; 2018 & source_name_AWM == \"FEDERAL STIMULUS PACKAGE\") %&gt;% \n  group_by(fund_name, fy) %&gt;% \n  summarize(receipts =sum(receipts)) %&gt;% \n  arrange(-receipts)\n\n\n\n  \n\n\n\nCode\n# looks at ISBE federal funding after 2018\n# gives a sort of base comparison of funding before pandemic\n# ESSER revenue sources had multiple source names so lots of scrolling and CTRL-F searching was done\nrev_temp %&gt;% \n  filter(rev_type == \"57\" & fy &gt; 2018 & fund_name == \"SBE FEDERAL DEPT OF EDUCATION\") %&gt;%\n  group_by(source_name_AWM , fund_name, fy) %&gt;% \n  summarize(receipts =sum(receipts)) %&gt;% \n  arrange(-receipts)\n\n\n\n  \n\n\n\n\nexp_temp &lt;- read_csv(\"./data/exp_temp.csv\") %&gt;% \n  filter(agency!= \"799\") %&gt;% mutate(fund_name = fund_name_ab)\n\nexp_temp %&gt;% \n  filter(fy &gt;2019 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\" | fund_name == \"SBE FEDERAL DEPT OF EDUCATION\" | fund_name == \"DISASTER RESPONSE AND RECOVERY\" | fund_name == \"ESSENTIAL GOVT SERV SUPPORT\" )) %&gt;% \n  group_by(fy, agency_name, wh_approp_name, fund_name) %&gt;% \n  summarize(sum=sum(expenditure),\n            appropriated = sum(appn_net_xfer)) %&gt;% \n  arrange(-appropriated)\n\n\n  \n\n\nexp_temp %&gt;% filter(fy &gt;2018 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\" | fund_name == \"SBE FEDERAL DEPT OF EDUCATION\" | fund_name == \"DISASTER RESPONSE AND RECOVERY\" | fund_name == \"ESSENTIAL GOVT SERV SUPPORT\" )) %&gt;% \n  group_by(fy, wh_approp_name, fund_name) %&gt;% \n  summarize(sum=sum(expenditure),\n            appropriated = sum(appn_net_xfer)) %&gt;% \n  arrange(-sum)\n\n\n  \n\n\nexp_temp %&gt;% filter(fy &gt;2019 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\" | fund_name == \"SBE FEDERAL DEPT OF EDUCATION\" | fund_name == \"DISASTER RESPONSE AND RECOVERY\" | fund_name == \"ESSENTIAL GOVT SERV SUPPORT\" )) %&gt;% \n  group_by(fund_name, fy, agency_name) %&gt;% \n  summarize(sum=sum(expenditure),\n            appropriated = sum(appn_net_xfer)) %&gt;% \n  arrange(-appropriated)\n\n\n  \n\n\nexp_temp %&gt;% filter(fy == 2023 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %&gt;% group_by(org_name, agency_name, # object,\n                                                                                                       wh_approp_name, fund_name) %&gt;% summarize(sum=sum(expenditure)) %&gt;% arrange(-sum)\n\n\n  \n\n\nexp_temp %&gt;% filter(fy == 2023 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %&gt;% group_by(agency_name, # object, \n                                                                                                       wh_approp_name, fund_name) %&gt;% summarize(sum=sum(expenditure)) %&gt;% arrange(-sum)\n\n\n  \n\n\nexp_temp %&gt;% filter(fy == 2023 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %&gt;% group_by(fund_name, #object, \n                                                                                                       org_name) %&gt;% summarize(sum=sum(expenditure)) %&gt;% arrange(-sum)\n\n\n  \n\n\nexp_temp %&gt;% filter(fy == 2023 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %&gt;% group_by(fund_name, agency_name) %&gt;% summarize(sum=sum(expenditure)) %&gt;% arrange(-sum)\n\n\n  \n\n\nexp_temp %&gt;% filter(fy == 2023 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %&gt;% group_by(agency_name) %&gt;% summarize(sum=sum(expenditure)) %&gt;% arrange(-sum)\n\n\n  \n\n\nexp_temp %&gt;% filter(fy == 2021 & (fund_name == \"STATE CURE\" | fund_name == \"LOCAL CURE\")) %&gt;% group_by(wh_approp_name, fund_name) %&gt;% summarize(sum=sum(expenditure)) %&gt;% arrange(-sum)\n\n\n  \n\n\n## Looking at ESSER funds spent per year## \n\nexp_temp %&gt;% filter(fy &gt;2018 & fund_name == \"SBE FEDERAL DEPT OF EDUCATION\" & agency_name == \"STATE BOARD OF EDUCATION\") %&gt;% group_by(wh_approp_name) %&gt;% summarize(expenditures = sum(expenditure))\n\n\n  \n\n\nK12_ESSER_words &lt;- c(\"CRRSA\",\"ESSER\",\"EMER R\")\n\nK12 &lt;- exp_temp %&gt;% \n  filter(agency_name == \"STATE BOARD OF EDUCATION\") %&gt;%\n  mutate(ESSERfunds = case_when(\n    str_detect(wh_approp_name, \"CRRSA\") ~ \"ESSER\",\n    str_detect(wh_approp_name, \"ESSER\") ~ \"ESSER\",\n    str_detect(wh_approp_name, \"EMER R\") ~ \"ESSER\",\n    str_detect(wh_approp_name, \"EMR R\") ~ \"ESSER\",\n    str_detect(wh_approp_name, \"CARES\") ~ \"ESSER\",\n    str_detect(wh_approp_name, \"AMER R\") ~ \"ESSER\",\n    str_detect(wh_approp_name, \"EMER ED\") ~ \"ESSER\",\n    \n    TRUE ~ 'notesser')) %&gt;%\n  filter(ESSERfunds == \"ESSER\")\n\nK12 %&gt;% summarize(esser_spent = sum(expenditure))\n\n\n  \n\n\nK12 %&gt;% group_by(fy) %&gt;% summarize(esser_spent = sum(expenditure))\n\n\n  \n\n\nK12 %&gt;% group_by(fy, wh_approp_name) %&gt;% summarize(esser_spent = sum(expenditure))",
    "crumbs": [
      "About",
      "Illinois State Budget Data",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Federal COVID Money Received</span>"
    ]
  },
  {
    "objectID": "FedMoneyReceived.html#sec-covid-money-tracker",
    "href": "FedMoneyReceived.html#sec-covid-money-tracker",
    "title": "11  Federal COVID Money Received",
    "section": "11.4 COVID Money Tracker Data - Dollars Committed To Illinois",
    "text": "11.4 COVID Money Tracker Data - Dollars Committed To Illinois\nData was downloaded from COVIDMoneyTracker.org for the State of Illinois. Values reflect the amount committed and not all funds have been disbursed yet. It does not include aid for households or loans to businesses. Data file is named federalcoviddollars.xlsx in Github page used to create this website.\nPivot tables were made in Excel first and then code was written to make the process easier to replicate.\nIf the only filter applied is State == Illinois, total Committed is over $152 billion.\nLevel 2 != Direct Payments (the stimulus checks)\nDisbursement type != Loan or Aid to Individual\n\n\nCode\nCMT_data &lt;- read_excel(covidmoneytracker_20221209.xlsx, sheet = \"Illinois_data\")\n\nrecipienttype_remove &lt;- (\"Financial Sector\", \"Large Business\", \"Pharmaceutical & Biotech\")\n\nprograms_keep &lt;- c(\"Capital Investment Grants Program\",\n\"Child Care & Development Block Grant\",\n\"Child Care Stabilization Grant Program\", \n\"Coronavirus State and Local Fiscal Recovery Funds\",\n\"Economic Injury Disaster Loan Advance\",\n\"Education Stabilization Fund\",\n\"Emergency Assistance for Non-Public Schools\",\n\"Federal Transit Administration\",\n\"Payroll Support Program\",\n\"Restaurant Revitalization Fund\",\n\"State Small Business Credit Initiative\",\n\"Supplemental Nutrition Assistance Program\",\n\"Temporary Assistance for Needy Families\",\n\"Community Services Block Grant\",\n \"Coronavirus Relief Fund\",\n\"Governor's Emergency Education Relief Fund (part of Education Stabilization Fund)\",\n\"Payroll Support Program\",\n\"Supplemental Nutrition Assistance Program\", \"Unemployment Insurance\", \"Medicaid\"\n)\n\n\nCMT_data %&gt;% \n  filter(`Recipient State` == \"Illinois\" & \n      !`Recipient Type` %in% recipienttype_remove &\n        !`Level 3` %in% programs_keep &\n    (`Disbursement Type` != \"Aid to Individual\" | `Disbursement Type` != \"Loan\")\n  )\n\n# Coded local governments and state governments in  State_local variable\n\n# Code State Departments vs State Government & Local\n\n\n# Gets  close but not a perfect match.\n\n\n\n\n11.4.1 Committed Totals - Including Local Governments\nThe graphs below focus on when the money from each Federal Act arrived and where it was received (local governments, the State government, or directly to a state department) and the spending category that it would be considered using the Fiscal Futures categorization. The State government received $11.7 billion, state departments received $31.4 billion, and local governments received $8.9 billion between FY 2020 and FY 2022. Not all funds have been distributed by the federal government, but they have been committed on the federal level and allocated on the state level.\nThe $52 billion total includes Illinois state and local governments (counties, cities, universities, and transit districts) and healthcare providers in the state. Other forms of federal assistance are not included in the totals or graphs (i.e. stimulus checks, unemployment insurance assistance for individuals, and the Paycheck Protection Program are excluded from these totals). Summed values from COVIDmoneytracker.org and LBOC December 2022 report match.\nLegislation total funds (when including local government aid) were: ARPA = $25.6 Billion; CARES = $15.7 Billion; Families First = $4.5 Billion; PPP & Health Care = $2.8 Billion; Response & Relief = $3.4 Billion.\n\n\nOld image - Federal Transportation amount is incorrect and should be part of Local Transfers.\n\n\n\nLocal Governments within Illinois received $8.9 billion for economic recovery but we do not include funds given straight to localities in our State COVID recovery fund calculations or Fiscal Gap analysis.\nAdditional labels were added using Publisher to create the image above. Preliminary graphs and summed values for the image are calculated in the code chunk below:\n\nsankeydata &lt;- read_excel(\"./data/federalcoviddollars.xlsx\")\n\nsankey &lt;- sankeydata %&gt;% \n  #select(Federal, StateFunds, StFund, Expenditures, stfundname, value, Notes) %&gt;%\n  #  filter(StFund == \"Total\") %&gt;%\n\n  mutate(StateFunds = factor(FY, levels = c( \"FY20\", \"FY21\", \"FY22\", \"FY23\")),\n        Legislation2 = factor(Legislation2, levels = c( \"Other\", \"CARES\", \"CRRSA\", \"ARPA\")),\n                              Legislation = factor(Legislation, levels = c( \"CARES\", \"FFCRA\",\"PPP\", \"CRRSA\", \"ARPA\"))\n)\n         \n                 #  Expenditures = factor(Expenditures, levels = c(\"Community Development\", \"Public Health\", \"Medicaid\", \"K-12\", \"Federal Other\", \"Transit\")),\n      #   Notes = factor(Notes, levels = c(  \"CARES\", \"Other *\",\"CRRSA\", \"ARPA\")))\n\n\nggplot(sankey, \n       aes(y = `Dollars Received`, axis3 = FY, axis2 = `Broad Category`, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Legislation), color = \"black\", reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE) +\ncoord_flip() +\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1) +\n  theme_void() +\n     geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n    theme(legend.position = \"bottom\") +\n  labs(title = \"$52 Billion in Federal Aid has been Committed to Illinois\", subtitle = \"State Fiscal Years 2020-2022\")\n\n\n\n\n\n\n\nggplot(sankey, \n       aes(y = `Dollars Received`, axis3 = FY, axis1 = `Broad Category`, axis2=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Legislation), color = \"black\", reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE) +\ncoord_flip() +\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1) +\n  theme_void() +\n     geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n    theme(legend.position = \"bottom\") +\n  labs(title = \"$52 Billion in Federal Aid has been Committed to Illinois\", subtitle = \"State Fiscal Years 2020-2022\")\n\n\n\n\n\n\n\nsankey %&gt;% \n  group_by(FY) %&gt;% \n  summarize(sum=sum(`Dollars Received`))\n\n\n  \n\n\nsankey %&gt;% \n  group_by(Legislation) %&gt;% \n  summarize(sum=sum(`Dollars Received`))\n\n\n  \n\n\nsankey %&gt;% \n  group_by(`Broad Category`) %&gt;% \n  summarize(sum=sum(`Dollars Received`))\n\n\n  \n\n\nsankey %&gt;% \n  group_by(Legislation, FF_Cat2) %&gt;% \n  summarize(sum=sum(`Dollars Received`))\n\n\n  \n\n\nsankey %&gt;% \n  group_by(FF_Cat2) %&gt;% \n  summarize(sum=sum(`Dollars Received`))\n\n\n  \n\n\nsankey %&gt;% \n  group_by(Legislation, `Broad Category`,FF_Cat2) %&gt;% \n  summarize(sum=sum(`Dollars Received`))\n\n\n  \n\n\nsankey %&gt;% \n  group_by(FY, FF_Cat2) %&gt;% \n  summarize(sum=sum(`Dollars Received`)) %&gt;% \n  pivot_wider(names_from=\"FY\", values_from = sum)\n\n\n  \n\n\n\nIllinois received $11.6 billion dollars from State Fiscal Recovery Funds into its State CURE fund and also received $31.4 billion in other federal revenue to Illinois State departments. This other federal revenue frequently came in the form of increased or new grants to many State Departments that normally receive federal funding.\n\n\n11.4.2 Committed Totals - Excluding Local Government Funds\nBelow is a graph showing federal stimulus money that was committed in each year, the federal agency/fund that it came from, and what kind of revenue it was considered (Federal Other, transportation, or medicaid) who received the money (e.g. the State of Illinois, Department of Human Services, Local Governments, etc.). Again, these graphs show the funds that were committed to Illinois and their intended purpose, NOT the data on how or when it was spent.\nWhen Local Funds are included, $15.7 billion was received in FY20, $7.24 billion in FY21, and $29 billion was received in FY22 from multiple COVID response Federal Acts.\nAround $43 billion went to the state and $8.8 billion went to straight to local governments. When excluding the money that went straight to local governments, the state received $12.7 billion in FY20 (CARES Act), $7.24 billion in FY21, and $23 billion was committed in FY22 (ARP Act). This includes both State CURE funds that had more flexibility in how they were spent as well as the grants and that went to State Departments for specific purposes.\nThe code below creates same graph as above but funds that went straight to Local Governments (cities and counties) are dropped from the totals.\n\nsankey %&gt;% \n  filter(FF_Cat2!= \"Excluded\") %&gt;%\n\n  ggplot(aes(y = `Dollars Received`, axis3 = FY, axis2 = `Broad Category`, axis1=FF_Cat2, label = \"stratum\")) +\n  geom_flow(aes(fill = Legislation), color = \"black\", reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\ncoord_flip()+\n   scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n     geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), size = 2, reverse=FALSE)+\n    theme(legend.position = \"bottom\")+\n  ggtitle(\"Without Local government relief:\n          $12.7 Billion in FY20, $7 Billion in FY21, and $23 Billion in FY22 Committed to Illinois\")\n\n\n\n\n\n\n\nsankey %&gt;% filter(FF_Cat2!= \"Excluded\") %&gt;%\n  ggplot(aes(y = `Dollars Received`, axis4 = FY, axis3= `Category`,  axis1=FF_Cat2\n          # , label = \"stratum\"\n           )) +\n  geom_flow(aes(fill = Legislation, label = \"flow\"), \n            color = \"black\", reverse=FALSE) +\n # guides(fill = FALSE) +   \n  geom_stratum(reverse=FALSE)+\n     geom_text(stat = \"stratum\", aes(label = after_stat(stratum)), \n               size = 3, reverse=FALSE)+\n  coord_flip()+\n  scale_fill_brewer(palette = \"YlOrRd\", direction = -1)+\n  theme_void() +\n  theme(legend.position = \"bottom\", legend.title=element_blank())+\n  ggtitle(\"Without Local government relief:\n          $12.7 Billion in FY20, $7.3 Billion in FY21, and $21.5 Billion in FY22 Committed to Illinois\")\n\n\n\n\n\n\n\n# without local government CURE funds\nsankey %&gt;% \n  filter(FF_Cat2 != \"Excluded\") %&gt;% \n  group_by(FY)%&gt;%\n  summarize(TotalReceived=sum(`Dollars Received`))\n\n\n  \n\n\n\n\nsankey %&gt;% group_by(FY)%&gt;%summarize(TotalReceived=sum(`Dollars Received`))\n\n\n  \n\n\nsankey %&gt;% group_by(Legislation)%&gt;%summarize(TotalReceived=sum(`Dollars Received`))\n\n\n  \n\n\nsankey %&gt;% group_by(Recipient)%&gt;%summarize(TotalReceived=sum(`Dollars Received`))\n\n\n  \n\n\nsankey %&gt;% group_by(FF_Cat)%&gt;%summarize(TotalReceived=sum(`Dollars Received`))\n\n\n  \n\n\nsankey %&gt;% group_by(Legislation, Recipient)%&gt;%summarize(TotalReceived=sum(`Dollars Received`)) %&gt;% pivot_wider(names_from = Legislation, values_from = TotalReceived)\n\n\n  \n\n\nsankey %&gt;% group_by(Legislation, FF_Cat)%&gt;%summarize(TotalReceived=sum(`Dollars Received`)) %&gt;% pivot_wider(names_from = Legislation, values_from = TotalReceived)\n\n\n  \n\n\nsankey %&gt;% group_by(FY, FF_Cat)%&gt;%summarize(TotalReceived=sum(`Dollars Received`)) %&gt;% pivot_wider(names_from = FY, values_from = TotalReceived)\n\n\n  \n\n\nsankey %&gt;% group_by(Legislation, FF_Cat2)%&gt;%summarize(TotalReceived=sum(`Dollars Received`)) %&gt;% pivot_wider(names_from = Legislation, values_from = TotalReceived)\n\n\n  \n\n\nsankey %&gt;% group_by(FY, FF_Cat2)%&gt;%summarize(TotalReceived=sum(`Dollars Received`)) %&gt;% pivot_wider(names_from = FY, values_from = TotalReceived)\n\n\n  \n\n\n\n\n11.4.2.1 Notes on Sankey Graphs\nggsankey info and example\n\nA little information on Sankey graphs is below:\n\nThe axis is how the observations are grouped at each step. There are multiple axes.\nStrata are the options that exist for each level. (e.g. Year received can be 2021 or 2022)\nAlluvium correspond to the fixed value of each axis variable. Proportional to how the sum of however you are grouping your data.\nFlows are the segments of the alluvia between adjacent axes.",
    "crumbs": [
      "About",
      "Illinois State Budget Data",
      "<span class='chapter-number'>11</span>  <span class='chapter-title'>Federal COVID Money Received</span>"
    ]
  },
  {
    "objectID": "FundsIncluded.html",
    "href": "FundsIncluded.html",
    "title": "12  An All Funds Approach",
    "section": "",
    "text": "12.1 Including or Excluding funds in the Fiscal Futures All Funds Budget\nWhile it is called an “All Funds” Budget, that is a slight exaggeration. Illinois has over 700 funds. Whereas the overwhelming majority are included in our “All Funds” measure, some are not.  The starting point for our list of all funds is all appropriated funds, but, for the reasons listed below, we exclude a handful of appropriated funds and include a number of non-appropriated funds.1\nPreliminary expenditure and revenue data is requested after the Fiscal Year ends, and the requested again at the end of the lapse period.2 Calculations are based off the values received from the data received after October 31st when Illinois’ lapse period ends.\nCriterion 1: INCLUDE IF the fund collects a state-levied tax.\nThe state collects both state-levied taxes and locally levied taxes (typically local-option sales and utility taxes).  The state collects and returns local taxes to the local governments.  Upon receipt, local tax revenues are deposited into specifically-designated, non-appropriated state trust funds.  In cases where the state is solely acting as a collection agent for a local taxing body, this receiving trust fund, its revenue and distribution (expenditure) is NOT counted in our analytical frame.  If the tax is collected for the state, the fund and its revenue IS counted in our analytical frame.\nCriterion 2:  INCLUDE IF the fund supports a state function.\nNon-appropriated funds may support state functions such as education, social services, transportation, public facilities, regulation, natural resources, and law enforcement.  Generally these are trust funds that hold federal dollars for a specified state project or purpose.  This category of non-appropriated funds is essentially the same as a large group of appropriated state and federal trust funds.  Because we are counting federal dollars as revenue, it would be inconsistent to count the appropriated funds, but not the non-appropriated funds that do essentially the same thing.\nCriterion 3:  EXCLUDE IF the fund is a holding fund for individuals.\nMany funds are used to hold monies that belong to individuals, not the state.  Most of these funds are non-appropriated, but some are appropriated.  Examples of appropriated funds that we exclude from the frame are child support collection funds or employee pension own-contribution funds.  These funds are holding money that belongs to an individual and will be returned to the person, or used for a payment on behalf of that person, at a later date.\nCriterion 4:  EXCLUDE IF the fund’s expenditures or revenues have been counted elsewhere (i.e., avoid double-counting).\nIn some cases, funds receive and disburse money that was already counted as revenues to or expenditures from other funds.  For example, the Commercial Consolidation Fund is a huge fund that distributes state benefit payments to individuals, service providers, and local governments by direct deposit.  Payments into this fund are counted, distributions from this fund are not.\nCriterion 5:  EXCLUDE IF the fund holds designated user fees targeted for a specific purpose that is not a public function (conduit).\nTypically we have excluded non-appropriated funds that hold designated user fees that are directed to a specific purpose that is not a necessary public function.  These funds can be considered a conduit and we did not add these to the frame.  For example, we exclude Fund 0098, which collects fees from harness race entrants at the state fair and then pays them out to race winners.\nCriterion 6:  INCLUDE IF the fund collects a user fee that supports a large, important state function (state function trumps user fee).\nNon-appropriated funds that are supported by user fees AND perform a state function (e.g., transportation) ARE counted in the frame.  The rationale for this is that the state function would have to be performed even if the user fee and the fund structure did not exist.  The biggest example is the Illinois State Toll Highway Revenue Fund, which collects tolls and supports the expansion and maintenance of Illinois toll roads.\nCriterion 7:  EXCLUDE IF unclear information, dead fund, small amounts. Some funds are defunct, and our historical information on fund descriptions does not include pre-2005 designations. Fund numbers are re-used, making it impossible to determine the original purpose of some older, defunct funds.  These funds generally appear to be very small.  Because we are projecting forward from the most recently completed fiscal year, we assumed that these funds would not be in the frame.\nCode\nfunds &lt;- read_xlsx(\"data/funds_ab_in_2023.xlsx\")\n\ntable &lt;- funds %&gt;% select(fund_ioc, fund, fund_name_ab, in_ff)\n\ndatatable(\n  table, rownames = FALSE,\n  colnames = c('IOC Fund Number' = 'fund_ioc', 'Recoded Fund Number'='fund',  \n               'Fund Name' = 'fund_name_ab', 'Included in Gap Calculation' = 'in_ff' ),\n  #caption = \"Table 1: Past and Present IOC Fund Numbers and Names\", \n  options = list(iDisplayLength = 50, dom = 'Blfrtip',\n                 buttons = c('copy', 'csv', 'excel', 'pdf', 'print'),\n                 lengthMenu = list(c(10,30, 50, -1), \n                                   c('10', '30', '50', 'All')),\n                 paging = T),\n  extensions = 'Buttons'\n  \n)\n\n\n\n\nTable 12.1: Past and Present IOC Fund Numbers and Names",
    "crumbs": [
      "About",
      "Methodology",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>An All Funds Approach</span>"
    ]
  },
  {
    "objectID": "FundsIncluded.html#footnotes",
    "href": "FundsIncluded.html#footnotes",
    "title": "12  An All Funds Approach",
    "section": "",
    "text": "Fiscal Futures Project Documentation. (2016). Institute of Government and Public Affairs, University of Illinois System. https://igpa.uillinois.edu/fiscal-futures-project-documentation/. Last document posted online. Updated by Richard Dye.↩︎\n“Closed” year:  accounts have been reconciled and reported as final.\n“Lapse period:”  June 30 fiscal year end date has passed, but books remain open 3-6 months to settle obligations.\n“Open” year:  accounts are still subject to revision and reconciliation (includes lapse period).\n“Current” year: fiscal year has begun (July 1) but not yet ended (June 30).\n“Upcoming” year: next fiscal year for which have actual or proposed appropriations and official revenue estimates.\n“Projection” year: future years for which model is used to project expenditure and revenue by category. ↩︎",
    "crumbs": [
      "About",
      "Methodology",
      "<span class='chapter-number'>12</span>  <span class='chapter-title'>An All Funds Approach</span>"
    ]
  },
  {
    "objectID": "code-cleaning.html",
    "href": "code-cleaning.html",
    "title": "13  Gathering and Cleaning Data!",
    "section": "",
    "text": "Information for the Fiscal Futures all funds database comes from detailed information provided by the Illinois Comptroller’s office.  Currently the database includes 300,000 individual records for fiscal years 1998 to 2022.\n\nDo the FOIA request. In a week or so, they send the expenditure and revenue data as excel files.\nChecks whether there are any new agencies, re-used funds etc. Create a list of funds, agencies, fund names, etc. for the new year and compare it to the immediate prior year to identify new funds.\nUpdate the funds_ab_in file which shows the use of funds. Use criteria to determine if the new funds should be in or out of the all-funds frame.\nChange the variable names to be consistent with other files such as AGENCYNAME –&gt; agency_name\nOnce variable names are shared over all years of data, combine past years with newest year. All revenue files are in a `revenue` folder that I reference when I set the working directory. When adding new fiscal years, put the the newest year of data for revenue and expenditures in their respective folders.\n\nNormally, when your receive the new fiscal year files from the Comptrollers office, you will need to change the variable names so that they are consistent with past years. This is an example of reading in the new file and changing the variable names. They seem to change almost every year in the file received from the FOIA so if the code breaks here, check to make sure that the columns you are trying to rename exist and are spelled correctly! Once variables are the same, you will want to save the file as a csv file in its Revenue/Expenditure file and bind all past years and the current year together in one dataframe.\n\n#Example code below: Read in excel file and rename columns so that it plays well with the other years' files.\n\nrevenue_fy23 &lt;- read_xlsx(\"Fis_Fut_Rev_2023_Final.xlsx\") %&gt;% \n  rename(fy = 'FY',\n         fund = 'FUND',\n         fund_name = 'FUND NAME',\n         agency = 'AGENCY',\n         agency_name = 'AGENCY NAME',\n         source = 'REVENUE SOURCE',\n         source_name = 'REV SRC NAME',\n         receipts = 'AMOUNT'\n  ) \n\nexp_fy23 &lt;- read_xlsx(\"Fis_Fut_Exp_2023_Final.xlsx\") %&gt;% \n  rename(fy = 'FY',\n         fund = 'FUND',\n         fund_name = 'FUND NAME',\n         agency = 'AGENCY',\n         agency_name = 'AGENCY NAME',\n         appr_org = 'ORGANIZATION',\n         org_name = 'ORGANIZATION NAME',\n         obj_seq_type = 'APPROPRIATION',\n         wh_approp_name = 'APPROPRIATION NAME',\n        # exp_net_xfer = 'NET OF TRANS AMOUNT',\n         expenditure = 'EXPENDED'\n\n  ) \n\n# %&gt;%\n#   # these come from ioc_source file after merging\n#   mutate(data_source = \"exp IOC Aug 2022\",\n#          object = ,\n#          seq = ,\n#          type = ,\n#          fund_cat = FIND_COLUMN, #create fund_cat column\n#          fund_cat_name = FIND_NAME) # create fund_cat_name column\n\nThe code chunk below takes the .dta files for all fiscal years before FY 2022 and binds them together. Variable names were manually changed by past researchers so that they were consistent across years.\nFor FY 2023 and after, .dta files can be avoided entirely and .csv or excel files will be used. All files before this year had been saved and passed on as .dta files for Stata code before the transition to R in Fall 2022.\n\nFor years after fy22: add line of code to bind csv files after binding the dta files together. Variable names must be identical to merge files together.\n\nCode below reads in the csv files created in chunks above (allrevfiles.csv and allrexpfiles.csv). These files contain all years of data combined into one file BEFORE any recoding is done. Do not use this file for summing categories because it is just an inbetween step before recoding revenue and expenditure categories. It also does not contain changes in funds or agencies.\n\n\nCode\n# combined in past chunks called create-rev-csv and create-exp-csv\n\nallrevfiles23 &lt;- read_csv(\"./data/allrevfiles_Nov132023.csv\") #combined but not recoded\n\nallexpfiles23 &lt;- read_csv(\"./data/allexpfiles_Nov132023.csv\") #combined but not recoded\n\n\n\n13.0.1 Inspecting new FY23 data files\nData files for closed years have been obtained from IOC. The numbers of funds, agencies, organizations, and revenue sources below were found by using pivot tables in the codebook files in the FY2022 Box folder. This could also be done using R and grouping new files by fund, agency, source number, source names, etc..\nRevenue File:\n\n684 Fund Numbers\n80 Agencies\n1184 Revenue source numbers\n1156 revenue source names\n\nExpenditure File:\n\n708 Fund Numbers\n107 Agencies\n98 Organization Numbers\n313 Organization names\n\n\n\n13.0.2 Finding new agencies and funds\nGeneral steps:\n\nIdentify new and reused funds for newest fiscal year.\nRecode funds to take into account different fund numbers/names over the years. See [Recoding New and Reused Funds] for code chunk that does this.\nUpdate fund_ab_in_CURRENTFY.xlsx with any changes from previous fiscal year.\n\nNew Agencies, Funds, and Organizations from Expenditure files:\n\nUsing the code below, I found 2 agencies, multiple funds, and a couple organizations that had not been specifically mentioned in the funds_ab_in file - AWM, FY2022.\nNote: One new org name and org number combo has an expenditure of $600 million for pensions payment.\n\n\n\nCode\n#allrevfiles23 &lt;- read_csv(\"allrevfiles23.csv\") #combined but not recoded\n#allexpfiles23 &lt;- read_csv(\"allexpfiles23.csv\") #combined but not recoded\n\n\n\ncur_fy  &lt;- 2023  # Create variable for current fiscal year to save time for updating in future years.\n\n\n#### From Expenditure Data #####\n\n# agencies referenced in any year before 2023:\nagencies_past &lt;- allexpfiles23 %&gt;% \n  filter(fy &lt; cur_fy) %&gt;% \n  mutate(agency == as.character(agency)) %&gt;% \n  group_by(agency, agency_name) %&gt;% unique() %&gt;% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE)) %&gt;% \n  drop_na() %&gt;% \n  arrange(agency)\n# agencies_past # 148 agencies ever\n\n\n# agencies in 2023 data:\nagencies23 &lt;- allexpfiles23  %&gt;% \n  filter(fy == cur_fy) %&gt;% \n  mutate(agency == as.character(agency)) %&gt;% \n  group_by(agency, agency_name) %&gt;% \n  summarize(expenditure = sum(expenditure, na.rm = TRUE))\n\n\n# 280 and 533 are new agency codes from old code cleaning methodology.\n# When creating fiscal future categories for the fiscal gap, 280 is assigned to Group = 920 ( Judicial) expenditure category\n# 533 was assigned to \"949. Other Boards and Commissions\"\n\n# no new agencies from fy22 to fy23: \nanti_join(agencies23, agencies_past, \n          by = c(\"agency\", \"agency_name\")) %&gt;% \n  arrange(agency)\n\n\n\n\nfunds_past &lt;- allexpfiles23  %&gt;% \n  filter(fy &lt; cur_fy) %&gt;% \n  mutate(fund == as.character(fund)) %&gt;% \n  group_by(fund, fund_name) %&gt;% \n  summarize(count = n(), Expenditure = sum(expenditure, na.rm = TRUE))  %&gt;% \n  drop_na()\n\nfunds23 &lt;- allexpfiles23  %&gt;% \n  filter(fy == cur_fy) %&gt;% \n  mutate(fund == as.character(fund)) %&gt;% \n  group_by(fund, fund_name) %&gt;%  \n  summarize(count = n(), Expenditure = sum(expenditure, na.rm = TRUE)) %&gt;% \n  unique()\n\n\n# 26 funds were in FY23 data that were not in past data:\nanti_join(funds23, funds_past, \n          by = c(\"fund\", \"fund_name\")) %&gt;% \n  arrange(fund)\n# Each year these must examined closely to determine if they are a new fund, a reused fund, or if there is just a slight difference in the name of the fund \n\n\n# orgs_past for orgs in the past =  920 org groups ever\norgs_past &lt;- allexpfiles23  %&gt;% \n  filter(fy &lt; cur_fy) %&gt;% \n  mutate(appr_org == as.character(appr_org)) %&gt;% \n  group_by(appr_org, org_name) %&gt;% unique() %&gt;% \n  summarize(Expenditure = sum(expenditure, na.rm = TRUE)) %&gt;% \n  drop_na()\n\n# orgs_past # 916 org groups ever\norgs23 &lt;- allexpfiles23  %&gt;% \n  filter(fy == cur_fy) %&gt;% \n  mutate(appr_org = as.character(appr_org)) %&gt;% \n  group_by(appr_org, org_name) %&gt;% \n  summarize(Expenditure = sum(expenditure, na.rm = TRUE))\n# orgs22 # 399 org groups this year\n\n\n# 3 org number and org name combos are new for FY2023:\n# Usually not a big deal, orgs are not used much in the gap calculation.\n# but good to stay aware and look for any change that may be important.\nanti_join(orgs23, orgs_past,\n          by = c(\"appr_org\", \"org_name\")) %&gt;% \n  arrange(appr_org)\n\n\n\nLargest change for FY23 was the $184 million Grocery Tax Replacement fund and $20 million for fund 0156.\n\nNew Revenue Funds, Sources, and New Agencies:\n\n\nCode\n#### From Revenue Data ####\n\n\n# agencies_past # 108 agencies ever\nagencies_past &lt;- allrevfiles23  %&gt;% filter(fy &lt; cur_fy) %&gt;% \n  mutate(agency == as.character(agency)) %&gt;% \n  group_by(agency, agency_name) %&gt;% unique() %&gt;% \n  summarize(Receipts = sum(receipts, na.rm = TRUE)) %&gt;% \n  drop_na()\n\n\nagencies23 &lt;- allrevfiles23  %&gt;% \n  filter(fy == cur_fy) %&gt;% \n  mutate(agency == as.character(agency)) %&gt;% \n  group_by(agency, agency_name) %&gt;% \n  summarize(Receipts = sum(receipts, na.rm = TRUE))\n\n\n# Finds 533 and 280 again. \nanti_join(agencies23, agencies_past, by = c(\"agency\", \"agency_name\")) %&gt;% \n  arrange(agency)\n\n\nfunds_past &lt;- allrevfiles23  %&gt;% \n  filter(fy &lt; cur_fy) %&gt;% \n  mutate(fund == as.character(fund)) %&gt;% \n  group_by(fund, fund_name) %&gt;% \n  summarize(count = n(), Receipts = sum(receipts, na.rm = TRUE))  %&gt;% \n  drop_na()\n\nfunds23 &lt;- allrevfiles23  %&gt;% \n  filter(fy == cur_fy) %&gt;% \n  mutate(fund == as.character(fund)) %&gt;% \n  group_by(fund, fund_name) %&gt;%  \n  summarize(count = n(), Receipts = sum(receipts, na.rm = TRUE)) %&gt;% \n  unique() %&gt;% \n  drop_na()\n\n# 13 revenue funds were in FY23 revenue data that were not in past data \n# some could be small fund name changes\nanti_join(funds23, funds_past, by = c(\"fund\", \"fund_name\")) %&gt;% \n  arrange(fund)\n\n\n\nsources_past &lt;- allrevfiles23  %&gt;% \n  filter(fy &lt; cur_fy) %&gt;% \n  mutate(source == as.character(source)) %&gt;% \n  group_by(source, source_name) %&gt;% \n  summarize(count = n(), Receipts = sum(receipts, na.rm = TRUE))  %&gt;% \n  drop_na()\n\nsources23 &lt;- allrevfiles23  %&gt;% \n  filter(fy == cur_fy) %&gt;% \n  mutate(source == as.character(source)) %&gt;% \n  group_by(source, source_name) %&gt;% \n  summarize(count = n(), Receipts = sum(receipts, na.rm = TRUE)) %&gt;% \n  unique()\n\n\n# 16 revenue sources were in FY23 data that were not in past data \n# some could be small source name changes:\nanti_join(sources23, sources_past, by = c(\"source\", \"source_name\")) %&gt;% \n  arrange(source)\n\n\n\n\n13.0.3 Recoding New and Reused Funds\n\n\n\n\n\n\nWarning\n\n\n\nRemember: allrevfiles and allexpfiles contain the data received from the comptroller without recoding agencies or funds that have changed between fiscal years. Variables were renamed when needed to have consistent names but funds and agencies have NOT been recoded for consistency in these files.\n\n\nNew or reused funds were manually added to the funds_ab_in.xlsx file and determined if they should or should not be included in Fiscal Future calculations.\nFor funds that were reused once, a 9 replaces the 0 as the first digit. If reused twice, then the first two values are 10.\n\nEx. 0350 –&gt; 9350 because its use changed.\nEx. 0367 becomes 10367 because its use has changed twice now. There was fund 0367 originally, then its use changed and it was recoded as 9367, and now it changed again so it is a 10367.\nExcel file also has alternative ways to name funds (e.g. 0397-A and 0397-B) and variables for the year that the fund stopped being used.\n\nNew or reused funds revenue file recoding:\n\n# if first character is a 0, replace with a 9 if its purpose has changed\n\nrev_1998_2023 &lt;- allrevfiles23 %&gt;%\n\n      mutate(fund = ifelse(fy &lt; 2002 & fund %in% c(\"0730\", \"0241\", \"0350\", \"0367\", \"0381\", \"0382\", \"0526\", \"0603\", \"0734\", \"0913\", \"0379\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n  \n  mutate(fund = ifelse (fy &lt; 2008 & fund %in% c(\"0027\", \"0033\", \"0037\", \"0058\", \"0062\", \"0066\", \"0075\", \"0083\", \"0116\", \"0119\", \"0120\", \"0122\", \"0148\", \"0149\", \"0157\", \"0158\", \"0166\", \"0194\", \"0201\", \"0209\", \"0211\", \"0217\", \"0223\", \"0231\", \"0234\", \"0253\", \"0320\", \"0503\", \"0505\", \"0512\", \"0516\", \"0531\", \"0532\", \"0533\", \"0547\", \"0563\", \"0579\", \"0591\", \"0606\", \"0616\", \"0624\", \"0659\", \"0662\", \"0665\", \"0676\", \"0710\", \n\n\"0068\", \"0076\", \"0115\", \"0119\", \"0168\", \"0182\", \"0199\", \"0241\", \"0307\", \"0506\", \"0509\", \"0513\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund = ifelse(fy &lt; 2016 & fund %in% c(\"0263\", \"0399\", \"0409\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund =  ifelse(fy &lt; 2017 & fund == \"0364\", str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund =  ifelse(fy &lt; 2018 & fund %in% c(\"0818\", \"0767\", \"0671\", \"0593\", \"0578\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n\n  mutate(fund = ifelse(fy&gt;1999 & fy &lt; 2018 & fund == \"0231\", \"10231\", fund) ) %&gt;%\n  \n\n  mutate(fund = ifelse(fy &lt; 2019 & fund %in% c(\"0161\", \"0489\", \"0500\", \"0612\", \"0893\", \"0766\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund =  ifelse(fy &lt; 2020 & fund %in% c(\"0254\", \"0304\", \"0324\", \"0610\", \"0887\", \"0908\", \"0939\", \"0968\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund =  ifelse(fy &lt; 2021 & fund %in% c(\"0255\", \"0325\", \"0348\", \"0967\", \"0972\"), str_replace(fund, \"0\",\"9\"), fund) ) %&gt;%\n  \n   #2022 changes\n\n  mutate(fund = ifelse(fy &lt; 2022 & fund %in% c(\"0110\",\"0165\",\"0351\", \"0392\", \"0393\", \"0422\", \"0544\", \"0628\", \"0634\",  \"0656\", \"0672\", \"0683\", \"0723\", \"0742\", \"0743\"), str_replace(fund, \"0\",\"9\"), as.character(fund))) %&gt;%  # replaces first 0 it finds with a 9\n\n  mutate(fund = ifelse(fy &lt; 2022 & fund == \"0367\", \"10367\", as.character(fund)) # fund reused for 3rd time\n\n) %&gt;%\n\n  # 2023 fund changes\n  mutate(fund = ifelse(fy &lt; 2023 & fund %in% c(\"0099\",\"0210\",\"0246\", \"0250\", \"0264\", \"0268\", \"0300\", \"0311\", \"0403\", \"0448\",\"0645\", \"0727\", \"0729\", \"0791\"), str_replace(fund,\"0\", \"9\"), as.character(fund))) %&gt;%\n  mutate(fund = ifelse(fy &lt; 2023 & fund == \"0734\" , \"10734\", as.character(fund)),\n         fund = ifelse(fy&lt;2023 & fund == \"0820\", \"10820\", as.character(fund) ) # fund reused for 3rd time\n  ) %&gt;%\n\n #  other fund changes noticed on April 1, 2024\n  mutate(fund = ifelse(fy &lt; 2023 & fund %in% c(\"0490\", \"0684\", \"0747\", \"0869\"), str_replace(fund,\"0\", \"9\"), as.character(fund))) \n\nExpenditure recoding:\n\n\nCode\n# if first character is a 0, replace with a 9\n\nexp_1998_2023 &lt;- allexpfiles23 %&gt;%\n\n      mutate(fund = ifelse(fy &lt; 2002 & fund %in% c(\"0730\", \"0241\", \"0350\", \"0367\", \"0381\", \"0382\", \"0526\", \"0603\", \"0734\", \"0913\", \"0379\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund = ifelse(fy &lt; 2008 & fund %in% c(\"0027\", \"0033\", \"0037\", \"0058\", \"0062\", \"0066\", \"0075\", \"0083\", \"0116\", \"0119\", \"0120\", \"0122\", \"0148\", \"0149\", \"0157\", \"0158\", \"0166\", \"0194\", \"0201\", \"0209\", \"0211\", \"0217\", \"0223\", \"0231\", \"0234\", \"0253\", \"0320\", \"0503\", \"0505\", \"0512\", \"0516\", \"0531\", \"0532\", \"0533\", \"0547\", \"0563\", \"0579\", \"0591\", \"0606\", \"0616\", \"0624\", \"0659\", \"0662\", \"0665\", \"0676\", \"0710\", \n\n\"0068\", \"0076\", \"0115\", \"0119\", \"0168\", \"0182\", \"0199\", \"0241\", \"0307\", \"0506\", \"0509\", \"0513\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n  \n  mutate(fund = ifelse(fy &lt; 2016 & fund %in% c(\"0263\", \"0399\", \"0409\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund =  ifelse(fy &lt; 2017 & fund == \"0364\", str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund =  ifelse(fy &lt; 2018 & fund %in% c(\"0818\", \"0767\", \"0671\", \"0593\", \"0578\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund = ifelse(fy&gt;1999 & fy &lt; 2018 & fund == \"0231\", \"10231\", fund) ) %&gt;%\n  \n  mutate(fund = ifelse(fy &lt; 2019 & fund %in% c(\"0161\", \"0489\", \"0500\", \"0612\", \"0893\", \"0766\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund =  ifelse(fy &lt; 2020 & fund %in% c(\"0254\", \"0304\", \"0324\", \"0610\", \"0887\", \"0908\", \"0939\", \"0968\"), str_replace(fund, \"0\",\"9\"), fund)) %&gt;%\n\n  mutate(fund =  ifelse(fy &lt; 2021 & fund %in% c(\"0255\", \"0325\", \"0348\", \"0967\", \"0972\"), str_replace(fund, \"0\",\"9\"), fund))  %&gt;%\n  \n  #2022 changes\n  mutate(fund = ifelse(fy &lt; 2022 & fund %in% c(\"0110\",\"0165\",\"0351\", \"0392\", \"0393\", \"0422\", \"0544\", \"0628\", \"0634\",  \"0656\", \"0672\", \"0683\",\"0723\", \"0742\", \"0743\"), str_replace(fund, \"0\",\"9\"), as.character(fund))) %&gt;%  # replaces first 0 it finds with a 9\n\n  mutate(fund = ifelse(fy &lt; 2022 & fund == \"0367\", \"10367\", as.character(fund)) # fund reused for 3rd time \n\n  ) %&gt;%\n\n  # 2023 fund changes\n  mutate(fund = ifelse(fy &lt; 2023 & fund %in% c(\"0099\",\"0210\",\"0246\", \"0250\", \"0264\", \"0268\", \"0300\", \"0311\", \"0403\", \"0448\",\"0645\", \"0727\", \"0729\", \"0791\"), str_replace(fund,\"0\", \"9\"), as.character(fund))) %&gt;%\n  mutate(fund = ifelse(fy &lt; 2023 & fund == \"0734\" , \"10734\", as.character(fund)),\n         fund = ifelse(fy&lt;2023 & fund == \"0820\", \"10820\", as.character(fund) ) # fund reused for 3rd time\n  ) %&gt;%\n\n #  other fund changes noticed on April 1, 2024\n  mutate(fund = ifelse(fy &lt; 2023 & fund %in% c(\"0490\", \"0684\", \"0747\", \"0869\"), str_replace(fund,\"0\", \"9\"), as.character(fund))) \n\n\n\n\n\n\n\n\nTip\n\n\n\nThe funds_ab_in.xlsx file contains the following information: all funds that have existed since 1998, if they still exist, indicates if fund numbers have been reused for varying purposes, and is updated yearly with new fund numbers used by the IOC.\n\n\n\n\nCode\nagencies_exp &lt;- exp_1998_2023 %&gt;% \n  distinct(agency, agency_name) %&gt;% \n  filter(!is.na(agency_name)) %&gt;%\n  mutate(agency = as.character(agency))\n\nfunds_exp &lt;- exp_1998_2023 %&gt;% \n  distinct(fund, fund_name) %&gt;% \n  filter(!is.na(fund_name))\n\nfunds_ab_in_2023 = readxl::read_excel(\"data/funds_ab_in_2023.xlsx\")\n\n\nexp_temp &lt;- exp_1998_2023 %&gt;% \n  select(-fund_name) %&gt;%\n  arrange(fund, fy)  %&gt;%\n# join  funds_ab_in_2023  to exp_temp\n  left_join(funds_ab_in_2023, by = \"fund\")\n\n\n\n# Agency == 799 for Statutory transfers \n#  Object == 1993 is for Interfund cash transfers  \nexp_temp &lt;- exp_temp %&gt;% \n  mutate(transfer = ifelse(org_name == \"TRANSFERS\", 1, 0),\n         trans_agency = ifelse(org_name == \"TRANSFERS\", \n                               str_sub(obj_seq_type,1,3), NA),\n         trans_type = ifelse(org_name == \"TRANSFERS\", \n                             str_sub(obj_seq_type, 4,9), NA)) %&gt;%   \n  \n  mutate(\n         object = ifelse(transfer == 0, as.character(str_sub(obj_seq_type, 1, 4)), NA_character_),  # appropriation object\n         sequence = ifelse(transfer == 0, as.character(str_sub(obj_seq_type, 5,6)), NA_character_),\n         type = ifelse(transfer == 0, str_sub(obj_seq_type, 7,8), NA_character_)    # appropriation type\n         )\n\n\n\nthe initial combined and years of data are saved as dataframes named exp_1998_2023 and rev_1998_2023. These are then saved as exp_temp and rev_temp while recoding variables. This is BEFORE creating Fiscal Future category groups and further data cleaning done in the Calculating the Fiscal Gap page.\n\nUpdate Agencies: Some agencies have merged with others or changed names over time.\n[[ TO DO: Add appendix item of Current agencies (with indented past agencies) from the Methodology Document. ]]\n\n\nCode\n# recodes old agency numbers to consistent agency number\nexp_temp &lt;- exp_temp %&gt;% \n\n  mutate(agency = case_when(\n\n    (agency==\"438\"| agency==\"475\" |agency == \"505\") ~ \"440\",\n    # financial institution &  professional regulation &\n     # banks and real estate  --&gt; coded as  financial and professional reg\n\n    agency == \"473\" ~ \"588\", # nuclear safety moved into IEMA\n\n    (agency ==\"531\" | agency ==\"577\") ~ \"532\", # coded as EPA\n\n    (agency ==\"556\" | agency == \"538\") ~ \"406\", # coded as agriculture\n\n    agency == \"560\" ~ \"592\", # IL finance authority (fire trucks and agriculture stuff)to state fire marshal\n\n    agency == \"570\" & fund == \"0011\" ~ \"494\",   # city of Chicago road fund to transportation\n    TRUE ~ (as.character(agency)))) \n\n# \n# exp_temp &lt;- exp_temp %&gt;% filter(!is.na(fy))\n# ## Fill in missing names for funds\n# exp_temp &lt;- exp_temp  %&gt;%\n#   select(-c(agency_name)) %&gt;%\n#   left_join(funds_exp) %&gt;%\n#   left_join(agencies_exp)\n\n\nFor aggregating revenue, use the rev_1998_2023 file, join the funds_ab_in_2023 file to it, and then join the ioc_source_type file. Remember: You need to update the funds_ab_in and ioc_source_type file every year!\n\nrev_temp &lt;- inner_join(rev_1998_2023, funds_ab_in_2023, by = \"fund\") %&gt;% \n  arrange(source) \n\nfunds_rev &lt;- rev_temp %&gt;% distinct(fund, fund_name_ab) %&gt;% filter(!is.na(fund_name_ab))\n\nagencies_rev &lt;- rev_temp %&gt;% distinct(agency, agency_name) %&gt;% filter(!is.na(agency_name)) %&gt;%\n  mutate(agency = as.character(agency))\n\n\n\n# need to update the ioc_source_type file every year! \nioc_source_type &lt;- readxl::read_xlsx(\"./data/ioc_source_updated23_AWM.xlsx\")\n\nrev_temp &lt;- left_join(rev_temp, ioc_source_type, by = \"source\")\n\nsources_rev &lt;- rev_temp %&gt;% distinct(source, source_name_AWM) %&gt;% filter(!is.na(source_name_AWM))\n\n\n# fund info to revenue for all years\nrev_temp &lt;- rev_temp %&gt;% \n  select(-c(fund_name, agency_name, \n            source_name_AWM))  %&gt;% \n  left_join(funds_rev) %&gt;%\n  left_join(sources_rev)\n\n\n\n\n\n# automatically used source, source name does not match for the join to work using source_name\n\n# recodes old agency numbers to consistent agency number\nrev_temp &lt;- rev_temp %&gt;% \n\n  mutate(agency = case_when(\n    (agency==\"438\"| agency==\"475\" |agency == \"505\") ~ \"440\", # financial institution &  professional regulation &\n     # banks and real estate  --&gt; coded as  financial and professional reg\n\n    agency == \"473\" ~ \"588\", # nuclear safety moved into IEMA\n    (agency ==\"531\" | agency ==\"577\") ~ \"532\", # coded as EPA\n    (agency ==\"556\" | agency == \"538\") ~ \"406\", # coded as agriculture\n    agency == \"560\" ~ \"592\", # IL finance authority (fire trucks and agriculture stuff)to state fire marshal\n    agency == \"570\" & fund == \"0011\" ~ \"494\",   # city of Chicago road fund to transportation\n\n    TRUE ~ (as.character(agency)))) %&gt;%\n  #left_join(sources_rev) %&gt;%\n  left_join(agencies_rev) # add correct agency names back in\n\n\n\n13.0.4 Export Intermediate Files\n\n\nCode\nwrite_csv(rev_temp, file = \"./data/rev_temp.csv\")\n\nwrite_csv(exp_temp, file = \"./data/exp_temp.csv\")\n\n\n\n\n\n\n\n\nTip\n\n\n\nThe exp_temp.csv file and rev_temp.csv file are most likely the data that non-Fiscal Future researchers would want to use for their own analyses. These files should have consistent agencies and funds tracked from 1998 to the present.",
    "crumbs": [
      "About",
      "Methodology",
      "<span class='chapter-number'>13</span>  <span class='chapter-title'>Gathering and Cleaning Data!</span>"
    ]
  },
  {
    "objectID": "past-mistakes.html",
    "href": "past-mistakes.html",
    "title": "14  Past Report Corrections",
    "section": "",
    "text": "14.1 Yearly Change Tables",
    "crumbs": [
      "About",
      "Methodology",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Past Report Corrections</span>"
    ]
  },
  {
    "objectID": "past-mistakes.html#yearly-change-tables",
    "href": "past-mistakes.html#yearly-change-tables",
    "title": "14  Past Report Corrections",
    "section": "",
    "text": "(b) Yearly Change in Expenditures\n\n\n\n\n\n\n\n\n\n\nEXPENDITURE CATEGORY\nFY 2023 ($ BILLIONS)\nFY 2022 ($ BILLIONS)\n1-YEAR CHANGE\n25-YEAR CAGR\n\n\n\n\nMedicaid\n32.4\n28.7\n13.1%\n7.4%\n\n\nK-12 Education\n14.7\n13.4\n9.9%\n4.3%\n\n\nLocal Govt Revenue Sharing\n10.9\n10.3\n5.4%\n4.7%\n\n\nHuman Services\n8.8\n7.3\n21.3%\n3.3%\n\n\nState Pension Contribution\n6.8\n6.5\n5.1%\n10.5%\n\n\nTransportation\n5.0\n4.3\n16.3%\n3.8%\n\n\nState Employee Healthcare\n3.0\n3.0\n-0.1%\n5.8%\n\n\nUniversity Education\n2.5\n2.3\n12.5%\n0.8%\n\n\nDebt Service\n2.0\n2.0\n-2.9%\n5.7%\n\n\nRevenue\n2.0\n1.8\n8.0%\n6.4%\n\n\nTollway\n1.9\n2.1\n-9.9%\n6.8%\n\n\nCorrections\n1.7\n1.5\n13.5%\n2.2%\n\n\nPublic Safety\n1.7\n1.7\n1.2%\n5.7%\n\n\nChildren & Family Services\n1.6\n1.3\n26.0%\n0.8%\n\n\nCommunity Development\n1.5\n1.4\n7.7%\n4.8%\n\n\nAll Other Expenditures **\n14.0\n12.2\n14.4%\n5.7%\n\n\nTotal Expenditures\n110.6\n99.8\n10.8%\n5.2%\n\n\n\n\n\n\n(c) Yearly Change in Revenue Sources\n\n\n\n\n\n\n\n\n\n\nREVENUE CATEGORY\nFY 2023 ($ BILLIONS)\nFY 2022 ($ BILLIONS)\n1-YEAR CHANGE\n25-YEAR CHANGE\n\n\n\n\nIncome Tax\n22.1\n23.8\n-7.3%\n5.1%\n\n\nFederal Medicaid Reimbursements\n20.2\n19.0\n6.1%\n7.5%\n\n\nSales Tax\n16.2\n15.4\n4.8%\n3.3%\n\n\nFederal Other\n10.9\n19.4\n-43.9%\n4.3%\n\n\nCorporate Income Tax\n10.1\n9.7\n4.3%\n7.6%\n\n\nMedical Provider Assessments\n4.1\n3.7\n9.5%\n8.4%\n\n\nReceipts from Revenue Producing\n2.6\n2.4\n8.5%\n5.2%\n\n\nMotor Fuel Taxes\n2.5\n2.5\n1.5%\n2.7%\n\n\nFederal Transportation\n2.1\n1.8\n15.3%\n3.8%\n\n\nLicenses, Fees, Registration\n2.1\n1.9\n9.2%\n7.9%\n\n\nAll Other Sources **\n15.2\n13.3\n14.4%\n4.3%\n\n\nTotal Revenue\n108.1\n113.0\n-4.4%\n5.1%\n\n\n\nThe Fiscal Gap was reported to be larger than it was due to excluding fund 0278 (Income Tax Refund Fund) and manually subtracting Tax Refunds from the Income and Corporate Tax Revenue. This resulted in an extra $2+ Billion being subtracted from the revenue side and an increased fiscal gap.\n\n\n\n\n\n14.1.1 Other comments on past reports:\nIn the FY2013 to FY2014 reports, the fiscal gap changed by over $4 billion in the 2010 calculations alone (the FY2013 report had around $12 billion gap and then FY14 report had around $8 billion for the fiscal gap).\nFY20 vs FY23 reports:\nOutput created for the FY20 report had $3.622 billion for Debt Service, whereas the value is 1.947 billion using the FY23 methodology. State Pension calculations also had $3 or $4 billion changes in aggregate expenditures (9.2 vs 5.3 billion) each year.\n\nThere have been other minor changes in how the fiscal gap is calculated over the years. For example, various methodology documents referenced including the debt principal and interest. Some expenditure categories created by the past researchers included certain items in some years, and excluded them in others. This is partly due to changes in how the research was conducted (Excel tables, Stata, and then R) and due to changing ideology of what should or should not be considered as a reoccuring revenue source or expense. Most revenue and expenditure categories have remained consistent, with nearly identical totals when calculated by various researchers over the years, but some categories have varied in totals and calculation methods.\nThese differences impacted the overall Fiscal Gap calculated in previous reports:\n\nDebt Service (Over estimated in some years due to counting Principal & Interest instead of just Interest as a cost of debt)\nPensions (over estimated due to including object 4430 for retirement benefits paid to employees instead of object 4431 for state payments into the pension fund)\nEmployee Healthcare (over estimated? - I think this was almost a mistake in FY21 and FY22 papers but then it was caught before being published - somewhere there is a printed excel sheet of healthcare expenditures that is highlighted, find it and double check.)\nIndividual Income Tax Revenue (under estimated from refund fund subtraction)",
    "crumbs": [
      "About",
      "Methodology",
      "<span class='chapter-number'>14</span>  <span class='chapter-title'>Past Report Corrections</span>"
    ]
  }
]