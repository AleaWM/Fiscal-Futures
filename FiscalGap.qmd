# Yearly Fiscal Gap {#sec-Yearly-Fiscal-Gap}

For details on how tables and graphs were created, please see @sec-all-code.

```{r setup, warning=FALSE, message=FALSE}

library(tidyverse)
library(haven)
library(formatR)
library(lubridate)
library(smooth)
library(forecast)
library(scales)
library(kableExtra)
library(ggplot2)
library(readxl)
library(tidyverse)
library(data.table)
library(quantmod)
library(geofacet)
library(janitor)


knitr::opts_chunk$set(warning = FALSE, message = FALSE, error = TRUE)

```

Graphs made from `aggregated_totals_long` dataframe.

![](docs/Everything_files/figure-html/fig-withandwithout-stateCURE-1.png)

```{r eval=FALSE}
aggregated_totals_long %>%  
  filter(type == "exp") %>% # uses only expenditures
  ggplot(aes(x = Year, y = Dollars, group = Category, color = Category)) +
  geom_line()+
    xlab("Year") + 
    ylab("Millions of Dollars")  +
    ggtitle("Illinois Expenditures by Category")

aggregated_totals_long %>%  
  filter(type == "rev") %>% #uses only revenues
  ggplot(aes(x = Year, y = Dollars, group = Category, color = Category)) +
  geom_line()+
    xlab("Year") + 
    ylab("Millions of Dollars")  +
    ggtitle("Illinois Revenues by Category")
  


```

**Expenditure and revenue amounts in millions of dollars:**

![](docs/Everything_files/figure-html/fig-bargraphs-largest-expandrev-cats-2.png)

![](docs/Everything_files/figure-html/fig-bargraphs-largest-expandrev-cats-1.png)

**Changes in Categories - 2021 to 2022** Dot Plots:

![](docs/Everything_files/figure-html/fig-dotplots-1.png)

![](docs/Everything_files/figure-html/fig-dotplots-2.png)

```{r, eval=FALSE}
rev_long %>%
    filter(Year == "2022" | Year == "2021") %>%
  mutate(Year = as.character(Year)) %>%
  ggplot(aes(x = Dollars, y = reorder(Category, Dollars))) +
  geom_line(aes(group = Category) )+
    geom_text(aes(x = ifelse(Year == "2022", as.numeric(Dollars), NA),  label = ifelse(Year == "2022", Category_name, "")),  
            hjust = -0.2,
            size = 2.8) +
         geom_point(aes(color = Year), size=2)  +
  labs(title = "2021 to 2022 Change in Revenue", x = "Millions of Dollars" , y = "",  caption = "")  +
   scale_fill_manual(values = c("#d62828", "#003049"), labels = c("FY 2021", "FY 2022"))+
    scale_color_manual(values = c("#d62828", "#003049")) +   
  theme_classic()+ 
    theme(
   legend.position = "bottom" ,
  axis.text.y = element_blank(),
  axis.ticks.y = element_blank(),
  axis.line.y.left  = element_blank(),
 # axis.line.x = element_blank(),
  #  axis.title.y = element_blank(),
 # axis.ticks.x = element_blank()
 )+
  scale_x_continuous(limits = c(0, 31000), labels = comma)




exp_long %>%
    filter(Year == "2022" | Year == "2021") %>%
  mutate(Year = as.character(Year)) %>%
  ggplot(aes(x = Dollars, y = reorder(Category, Dollars))) +
  geom_line(aes(group = Category) )+
  geom_text(aes(x = ifelse(Year == "2022", (as.numeric(Dollars)+1100), NA),  
                label = ifelse(Year == "2022", Category_name, "")),  
            hjust = 0,
            size = 2.8) +
  geom_point(aes(color = Year), size=2 #, alpha = 0.5
             )  +
  labs(title = "2021 to 2022 Change in Expenditures", x = "Millions of Dollars" , y = "",  caption = "")  +
   scale_fill_manual(values = c("#d62828", "#003049"), labels = c("FY 2021", "FY 2022"))+
    scale_color_manual(values = c("#d62828", "#003049")) +

   theme_classic()+ 
    theme(
    legend.position = "bottom" ,
  axis.text.y = element_blank(),
  axis.ticks.y = element_blank(),
  axis.line.y.left  = element_blank(),
  #axis.line.x = element_blank(),
   # axis.title.y = element_blank(),
  #axis.ticks.x = element_blank()
  )+
  scale_x_continuous(limits = c(0, 31000), labels = comma)
```

### Top 3 Revenues

```{r eval=FALSE}

annotation <- data.frame(
  x = c(2012, 2019, 2012),
  y = c(16000, 10000, 5000),  
  label = c("Individual Income Tax", "Sales Tax", "Corporate Income Tax")
)

top3 <- rev_long  %>% 
  filter(Category == "02" | Category == "03" | Category == "06") %>%
  ggplot()+
  geom_line(aes(x=Year, y=Dollars, color = Category_name)) + 
  geom_text(data = annotation, aes(x=x, y=y, label=label))+
    theme_bw() +
  
  scale_y_continuous(labels = comma)+
  scale_linetype_manual(values = c("dotted", "dashed", "solid")) +

  theme(legend.position = "none")+
  labs(title = "Top 3 Own Source Revenues", 
       subtitle = "Individual Income Taxes, Sales Tax, and Corporate income taxes",
       y = "Nominal Dollars (in Millions)") 
  

top3
```

![](docs/Everything_files/figure-html/fig-top3-revenues-1.png)

### Own Source and Fed Transfers

```{r eval=FALSE}

ownsource_rev <- rev_long %>%
  filter(!Category %in% c("57", "58", "59")) %>%
  group_by(Year) %>% 
  summarize(Dollars = sum(Dollars))

# ownsource_rev %>% 
#   ggplot()+geom_line(aes(x=Year, y=Dollars)) + 
#   labs(title = "Own Source Revenues", subtitle = "Total own source revenue", y = "Millions of Dollars")

fed_rev <- ff_rev %>% select(fy, rev_57, rev_58, rev_59) %>%
  mutate(fed_total = rev_57+rev_58+rev_59)


annotation <- data.frame(
  x = c(2010, 2010),
  y = c(50000, 25000),  
  label = c("Own Source Revenue", "Federal Transfers")
)


ggplot() + 
  geom_line(data = ownsource_rev, aes(x=Year, y=Dollars), color = "Red") + 
  geom_line(data = fed_rev, aes(x=fy, y=fed_total), color = "Black") + 
    geom_text(data = annotation, aes(x=x, y=y, label=label))+
    scale_y_continuous(labels = comma)+
  theme(legend.position = "none")+

  theme_classic()+
  labs(title = "Own Source Revenue and Federal Transfers", 
  y = "Nominal Dollars (in Millions)")


```

![](docs/Everything_files/figure-html/fig-ownsource-and-fed-revenue-1.png)
